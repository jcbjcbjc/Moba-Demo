{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/Managers/FollowManager.ts"],"names":["FollowManager","EventManager","EventType","proto","LogUtil","UserService","FollowListResponse","NUser","UserStatusChangeResponse","Init","Instance","addListener","OnFollowList","OnUserStatusChange_UI","param","response","log","follows","dispatch","FollowListRefieshUI","SendFollow","userId","isFollow","followUserId","i","length","user","j","userStatusChanges","userStatusChange","id","status"],"mappings":";;;oFAOaA,a;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAPJC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,S,iBAAAA,S;;AACFC,MAAAA,K;;AACEC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,W,iBAAAA,W;;;;;;;OACH;AAACC,QAAAA,kBAAD;AAAqBC,QAAAA,KAArB;AAA4BC,QAAAA;AAA5B,O;;;;+BAEOR,a,GAAN,MAAMA,aAAN,CAAmB;AAAA;AAAA,2CAGP,IAHO;;AAAA,gDAIK,CAJL;;AAAA,4CAKE,KALF;AAAA;;AAKU;AAEzBS,QAAAA,IAAI,GAAE;AACT;AAAA;AAAA,4CAAaC,QAAb,CAAsBC,WAAtB,CAAkC;AAAA;AAAA,sCAAUC,YAA5C,EAA0D,KAAKA,YAA/D,EAA6E,IAA7E;AACA;AAAA;AAAA,4CAAaF,QAAb,CAAsBC,WAAtB,CAAkC;AAAA;AAAA,sCAAUE,qBAA5C,EAAkE,KAAKA,qBAAvE,EAA6F,IAA7F;AACH;AAED;AACJ;AACA;;;AACYD,QAAAA,YAAY,CAACE,KAAD,EAAmB;AACnC,cAAIC,QAAQ,GAAGD,KAAK,CAAC,CAAD,CAApB;AACA;AAAA;AAAA,kCAAQE,GAAR,CAAY,kBAAZ,EAAgCD,QAAQ,CAACE,OAAzC;AACA,eAAKA,OAAL,GAAaF,QAAQ,CAACE,OAAtB;AACA;AAAA;AAAA,4CAAaP,QAAb,CAAsBQ,QAAtB,CAA+B;AAAA;AAAA,sCAAUC,mBAAzC;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACWC,QAAAA,UAAU,CAACC,MAAD,EAAeC,QAAf,EAAgC;AAC7C,eAAKC,YAAL,GAAkBF,MAAlB;AACA,eAAKC,QAAL,GAAcA,QAAd;AACA;AAAA;AAAA,0CAAYZ,QAAZ,CAAqBU,UAArB,CAAgCC,MAAhC,EAAwCC,QAAxC;AACH;AAED;AACJ;AACA;;;AACYT,QAAAA,qBAAqB,CAACC,KAAD,EAAY;AACrC,cAAIC,QAAQ,GAAGD,KAAK,CAAC,CAAD,CAApB,CADqC,CAErC;;AACA,cAAG,CAAC,KAAKG,OAAT,EAAiB;AACb;AACH;;AACD,eAAI,IAAIO,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKP,OAAL,CAAaQ,MAA3B,EAAkCD,CAAC,EAAnC,EAAsC;AAClC,gBAAIE,IAAI,GAAC,KAAKT,OAAL,CAAaO,CAAb,CAAT;;AACA,iBAAI,IAAIG,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGZ,QAAQ,CAACa,iBAAT,CAA2BH,MAA5C,EAAoDE,CAAC,EAArD,EAAwD;AACrD,kBAAIE,gBAAgB,GAAEd,QAAQ,CAACa,iBAAT,CAA2BD,CAA3B,CAAtB;;AACA,kBAAGD,IAAI,CAACI,EAAL,IAASD,gBAAgB,CAACR,MAA7B,EAAoC;AAChCK,gBAAAA,IAAI,CAACK,MAAL,GAAYF,gBAAgB,CAACE,MAA7B;AACH;AACH;AACJ;;AACD;AAAA;AAAA,4CAAarB,QAAb,CAAsBQ,QAAtB,CAA+B;AAAA;AAAA,sCAAUC,mBAAzC;AACH;;AApDqB,O;;sBAAbnB,a,cAC4B,IAAIA,aAAJ,E","sourcesContent":["import { EventManager } from \"../UI/Common/Event/EventManager\";\r\nimport { EventType } from \"../UI/Common/Event/EventType\";\r\nimport proto from '../../Proto/proto.js';\r\nimport { LogUtil } from \"../Log/LogUtil\";\r\nimport { UserService } from \"../Services/UserService\";\r\nconst {FollowListResponse, NUser, UserStatusChangeResponse} = proto;\r\n\r\nexport class FollowManager{\r\n    public static Instance:FollowManager=new FollowManager();\r\n\r\n    public follows=null as unknown as Array<NUser>;\r\n    public followUserId:number=0;  //关注/取消关注用户id\r\n    public isFollow:boolean=false;  //是否关注\r\n\r\n    public Init(){\r\n        EventManager.Instance.addListener(EventType.OnFollowList, this.OnFollowList, this)\r\n        EventManager.Instance.addListener(EventType.OnUserStatusChange_UI,this.OnUserStatusChange_UI,this);\r\n    }\r\n\r\n    /**\r\n     * 我的关注列表响应\r\n     */\r\n    private OnFollowList(param: any): void {\r\n        let response = param[0] as FollowListResponse;\r\n        LogUtil.log(\"OnFollowList:{0}\", response.follows);\r\n        this.follows=response.follows as unknown as Array<NUser>;\r\n        EventManager.Instance.dispatch(EventType.FollowListRefieshUI);\r\n    }\r\n\r\n    /**\r\n     * 请求关注\r\n     * @param userId \r\n     * @param isFollow \r\n     */\r\n    public SendFollow(userId:number,isFollow:boolean){\r\n        this.followUserId=userId;\r\n        this.isFollow=isFollow;\r\n        UserService.Instance.SendFollow(userId, isFollow);\r\n    }\r\n\r\n    /**\r\n     * 用户状态变更响应\r\n     */\r\n    private OnUserStatusChange_UI(param: any){\r\n        let response = param[0] as UserStatusChangeResponse;\r\n        //更新数据\r\n        if(!this.follows){\r\n            return;\r\n        }\r\n        for(let i=0;i<this.follows.length;i++){\r\n            let user=this.follows[i] as NUser;\r\n            for(let j=0; j < response.userStatusChanges.length; j++){\r\n               let userStatusChange= response.userStatusChanges[j];\r\n               if(user.id==userStatusChange.userId){\r\n                   user.status=userStatusChange.status;\r\n               }\r\n            }\r\n        }\r\n        EventManager.Instance.dispatch(EventType.FollowListRefieshUI);\r\n    }\r\n}"]}