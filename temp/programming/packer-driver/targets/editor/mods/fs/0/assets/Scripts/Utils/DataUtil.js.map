{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/Utils/DataUtil.ts"],"names":["DataUtil","proto","DataManager","NUser","AddAttrType","CharacterClass","queryListAddAttrByType","addAttrType","addAttrs","Instance","addAttrArr","key","addAttr","Type","push","queryObjAddAttrByType","spot","toString","Range","queryListBySpawnID","spawnID","spawnRules","spawnList","spawnRuleDefine","SpawnID","queryCharactersByClass","characterClass","charactersList","Array","charactersMap","characters","id","define","Class","querySpawnRulesByMonID","monID","SpawnMonID"],"mappings":"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","sourcesContent":["import proto from '../../Proto/proto.js';\r\nconst { NUser, AddAttrType, CharacterClass }=proto;\r\nimport { AddAttrDefine } from \"../Data/AddAttrDefine\";\r\nimport { DataManager } from \"../Managers/DataManager\";\r\nimport { SpawnRuleDefine } from '../Data/SpawnRuleDefine.js';\r\nimport { CharacterDefine } from '../Data/CharacterDefine.js';\r\n\r\n/**\r\n * data工具类\r\n */\r\nexport class DataUtil{\r\n \r\n    /**\r\n     * 根据类型查询加属性列表\r\n     * @param addAttrType \r\n     */\r\n    public static queryListAddAttrByType(addAttrType:AddAttrType):Array<AddAttrDefine>{\r\n       let addAttrs=DataManager.Instance.addAttrs;\r\n       let addAttrArr=[];\r\n       for(let key in addAttrs){\r\n           let addAttr=addAttrs[key];\r\n           if(addAttr.Type==addAttrType){   //判断类型\r\n              addAttrArr.push(addAttr);\r\n           }\r\n       }\r\n       return addAttrArr;\r\n    }\r\n\r\n    /**\r\n     * 根据类型查询加属性类型\r\n     * @param addAttrType \r\n     */\r\n    public static queryObjAddAttrByType(addAttrType:AddAttrType,spot:number):AddAttrDefine{\r\n        // console.log(AddAttrType[addAttrType])\r\n        let addAttrs=DataManager.Instance.addAttrs;\r\n        for(let key in addAttrs){\r\n            let addAttr=addAttrs[key];\r\n            if(addAttr.Type.toString()==AddAttrType[addAttrType] && addAttr.Range[0] <= spot && spot <= addAttr.Range[1]){   //判断类型点数范围\r\n                return addAttr;\r\n            }\r\n        }\r\n        return null as unknown as AddAttrDefine;\r\n    }\r\n\r\n    /**\r\n     * 根据刷怪id查询\r\n     * @param spawnID 刷怪id\r\n     */\r\n    public static queryListBySpawnID(spawnID:number):Array<SpawnRuleDefine>{\r\n        let spawnRules = DataManager.Instance.spawnRules;\r\n        let spawnList=[];\r\n        for(let key in spawnRules){\r\n            let spawnRuleDefine=spawnRules[key];\r\n            if(spawnRuleDefine.SpawnID==spawnID){\r\n                spawnList.push(spawnRuleDefine);\r\n            }\r\n        }\r\n        return spawnList;\r\n    }\r\n\r\n    /**\r\n     * 更加角色类型查询角色配置\r\n     * @param characterClass 角色类型\r\n     */\r\n    public static queryCharactersByClass(characterClass:CharacterClass):Array<CharacterDefine>{\r\n        let charactersList=new Array<CharacterDefine>();\r\n        let charactersMap=DataManager.Instance.characters;\r\n        for(let id in charactersMap){\r\n           let define=charactersMap[id];\r\n           if(define.Class.toString() == CharacterClass[characterClass]){\r\n              charactersList.push(define);\r\n           }\r\n        }\r\n        return charactersList;\r\n    }\r\n\r\n    /**\r\n     * 根据怪物id查询怪物配置\r\n     * @param monID 怪物id\r\n     */\r\n    public static querySpawnRulesByMonID(monID:number):Array<SpawnRuleDefine>{\r\n        let spawnRules = DataManager.Instance.spawnRules;\r\n        let spawnList=[];\r\n        for(let key in spawnRules){\r\n            let spawnRuleDefine=spawnRules[key];\r\n            if(spawnRuleDefine.SpawnMonID==monID){\r\n                spawnList.push(spawnRuleDefine);\r\n            }\r\n        }\r\n        return spawnList;\r\n    }\r\n}"]}