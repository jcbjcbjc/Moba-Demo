{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/UI/Common/Event/EventManager.ts"],"names":["EventManager","EventHandler","addListener","type","listener","listenerObj","arr","dict","Array","i","len","length","push","removeListener","splice","removeAll","keys","Object","j","dispatch","param","dealMsg","undefined","dispatchObj","listeners","res","apply","createButtonClickEvent","node","component","handler","clickEventHandler","target"],"mappings":"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","sourcesContent":["import { EventHandler, Node } from \"cc\";\r\n\r\nexport class EventManager{\r\n\r\n    private dict: any={};\r\n    public static Instance:EventManager=new EventManager();\r\n\r\n    /**\r\n     * 添加消息监听\r\n     * @param type 消息唯一标识\r\n     * @param listener 侦听函数\r\n     * @param listenerObj 侦听函数所属对象\r\n     *\r\n     */\r\n    public addListener(type: string, listener: Function, listenerObj: any): void {\r\n        var arr: Array<any> = this.dict[type];\r\n        if (arr == null) {\r\n            arr = new Array<any>();\r\n            this.dict[type] = arr;\r\n        }\r\n\r\n        //检测是否已经存在\r\n        var i: number = 0;\r\n        var len: number = arr.length;\r\n        for (i; i < len; i++) {\r\n            if (arr[i][0] == listener && arr[i][1] == listenerObj) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        arr.push([listener, listenerObj]);\r\n    }\r\n\r\n    /**\r\n     * 移除消息监听\r\n     * @param type 消息唯一标识\r\n     * @param listener 侦听函数\r\n     * @param listenerObj 侦听函数所属对象\r\n     */\r\n    public removeListener(type: string, listener: Function, listenerObj: any): void {\r\n        var arr: Array<any> = this.dict[type];\r\n        if (arr == null) {\r\n            return;\r\n        }\r\n\r\n        var i: number = 0;\r\n        var len: number = arr.length;\r\n        for (i; i < len; i++) {\r\n            if (arr[i][0] == listener && arr[i][1] == listenerObj) {\r\n                arr.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (arr.length == 0) {\r\n            this.dict[type] = null;\r\n            delete this.dict[type];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移除某一对象的所有监听\r\n     * @param listenerObj 侦听函数所属对象\r\n     */\r\n    public removeAll(listenerObj: any): void {\r\n        var keys = Object.keys(this.dict);\r\n        for (var i: number = 0, len = keys.length; i < len; i++) {\r\n            var type = keys[i];\r\n            var arr: Array<any> = this.dict[type];\r\n            for (var j = 0; j < arr.length; j++) {\r\n                if (arr[j][1] == listenerObj) {\r\n                    arr.splice(j, 1);\r\n                    j--;\r\n                }\r\n            }\r\n\r\n            if (arr.length == 0) {\r\n                this.dict[type] = null;\r\n                delete this.dict[type];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 触发消息\r\n     * @param type 消息唯一标识\r\n     * @param param 消息参数\r\n     *\r\n     */\r\n    public dispatch(type: string, ...param: any): void {\r\n        if (this.dict[type] == null) {\r\n            return;\r\n        }\r\n        this.dealMsg(type,undefined,param);\r\n    }\r\n\r\n       /**\r\n     * 触发指定对象的消息\r\n     * @param type 消息唯一标识\r\n     * @param param 消息参数\r\n     *\r\n     */\r\n    public dispatchObj(type: string,listenerObj: any, ...param: any): any {\r\n        if (this.dict[type] == null) {\r\n            return;\r\n        }\r\n       return this.dealMsg(type,listenerObj,param);\r\n    }\r\n\r\n     /**\r\n     * 处理一条消息\r\n     */\r\n    private dealMsg(type: string,listenerObj: any, ...param: any): any {\r\n        var listeners: Array<any> = this.dict[type];\r\n        var i: number = 0;\r\n        var len: number = listeners.length;\r\n        var listener: Array<any> = null as unknown as Array<any>;\r\n        let res;\r\n        while (i < len) {\r\n            listener = listeners[i];\r\n            // console.log('listenerObj='+listenerObj+'，listener[1]='+listener[1])\r\n            if(!listenerObj || (listenerObj && listenerObj == listener[1])){  //派发\r\n                res=listener[0].apply(listener[1], param);\r\n            }\r\n            if (listeners.length != len) {\r\n                len = listeners.length;\r\n                i--;\r\n            } \r\n            i++;\r\n        }\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * 创建button点击事件\r\n     */\r\n    public createButtonClickEvent(node:Node,component:string,handler:string):EventHandler{\r\n        var clickEventHandler = new EventHandler();\r\n        clickEventHandler.target=node;\r\n        clickEventHandler.component=component;\r\n        clickEventHandler.handler=handler;\r\n        return clickEventHandler;\r\n    }\r\n}"]}