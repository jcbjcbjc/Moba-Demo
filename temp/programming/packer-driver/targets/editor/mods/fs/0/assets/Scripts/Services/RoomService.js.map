{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/Services/RoomService.ts"],"names":["RoomService","director","LogUtil","proto","NetClient","MessageBox","MessageBoxType","EventManager","EventType","User","TipsManager","RandomUtil","LocalStorageUtil","BattleMode","BattleGlobal","NetMessage","NetMessageRequest","Result","MyRoomRequest","MyRoomResponse","InviteRequest","TeamType","InviteResponse","KickOutRequest","KickOutResponse","RoomStartGameRequest","RoomStartGameResponse","NickNameSearchRequest","NickNameSearchResponse","AddRoomRequest","AddRoomResponse","OutRoomRequest","OutRoomResponse","GameOver2Request","UploadBiFenRequest","AddLiveRequest","AddLiveResponse","ValidateOpenRoomRequest","ValidateOpenRoomResponse","Init","Instance","addListener","OnMyRoom","OnInviteResponse","OnInviteRequest","OnKickOut","OnRoomStartGame","OnNickNameSearch","OnAddRoomRequest","OnAddRoomResponse","OnOutRoom","OnAddLiveResponse","OnValidateOpenRoom","SendMyRoom","log","message","Request","myRoomReq","SendMessage","param","response","room","dispatch","OnMyRoom_UI","SendInviteRequest","toUserId","toNickName","teamType","inviteReq","fromUserId","user","id","fromNickName","nickname","SendInviteResponse","accept","inviteRequest","inviteRes","result","Success","Failed","errormsg","request","confirmObj","Show","Confirm","this_","UIMessageBox_OnClickYes","UIMessageBox_OnClickNo","showTips","loadScene","OnMyRoom_RefieshUI","SendKickOut","userId","kickOutReq","SendRoomStartGame","roomStartGameReq","OnRoomStartGame_UI","SendNickNameSearch","nickName","nickNameSearchReq","OnNickNameSearch_UI","roomUser","SendAddRoomRequest","roomId","addRoomReq","SendAddRoomResponse","addRoomRequest","addRoomRes","teamConfirmObj","My","Enemy","SendOutRoom","outRoomReq","SendGameOver2","gameOver2Req","ipPortStr","SendUploadBiFen","biFen","uploadBiFenReq","SendAddLive","targetUserId","targetLiveUserId","addLiveReq","RemoveItem","allFrameHandlesKey","battleMode","Live","seed","randomSeed","SendValidateOpenRoom","validateOpenRoomReq"],"mappings":"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","sourcesContent":["import { LogUtil } from \"../Log/LogUtil\";\r\nimport proto from '../../Proto/proto.js';\r\nimport { NetClient } from \"../Network/NetClient\";\r\nimport { MessageBox, MessageBoxType } from \"../UI/Common/MessageBox\";\r\nimport { EventManager } from \"../UI/Common/Event/EventManager\";\r\nimport { EventType } from \"../UI/Common/Event/EventType\";\r\nimport { SocketConst } from \"../Network/SocketConst\";\r\nimport { User } from \"../Models/User\";\r\nimport { director } from \"cc\";\r\nimport { SoundManager } from \"../../Sound/SoundManager\";\r\nimport { SoundDefine } from \"../../Sound/SoundDefine\";\r\nimport { TipsManager } from \"../UI/TipsManager\";\r\nimport { RandomUtil } from \"../UI/Battle/Utils/RandomUtil\";\r\nimport { LocalStorageUtil } from \"../Utils/LocalStorageUtil\";\r\nimport { BattleMode } from \"../UI/Battle/enums/BattleMode\";\r\nimport { BattleGlobal } from \"../UI/Battle/Utils/BattleGlobal\";\r\nconst { NetMessage, NetMessageRequest,  Result, MyRoomRequest, MyRoomResponse, InviteRequest, TeamType, InviteResponse, KickOutRequest, \r\n    KickOutResponse, RoomStartGameRequest, RoomStartGameResponse, NickNameSearchRequest, NickNameSearchResponse, \r\n    AddRoomRequest, AddRoomResponse, OutRoomRequest, OutRoomResponse, GameOver2Request, UploadBiFenRequest, AddLiveRequest, AddLiveResponse,\r\n    ValidateOpenRoomRequest, ValidateOpenRoomResponse } = proto;\r\n\r\nexport class RoomService{\r\n   \r\n  public static Instance: RoomService = new RoomService();\r\n\r\n   public Init() {\r\n    EventManager.Instance.addListener(EventType.OnMyRoom, this.OnMyRoom, this)\r\n    EventManager.Instance.addListener(EventType.OnInviteResponse, this.OnInviteResponse, this)\r\n    EventManager.Instance.addListener(EventType.OnInviteRequest, this.OnInviteRequest, this)\r\n    EventManager.Instance.addListener(EventType.OnKickOut, this.OnKickOut, this)\r\n    EventManager.Instance.addListener(EventType.OnRoomStartGame, this.OnRoomStartGame, this)\r\n    EventManager.Instance.addListener(EventType.OnNickNameSearch, this.OnNickNameSearch, this)\r\n    EventManager.Instance.addListener(EventType.OnAddRoomRequest, this.OnAddRoomRequest, this)\r\n    EventManager.Instance.addListener(EventType.OnAddRoomResponse, this.OnAddRoomResponse, this)\r\n    EventManager.Instance.addListener(EventType.OnOutRoom, this.OnOutRoom, this)\r\n    EventManager.Instance.addListener(EventType.OnAddLiveResponse, this.OnAddLiveResponse, this)\r\n    EventManager.Instance.addListener(EventType.OnValidateOpenRoom, this.OnValidateOpenRoom, this)\r\n   }\r\n\r\n    /**\r\n     * 请求我的房间\r\n     */\r\n    public SendMyRoom(): void {\r\n        LogUtil.log(\"SendMyRoom\");\r\n        let message = new NetMessage();\r\n        message.Request = new NetMessageRequest();\r\n        message.Request.myRoomReq = new MyRoomRequest();\r\n        NetClient.Instance.SendMessage(message);\r\n    }\r\n\r\n    /**\r\n     * 我的房间响应\r\n     */\r\n    private OnMyRoom(param: any): void {\r\n        let response = param[0] as MyRoomResponse;\r\n        LogUtil.log(\"OnMyRoom:{0}\", response.room);\r\n        EventManager.Instance.dispatch(EventType.OnMyRoom_UI,response.room); \r\n    }\r\n\r\n    /**\r\n     * 发送邀请请求\r\n     */\r\n    public SendInviteRequest(toUserId:number, toNickName:string, teamType:TeamType): void {\r\n        LogUtil.log(\"SendInviteRequest\");\r\n        let message = new NetMessage();\r\n        message.Request = new NetMessageRequest();\r\n        message.Request.inviteReq = new InviteRequest();\r\n        message.Request.inviteReq.fromUserId=User.Instance.user.id;\r\n        message.Request.inviteReq.fromNickName=User.Instance.user.nickname;\r\n        message.Request.inviteReq.toUserId=toUserId;\r\n        message.Request.inviteReq.toNickName=toNickName;\r\n        message.Request.inviteReq.teamType=teamType;\r\n        NetClient.Instance.SendMessage(message);\r\n    }\r\n\r\n    /**\r\n     * 发送邀请响应\r\n     */\r\n    public SendInviteResponse(accept:boolean, inviteRequest:InviteRequest): void {\r\n        LogUtil.log(\"SendInviteResponse\");\r\n        let message = new NetMessage();\r\n        message.Request = new NetMessageRequest();\r\n        message.Request.inviteRes = new InviteResponse();\r\n        message.Request.inviteRes.result=accept?Result.Success:Result.Failed;\r\n        message.Request.inviteRes.errormsg='';\r\n        message.Request.inviteRes.inviteRequest=inviteRequest;\r\n        NetClient.Instance.SendMessage(message);\r\n    }\r\n\r\n    /**\r\n     * 收到邀请请求\r\n     */\r\n    private async OnInviteRequest(param: any) {\r\n        let request = param[0] as InviteRequest;\r\n        LogUtil.log(\"OnInviteRequest\", request);\r\n        let confirmObj= await MessageBox.Show(request.fromNickName+\"邀请你加入房间？\", \"邀请请求\", MessageBoxType.Confirm,\"接受\",\"拒绝\"); \r\n        let this_=this;\r\n        EventManager.Instance.addListener(EventType.UIMessageBox_OnClickYes,function(){\r\n            this_.SendInviteResponse(true,request);\r\n        },confirmObj);\r\n        EventManager.Instance.addListener(EventType.UIMessageBox_OnClickNo,function(){\r\n            this_.SendInviteResponse(false,request);\r\n        },confirmObj);\r\n    }\r\n\r\n    /**\r\n     * 收到邀请响应\r\n     */\r\n    private OnInviteResponse(param: any): void {\r\n        let response = param[0] as InviteResponse;\r\n        LogUtil.log(\"OnInviteResponse:{0}{1}\", response.result,response.errormsg);\r\n        TipsManager.Instance.showTips(response.errormsg);\r\n        if(response.result==Result.Success){\r\n            //被邀请者是当前用户\r\n            if(response.inviteRequest.toUserId==User.Instance.user.id){  \r\n                director.loadScene('Room');\r\n            }else{\r\n               EventManager.Instance.dispatch(EventType.OnMyRoom_RefieshUI); \r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 踢出请求\r\n     */\r\n    public SendKickOut(userId:number): void {\r\n        LogUtil.log(\"SendKickOut\");\r\n        let message = new NetMessage();\r\n        message.Request = new NetMessageRequest();\r\n        message.Request.kickOutReq = new KickOutRequest();\r\n        message.Request.kickOutReq.userId=userId;\r\n        NetClient.Instance.SendMessage(message);\r\n    }\r\n\r\n    /**\r\n     * 踢出响应\r\n     */\r\n    private OnKickOut(param: any): void {\r\n        let response = param[0] as KickOutResponse;\r\n        LogUtil.log(\"OnKickOut:{0}{1}\", response.result,response.errormsg);\r\n        // EventManager.Instance.dispatch(EventType.OnKickOut_UI,response); \r\n        EventManager.Instance.dispatch(EventType.OnMyRoom_RefieshUI); \r\n        TipsManager.Instance.showTips(response.errormsg);\r\n    }\r\n\r\n    /**\r\n     * 开始游戏请求\r\n     */\r\n    public SendRoomStartGame(): void {\r\n        LogUtil.log(\"SendRoomStartGame\");\r\n        let message = new NetMessage();\r\n        message.Request = new NetMessageRequest();\r\n        message.Request.roomStartGameReq = new RoomStartGameRequest();\r\n        NetClient.Instance.SendMessage(message);\r\n    }\r\n\r\n    /**\r\n     * 开始游戏响应\r\n     */\r\n    public OnRoomStartGame(param: any): void {\r\n        let response = param[0] as RoomStartGameResponse;\r\n        LogUtil.log(\"OnRoomStartGame{0}{1}：\",response.result,response.errormsg);\r\n        EventManager.Instance.dispatch(EventType.OnRoomStartGame_UI,response); \r\n        TipsManager.Instance.showTips(response.errormsg);\r\n    }\r\n\r\n    /**\r\n     * 昵称搜索请求\r\n     */\r\n    public SendNickNameSearch(nickName?:string): void {\r\n        LogUtil.log(\"SendNickNameSearch\");\r\n        let message = new NetMessage();\r\n        message.Request = new NetMessageRequest();\r\n        message.Request.nickNameSearchReq = new NickNameSearchRequest();\r\n        message.Request.nickNameSearchReq.nickName=nickName;\r\n        NetClient.Instance.SendMessage(message);\r\n    }\r\n\r\n     /**\r\n     * 昵称搜索响应\r\n     */\r\n    public OnNickNameSearch(param: any): void {\r\n        let response = param[0] as NickNameSearchResponse;\r\n        LogUtil.log(\"OnNickNameSearch\");\r\n        EventManager.Instance.dispatch(EventType.OnNickNameSearch_UI,response.roomUser); \r\n    }\r\n\r\n    /**\r\n     * 发送加入房间请求\r\n     */\r\n    public SendAddRoomRequest(roomId:number): void {\r\n        LogUtil.log(\"SendAddRoomRequest\");\r\n        let message = new NetMessage();\r\n        message.Request = new NetMessageRequest();\r\n        message.Request.addRoomReq = new AddRoomRequest();\r\n        message.Request.addRoomReq.roomId=roomId;\r\n        message.Request.addRoomReq.fromUserId=User.Instance.user.id;\r\n        message.Request.addRoomReq.fromNickName=User.Instance.user.nickname;\r\n        NetClient.Instance.SendMessage(message);\r\n    }\r\n\r\n    /**\r\n     * 发送加入房间响应\r\n     */\r\n    public SendAddRoomResponse(accept:boolean, teamType:TeamType, addRoomRequest:AddRoomRequest): void {\r\n        LogUtil.log(\"SendAddRoomResponse\");\r\n        let message = new NetMessage();\r\n        message.Request = new NetMessageRequest();\r\n        message.Request.addRoomRes = new AddRoomResponse();\r\n        message.Request.addRoomRes.result=accept?Result.Success:Result.Failed;\r\n        message.Request.addRoomRes.errormsg='';\r\n        message.Request.addRoomRes.teamType=teamType;\r\n        message.Request.addRoomRes.addRoomRequest=addRoomRequest;\r\n        NetClient.Instance.SendMessage(message);\r\n    }\r\n\r\n    /**\r\n     * 收到加入房间请求\r\n     */\r\n    private async OnAddRoomRequest(param: any) {\r\n        let request = param[0] as AddRoomRequest;\r\n        LogUtil.log(\"OnAddRoomRequest\", request);\r\n        let confirmObj= await MessageBox.Show(request.fromNickName+\"加入房间？\", \"加入房间\", MessageBoxType.Confirm,\"接受\",\"拒绝\"); \r\n        let this_=this;\r\n        EventManager.Instance.addListener(EventType.UIMessageBox_OnClickYes,async ()=>{\r\n            let teamConfirmObj= await MessageBox.Show(\"请选择\"+request.fromNickName+\"加入队伍！\", \"选择队伍\", MessageBoxType.Confirm,\"友队\",\"敌队\"); \r\n            EventManager.Instance.addListener(EventType.UIMessageBox_OnClickYes,()=>{\r\n                this_.SendAddRoomResponse(true, TeamType.My, request)\r\n            }, teamConfirmObj);\r\n            EventManager.Instance.addListener(EventType.UIMessageBox_OnClickNo,()=>{\r\n                this_.SendAddRoomResponse(true, TeamType.Enemy, request)\r\n            }, teamConfirmObj);\r\n        },confirmObj);\r\n        EventManager.Instance.addListener(EventType.UIMessageBox_OnClickNo,async ()=>{\r\n            this_.SendAddRoomResponse(false, TeamType.My, request)\r\n        },confirmObj);\r\n    }\r\n\r\n\r\n    /**\r\n     * 收到加入房间响应\r\n     */\r\n    private OnAddRoomResponse(param: any): void {\r\n        let response = param[0] as AddRoomResponse;\r\n        LogUtil.log(\"OnAddRoomResponse:{0}{1}\", response.result,response.errormsg);\r\n        TipsManager.Instance.showTips(response.errormsg);\r\n        if(response.result==Result.Success){\r\n            //加入者是当前用户\r\n            if(response.addRoomRequest.fromUserId==User.Instance.user.id){  \r\n                director.loadScene('Room');\r\n            }else{\r\n              EventManager.Instance.dispatch(EventType.OnMyRoom_RefieshUI); \r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 退出房间请求\r\n     */\r\n    public SendOutRoom(): void {\r\n        LogUtil.log(\"SendOutRoom\");\r\n        let message = new NetMessage();\r\n        message.Request = new NetMessageRequest();\r\n        message.Request.outRoomReq = new OutRoomRequest();\r\n        NetClient.Instance.SendMessage(message);\r\n    }\r\n\r\n    /**\r\n     * 退出房间响应\r\n     */\r\n    public OnOutRoom(param: any): void {\r\n        let response = param[0] as OutRoomResponse;\r\n        LogUtil.log(\"OnOutRoom{0}{1}：\",response.result,response.errormsg);\r\n        TipsManager.Instance.showTips(response.errormsg);\r\n    }\r\n\r\n    /**\r\n     * 请求游戏结束\r\n     */\r\n    public SendGameOver2(): void {\r\n        LogUtil.log(\"SendGameOver2\");\r\n        let message = new NetMessage();\r\n        message.Request = new NetMessageRequest();\r\n        message.Request.gameOver2Req = new GameOver2Request();\r\n        message.Request.gameOver2Req.ipPortStr = User.Instance.room.ipPortStr;\r\n        NetClient.Instance.SendMessage(message);\r\n    }\r\n\r\n    /**\r\n     * 上传比分请求\r\n     */\r\n    public SendUploadBiFen(biFen:string): void {\r\n        LogUtil.log(\"SendUploadBiFen\");\r\n        let message = new NetMessage();\r\n        message.Request = new NetMessageRequest();\r\n        message.Request.uploadBiFenReq = new UploadBiFenRequest();\r\n        message.Request.uploadBiFenReq.biFen = biFen;\r\n        NetClient.Instance.SendMessage(message);\r\n    }\r\n\r\n    /**\r\n     * 进入直播请求\r\n     */\r\n    public SendAddLive(targetUserId:number): void {\r\n        LogUtil.log(\"SendAddLive\");\r\n        BattleGlobal.targetLiveUserId = targetUserId;\r\n        let message = new NetMessage();\r\n        message.Request = new NetMessageRequest();\r\n        message.Request.addLiveReq = new AddLiveRequest();\r\n        message.Request.addLiveReq.userId = targetUserId;\r\n        NetClient.Instance.SendMessage(message);\r\n    }\r\n\r\n    /**\r\n     * 收到进入直播响应\r\n     */\r\n    private OnAddLiveResponse(param: any): void {\r\n        let response = param[0] as AddLiveResponse;\r\n        LogUtil.log(\"OnAddLiveResponse:{0}{1}\", response.result,response.errormsg);\r\n        TipsManager.Instance.showTips(response.errormsg);\r\n        if(response.result==Result.Success){  //进入直播房间\r\n           LocalStorageUtil.RemoveItem(LocalStorageUtil.allFrameHandlesKey);\r\n           BattleGlobal.battleMode = BattleMode.Live;\r\n\r\n           User.Instance.room=response.room;\r\n           RandomUtil.seed=response.room.randomSeed;   //设置战斗随机数种子\r\n           director.loadScene('EnterGameLoad');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 请求效验是否可以开房间\r\n     */\r\n    public SendValidateOpenRoom(): void {\r\n        LogUtil.log(\"SendValidateOpenRoom\");\r\n        let message = new NetMessage();\r\n        message.Request = new NetMessageRequest();\r\n        message.Request.validateOpenRoomReq = new ValidateOpenRoomRequest();\r\n        NetClient.Instance.SendMessage(message);\r\n    }\r\n\r\n    /**\r\n     * 效验是否可以开房间响应\r\n     */\r\n    private OnValidateOpenRoom(param: any): void {\r\n        let response = param[0] as ValidateOpenRoomResponse;\r\n        LogUtil.log(\"OnValidateOpenRoom:{0}\", response);\r\n        if(response.result==Result.Success){\r\n            director.loadScene('Room');\r\n        }else{\r\n            TipsManager.Instance.showTips(response.errormsg);\r\n        } \r\n    }\r\n}"]}