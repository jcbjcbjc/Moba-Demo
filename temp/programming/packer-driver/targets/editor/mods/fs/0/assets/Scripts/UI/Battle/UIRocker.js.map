{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/UI/Battle/UIRocker.ts"],"names":["_decorator","Component","Node","systemEvent","SystemEvent","Vec2","Vec3","game","UITransform","MathUtil","BattleManager","OptType","TeamType2","ccclass","property","UIRocker","start","on","EventType","TOUCH_MOVE","OnTouchMove","TOUCH_END","OnTouchEnd","startBgX","startMoveVec2","x","node","worldPosition","startBgY","y","startFrontX","MoveFront","position","startFrontY","bgRect","getComponent","getBoundingBox","bgRadius","w","e","getStartLocation","canvas","width","getLocation","currentMoveVec2","isTouchDown","TouchDown","len","GetDistance","moveVec3","z","setWorldPosition","xLen","yLen","yuanX","yuanY","setPosition","degree","GetAngle","Instance","currentCharacter","teamType2","Blue","frameHandle","opt","Rocker","optValue1","Math","round","update"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, instantiate, systemEvent, SystemEvent, Vec2, Vec3, game, v3, UITransform, math } from 'cc';\r\nimport { MathUtil } from '../../Utils/MathUtil';\r\nimport { BattleManager } from './Managers/BattleManager';\r\nimport { OptType } from './enums/OptType';\r\nimport { TeamType2 } from './enums/TeamType2';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * 摇杆操作\r\n */\r\n@ccclass('UIRocker')\r\nexport class UIRocker extends Component {\r\n\r\n    @property(Node)\r\n    public MoveFront:Node=null;\r\n\r\n    private startMoveVec2 = new Vec2();   //开始移动点位置\r\n    private currentMoveVec2 = new Vec2();   //当前移动点位置\r\n    private moveVec3=new Vec3();  //移动位置\r\n    private bgRadius:number=0;  //背景半径\r\n    private isTouchDown:boolean=false;  //是否按下\r\n    private startBgX:number=0;\r\n    private startBgY:number=0;\r\n    private startFrontX:number=0;\r\n    private startFrontY:number=0;\r\n\r\n\r\n    start(){\r\n        systemEvent.on(SystemEvent.EventType.TOUCH_MOVE, this.OnTouchMove, this)\r\n        systemEvent.on(SystemEvent.EventType.TOUCH_END, this.OnTouchEnd, this)\r\n        this.startBgX=this.startMoveVec2.x=this.node.worldPosition.x;\r\n        this.startBgY=this.startMoveVec2.y=this.node.worldPosition.y;\r\n\r\n        this.startFrontX=this.MoveFront.position.x;\r\n        this.startFrontY=this.MoveFront.position.y;\r\n\r\n        let bgRect=this.node.getComponent(UITransform).getBoundingBox();   //背景矩形\r\n        this.bgRadius=bgRect.w/2;  //背景半径\r\n    }\r\n\r\n    /**\r\n     * 摇杆开始移动\r\n     */\r\n    OnTouchMove(e) {\r\n        e.getStartLocation(this.startMoveVec2);  //开始移动点\r\n        if (this.startMoveVec2.x < game.canvas.width * 0.4) {  //屏幕左边40%滑动有效\r\n            e.getLocation(this.currentMoveVec2);   //当前移动点\r\n            this.isTouchDown=true;\r\n        }else{ //不是有效区则恢复位置\r\n            this.startMoveVec2.x=this.node.worldPosition.x;\r\n            this.startMoveVec2.y=this.node.worldPosition.y;\r\n            this.isTouchDown=false;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 摇杆按下\r\n     */\r\n    TouchDown(){\r\n            //计算圆心到移动点位置\r\n            let len=MathUtil.GetDistance(this.node.worldPosition.x, this.node.worldPosition.y, this.currentMoveVec2.x, this.currentMoveVec2.y);\r\n            // console.log(len+'==='+this.bgRadius)\r\n            if(len <= this.bgRadius){  //圆范围内\r\n                this.moveVec3.x=this.currentMoveVec2.x;\r\n                this.moveVec3.y=this.currentMoveVec2.y;\r\n                this.moveVec3.z=0;\r\n                this.MoveFront.setWorldPosition(this.moveVec3);\r\n            }else{  //圆范围外，求圆上点位置\r\n                let xLen=this.currentMoveVec2.x-this.startMoveVec2.x;\r\n                let yLen=this.currentMoveVec2.y-this.startMoveVec2.y;\r\n                let yuanX= xLen / len * this.bgRadius;  //圆上x轴\r\n                let yuanY= yLen / len *this.bgRadius;  //圆上y轴\r\n\r\n                this.moveVec3.x=yuanX;\r\n                this.moveVec3.y=yuanY;\r\n                this.moveVec3.z=0;\r\n                this.MoveFront.setPosition(this.moveVec3);\r\n            }\r\n\r\n            let degree = MathUtil.GetAngle(this.currentMoveVec2.y-this.startMoveVec2.y, this.currentMoveVec2.x-this.startMoveVec2.x);\r\n            if(BattleManager.Instance.currentCharacter.teamType2 == TeamType2.Blue){  //蓝队\r\n                degree = 180 - degree;\r\n            }else{\r\n                degree = -degree;\r\n            }\r\n            // console.log('degree='+degree)\r\n            //封装操作\r\n            if(!BattleManager.Instance.frameHandle.opt || BattleManager.Instance.frameHandle.opt==OptType.Rocker){\r\n               BattleManager.Instance.frameHandle.opt=OptType.Rocker;\r\n               BattleManager.Instance.frameHandle.optValue1=Math.round(degree);  //角度\r\n               // BattleManager.Instance.frameHandle.optValue2= len > 0 ? 1 : 0;  //移动\r\n            }\r\n    }\r\n\r\n    /**\r\n     * 摇杆结束移动\r\n     */\r\n    OnTouchEnd(e){\r\n        this.isTouchDown=false;\r\n        this.startMoveVec2.x = this.startBgX;\r\n        this.startMoveVec2.y = this.startBgY;\r\n        this.moveVec3.x=this.startFrontX;\r\n        this.moveVec3.y=this.startFrontY;\r\n        this.moveVec3.z=0;\r\n        this.MoveFront.setPosition(this.moveVec3);\r\n    }\r\n\r\n    update(){\r\n        if(this.isTouchDown){\r\n            this.TouchDown();\r\n        }\r\n        //更新摇杆点击位置\r\n        this.node.setWorldPosition(this.startMoveVec2.x, this.startMoveVec2.y, 0);\r\n    }\r\n\r\n}"]}