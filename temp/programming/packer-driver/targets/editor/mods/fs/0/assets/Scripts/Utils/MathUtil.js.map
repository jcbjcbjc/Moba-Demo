{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/Utils/MathUtil.ts"],"names":["MathUtil","Vec3","NetConfig","DataManager","sortBy","attr","rev","undefined","a","b","GetAngle","x","y","hd","Math","atan2","angle","PI","GetDistance","startX","startY","endX","endY","xLen","abs","yLen","sqrt","rotateVec3","q","v","dest","qx","qy","qz","z","qw","w","ix","iy","iz","iw","vec2InRect","point","rect","contains","lerp","fromVec3","toVec3","dt","se","getVec3Flag","xv","lerpV","yv","zv","set","fromV","toV","zf","jl","syJl","secondToFrame","second","floor","frameTime","sqrMagnitude","t","obj","dx","dy","sqrMagnitude2","pointX","pointY","circleX","circleY","vec2Subtract","Angle","CollidePointAndCircle","_p","_c","_radius","sprRadius","sqrDistance","CollidePointAndCircle2","CollidePointAndCircleRevise","_amend","distance","_angle","amendDis","rockerSpeedVo","Instance","rockerSpeeds","CollideCircleAndCircleRevise","_c1","_c2","_radius1","_radius2","CollideCircleAndCircleRevise2","_amend1","_amend2","radiusSum","changeDir","dir","CollideCircleAndRectRotateRevise","_rCenter","_half_w","_half_h","_dir","X","cos","sin","Z","llx","bby","rrx","tty","lx","by","rx","ty","_ltPoint","_lbPoint","_rtPoint","_rbPoint","_rtAngle","_ltAngle","_lbAngle","_rbAngel","circleAngle"],"mappings":"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","sourcesContent":["import { Vec2, Rect, Quat, Vec3 } from \"cc\";\r\nimport { NetConfig } from \"../Network/NetConfig\";\r\nimport { DataManager } from \"../Managers/DataManager\";\r\n\r\nexport class MathUtil{\r\n    \r\n   /**数组根据数组对象中的某个属性值进行排序的方法 \r\n     * 使用例子：newArray.sort(sortBy('number',false)) //表示根据number属性降序排列;若第二个参数不传递，默认表示升序排序\r\n     * @param attr 排序的属性 如number属性\r\n     * @param rev true表示升序排列，false降序排序\r\n     * */\r\n    public static sortBy(attr:any, rev:any){\r\n        //第二个参数没有传递 默认升序排列\r\n        if(rev ==  undefined){\r\n            rev = 1;\r\n        }else{\r\n            rev = (rev) ? 1 : -1;\r\n        }\r\n        \r\n        return function(a:any, b:any){\r\n            a = a[attr];\r\n            b = b[attr];\r\n            if(a < b){\r\n                return rev * -1;\r\n            }\r\n            if(a > b){\r\n                return rev * 1;\r\n            }\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取角度\r\n     * @param x \r\n     * @param y \r\n     */\r\n    public static GetAngle(x:number, y:number):number {\r\n        let hd = Math.atan2(y, x);\r\n        let angle = hd * 180 / (Math.PI);\r\n        return angle;\r\n    }\r\n\r\n    /**\r\n     * 计算两点之间的距离\r\n     * @param startX \r\n     * @param startY \r\n     * @param endX \r\n     * @param endY \r\n     */\r\n    public static GetDistance(startX:number, startY:number, endX:number, endY:number):number {\r\n        let xLen=Math.abs(endX-startX);\r\n        let yLen=Math.abs(endY-startY);\r\n        // console.log('startX:'+startX+'====startY:'+startY+'====endX:'+endX+'====endY:'+ endY+'===xLen:'+xLen+'===='+yLen+'===='+((xLen*xLen)+(yLen*yLen)))\r\n        return Math.sqrt(xLen*xLen+yLen*yLen);\r\n    }\r\n\r\n\r\n       /**\r\n      * 算出旋转后方向向量\r\n      */\r\n     public static rotateVec3(q: Quat, v: Vec3, dest: Vec3 | null = null): Vec3 {\r\n        if (dest === null) dest = new Vec3();\r\n    \r\n        const qx = q.x,\r\n    \r\n          qy = q.y,\r\n    \r\n          qz = q.z,\r\n    \r\n          qw = q.w;\r\n    \r\n        const x = v.x,\r\n    \r\n          y = v.y,\r\n    \r\n          z = v.z;\r\n    \r\n        const ix = x * qw + qy * z - qz * y,\r\n    \r\n          iy = y * qw + qz * x - qx * z,\r\n    \r\n          iz = z * qw + qx * y - qy * x,\r\n    \r\n          iw = -qx * x - qy * y - qz * z;\r\n    \r\n        dest.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n    \r\n        dest.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n    \r\n        dest.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n    \r\n        return dest;\r\n    \r\n      }\r\n\r\n      /**\r\n       * 判断点是否在矩形区域中\r\n       * @param point\r\n       * @param rect \r\n       */\r\n      public static vec2InRect(point:Vec2,rect:Rect):boolean{\r\n         return rect.contains(point);\r\n      }\r\n     \r\n      /**\r\n       * 插值\r\n       * @param fromVec3 \r\n       * @param toVec3  \r\n       * @param dt  update执行时间间隔\r\n       * @param se  完成时间\r\n\t   * @param getVec3Flag  返回Vec3的变量类型 1:from Vec3  2:to Vec3  3:创建一个Vec3\r\n       */\r\n      public static lerp(fromVec3:Vec3, toVec3:Vec3, dt:number, se:number, getVec3Flag:number = 1):Vec3{\r\n          let xv = this.lerpV(fromVec3.x, toVec3.x, dt, se);\r\n          let yv = this.lerpV(fromVec3.y, toVec3.y, dt, se);\r\n          let zv = this.lerpV(fromVec3.z, toVec3.z, dt, se);\r\n\t\t//   console.log('xv='+xv+'，yv='+yv+'，zv='+zv+'，se='+se+'，dt='+dt)\r\n\t\tif(getVec3Flag == 1){\r\n\t\t  fromVec3.set(fromVec3.x+xv, fromVec3.y+yv, fromVec3.z+zv);\r\n          return fromVec3;\r\n\t\t}else if(getVec3Flag == 2){\r\n\t\t  toVec3.set(toVec3.x+xv, toVec3.y+yv, toVec3.z+zv);\r\n\t\t  return toVec3;\r\n\t\t}else{\r\n\t\t  return new Vec3(xv, yv, zv);\r\n\t\t}\r\n      }\r\n\r\n      /**\r\n       * 计算插值距离\r\n       * @param fromV \r\n       * @param toV \r\n       * @param dt \r\n       * @param se \r\n       */\r\n      private static lerpV(fromV:number, toV:number, dt:number, se:number){\r\n        if(fromV == toV){\r\n          return 0;\r\n        }\r\n        let zf = -1;\r\n        if(toV > fromV){  //计算正负系数\r\n            zf = 1;\r\n        }\r\n        let jl = Math.abs(toV - fromV)/se*dt;  //移动的距离\r\n        let syJl=Math.abs(toV - fromV);  //剩余距离\r\n        if(syJl < jl){\r\n          jl = syJl;\r\n        }\r\n        let v = zf * jl;\r\n        return v;\r\n      }\r\n      \r\n      /**\r\n       * 秒转逻辑帧\r\n       * @param second 秒\r\n       */\r\n      public static secondToFrame(second:number):number{\r\n          return Math.floor(second * 1000 / NetConfig.frameTime);\r\n      }\r\n\r\n\r\n  /// <summary>\r\n\t/// 长度平方\r\n\t/// </summary>\r\n\tpublic static sqrMagnitude(t:Vec3, obj:Vec3):number{\r\n\t\tlet dx = Math.abs(t.x - obj.x);\r\n\t\tlet dy = Math.abs(t.z - obj.z);\r\n\t\treturn dx * dx + dy * dy;\r\n  } \r\n\r\n  /// <summary>\r\n\t/// 长度平方\r\n\t/// </summary>\r\n\tpublic static sqrMagnitude2(pointX:number, pointY:number, circleX:number, circleY:number):number{\r\n\t\tlet dx = Math.abs(circleX - pointX);\r\n\t\tlet dy = Math.abs(circleY - pointY);\r\n\t\treturn dx * dx + dy * dy;\r\n  } \r\n  \r\n  /**\r\n   * 两个向量相减\r\n   * @param a \r\n   * @param b \r\n   */\r\n  public static vec2Subtract(a:Vec3, b:Vec3){\r\n    return new Vec3 (a.x - b.x , 0, a.z - b.z);\r\n  } \r\n\r\n  /// <summary>\r\n\t/// 返回0~359的角度值\r\n\t/// </summary>\r\n\tpublic static Angle(a:Vec3):number{\r\n    let hd = Math.atan2(a.z, a.x);\r\n    let angle = hd * 180 / (Math.PI);\r\n    if(angle < 0){\r\n      angle=angle+360;\r\n    }else if(angle > 360){\r\n      angle=angle-360;\r\n    }\r\n\t\treturn Math.floor(angle);\r\n\t}\r\n\r\n    //点和圆碰撞\r\n\tpublic static CollidePointAndCircle(_p:Vec3, _c:Vec3, _radius:number): boolean{\r\n\t\tlet sprRadius = _radius * _radius;\r\n\t\tlet sqrDistance = MathUtil.sqrMagnitude(_c, _p);\r\n\t\treturn sqrDistance < sprRadius;\r\n  }\r\n   //点和圆碰撞\r\n\tpublic static CollidePointAndCircle2(pointX:number, pointY:number, circleX:number, circleY:number, _radius:number): boolean{\r\n\t\tlet sprRadius = _radius * _radius;\r\n\t\tlet sqrDistance = MathUtil.sqrMagnitude2(pointX, pointY, circleX, circleY);\r\n\t\treturn sqrDistance < sprRadius;\r\n  }\r\n  \r\n  /// <summary>\r\n\t/// \r\n\t///\t点和圆的碰撞,圆不动修正点的位置\r\n\t/// </summary>\r\n\t/// <returns><c>true</c>, if point and circle was collided, <c>false</c> otherwise.</returns>\r\n\t/// <param name=\"_p\">碰撞点.</param>\r\n\t/// <param name=\"_c\">碰撞圆心.</param>\r\n\t/// <param name=\"_radius\">圆半径.</param>\r\n\t/// <param name=\"_amend\">修正值.</param>\r\n\t/// \r\n\tpublic static CollidePointAndCircleRevise(_p:Vec3,_c:Vec3,  _radius:number, _amend:Vec3):boolean{\r\n\t\t_amend.set(0, 0, 0);\r\n\t\t//Debug.Log(\"障碍的半径是 \" + _amend);\r\n\t\tlet sprRadius = _radius * _radius;\r\n\r\n\t\tlet sqrDistance = MathUtil.sqrMagnitude(_c, _p); // -c.x --p.x平方  =  -c.z --p.z\r\n\r\n\t\tif (sqrDistance >= sprRadius) { // 没有碰撞\r\n\t\t\t// console.log('没有碰撞sqrDistance='+sqrDistance+'，sprRadius='+sprRadius)\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// console.log('碰撞了')\r\n\r\n\t\tlet distance = Math.floor(Math.sqrt(sqrDistance));\r\n\t\tlet _angle = MathUtil.Angle(MathUtil.vec2Subtract(_p , _c));\r\n    let amendDis = 1 + (_radius - distance)/100;\r\n    let rockerSpeedVo = DataManager.Instance.rockerSpeeds[_angle];\r\n    _amend.set(amendDis * rockerSpeedVo.x, 0, amendDis * rockerSpeedVo.y);\r\n\t\treturn true;\r\n  }\r\n\r\n  /// <summary>\r\n\t/// 圆和圆的碰撞,圆2不动,修正是的是圆1的位置\r\n\t/// </summary>\r\n\t/// <returns><c>true</c>, if circle and circle was collided, <c>false</c> otherwise.</returns>\r\n\t/// <param name=\"_c1\">圆1的圆心.</param>\r\n\t/// <param name=\"_c2\">圆2的圆心.</param>\r\n\t/// <param name=\"_radius1\">圆1的半径.</param>\r\n\t/// <param name=\"_radius2\">圆2的半径.</param>\r\n\t/// <param name=\"_amend\">修正值.</param>\r\n\tpublic static CollideCircleAndCircleRevise(_c1:Vec3,_c2:Vec3,_radius1:number,_radius2:number,  _amend:Vec3):boolean{\r\n\t\treturn MathUtil.CollidePointAndCircleRevise(_c1,_c2,(_radius1 + _radius2), _amend);  //  // 角色位置，  障碍位置， 角色半径，障碍半径。\r\n\t}\r\n\t/// <summary>\r\n\t/// 圆和圆的碰撞,2个圆的位置都修正\r\n\t/// </summary>\r\n\t/// <returns><c>true</c>, if circle and circle was collided, <c>false</c> otherwise.</returns>\r\n\t/// <param name=\"_c1\">圆1的圆心.</param>\r\n\t/// <param name=\"_c2\">圆2的圆心.</param>\r\n\t/// <param name=\"_radius1\">圆1的半径.</param>\r\n\t/// <param name=\"_radius2\">圆2的半径.</param>\r\n\t/// <param name=\"_amend1\">圆1的修正值.</param>\r\n\t/// <param name=\"_amend2\">圆2的修正值.</param>\r\n\tpublic static CollideCircleAndCircleRevise2(_c1:Vec3, _c2:Vec3, _radius1:number, _radius2:number, _amend1:Vec3, _amend2:Vec3):boolean{\r\n\t\t_amend1.set(0, 0, 0);\r\n\t\t_amend2.set(0, 0, 0);\r\n\r\n\t\tlet radiusSum = _radius1 + _radius2;\r\n\t\tlet sprRadius = radiusSum * radiusSum;\r\n\r\n\t\tlet sqrDistance = MathUtil.sqrMagnitude(_c1, _c2);\r\n\r\n\t\tif (sqrDistance >= sprRadius) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet distance =  Math.floor(Math.sqrt(sqrDistance));\r\n\t\tlet _angle = MathUtil.Angle(MathUtil.vec2Subtract(_c1 , _c2));\r\n    let amendDis = 1 + Math.floor((radiusSum - distance) * 0.5)/100;\r\n    \r\n    let rockerSpeedVo = DataManager.Instance.rockerSpeeds[_angle];\r\n    _amend1.set(amendDis * rockerSpeedVo.x, 0, amendDis * rockerSpeedVo.y);\r\n    _amend2.set(-1 * _amend1.x, 0, -1 * _amend1.z);\r\n\t\treturn true;\r\n\t}\r\n  \r\n  private static changeDir(dir:number):number\r\n\t{\r\n\t\treturn (Math.PI * dir / 180.0);\r\n\t}\r\n  /**\r\n   * 圆形和旋转矩形碰撞， 带修正\r\n   * @param _c1    圆坐标\r\n   * @param _radius1 圆半径\r\n   * @param _rCenter  矩形坐标\r\n   * @param _half_w  矩形宽\r\n   * @param _half_h  矩形高\r\n   * @param  _amend 效正偏移\r\n   * @param  _dir  旋转矩形角度\r\n   */\r\n\tpublic static CollideCircleAndRectRotateRevise(_c1:Vec3, _radius1:number, _rCenter:Vec3, _half_w:number,  _half_h:number, _amend:Vec3,  _dir:number):boolean\r\n{\r\n\t_amend.set(0, 0, 0);\r\n\t\t//Debug.Log(\"_dir   \"  + _dir);\r\n\t\tlet X = _rCenter.x * Math.cos(MathUtil.changeDir(_dir)) + _rCenter.z * Math.sin(MathUtil.changeDir(_dir));\r\n\r\n\t\tlet Z = -_rCenter.x * Math.sin(MathUtil.changeDir(_dir)) + _rCenter.z * Math.cos(MathUtil.changeDir(_dir));\r\n\r\n\t\t//Debug.Log(\"x \" + X);\r\n\t\t//Debug.Log(\"z \" + Z);\r\n\t\t_rCenter.x = Math.floor(X);\r\n\t\t_rCenter.z = Math.floor(Z);\r\n\t\tX = _c1.x * Math.cos(MathUtil.changeDir(_dir)) + _c1.z * Math.sin(MathUtil.changeDir(_dir));\r\n\r\n\t\tZ = -_c1.x * Math.sin(MathUtil.changeDir(_dir)) + _c1.z * Math.cos(MathUtil.changeDir(_dir));\r\n\r\n\t\t_c1.x = Math.floor(X);\r\n\t\t_c1.z = Math.floor(Z);\r\n\r\n\t\t/*\r\n\t\t\t*l:左\r\n\t\t\t*r:右\r\n\t\t\t*t:上/顶\r\n\t\t\t*b:下/底\r\n\t\t*/\r\n\t\tlet llx = _rCenter.x - _half_w - _radius1;\r\n\t\tif (_c1.x <= llx)\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet bby = _rCenter.z - _half_h - _radius1;\r\n\t\tif (_c1.z <= bby)\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet rrx = _rCenter.x + _half_w + _radius1;\r\n\t\tif (_c1.x >= rrx)\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet tty = _rCenter.z + _half_h + _radius1;\r\n\t\tif (_c1.z >= tty)\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet lx = _rCenter.x - _half_w;\r\n\t\tlet by = _rCenter.z - _half_h;\r\n\t\tlet rx = _rCenter.x + _half_w;\r\n\t\tlet ty = _rCenter.z + _half_h;\r\n\r\n\t\tif (_c1.x <= lx)\r\n\t\t{\r\n\t\t\tif (_c1.z > ty)\r\n\t\t\t{\r\n\t\t\t\t//左上角的顶点矩形里\r\n\t\t\t\tlet _ltPoint = new Vec3(lx, 0, ty);\r\n\t\t\t\treturn MathUtil.CollidePointAndCircleRevise(_c1, _ltPoint, _radius1, _amend);\r\n\t\t\t}\r\n\t\t\telse if (_c1.z < by)\r\n\t\t\t{\r\n\t\t\t\t//左下角的顶点矩形里\r\n\t\t\t\tlet _lbPoint = new Vec3(lx, 0, by);\r\n\t\t\t\treturn MathUtil.CollidePointAndCircleRevise(_c1, _lbPoint, _radius1, _amend);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t//左侧矩形\r\n\t\t\t\t_amend.set(llx - _c1.x, 0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (_c1.x >= rx)\r\n\t\t{\r\n\t\t\tif (_c1.z > ty)\r\n\t\t\t{\r\n\t\t\t\t//右上角的顶点矩形里\r\n\t\t\t\tlet _rtPoint = new Vec3(rx, 0, ty);\r\n\t\t\t\treturn MathUtil.CollidePointAndCircleRevise(_c1, _rtPoint, _radius1, _amend);\r\n\t\t\t}\r\n\t\t\telse if (_c1.z < by)\r\n\t\t\t{\r\n\t\t\t\t//右下角的顶点矩形里\r\n\t\t\t\tlet _rbPoint = new Vec3(rx, 0, by);\r\n\t\t\t\treturn MathUtil.CollidePointAndCircleRevise(_c1, _rbPoint, _radius1, _amend);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t//右侧矩形\r\n\t\t\t\t_amend.set(rrx - _c1.x, 0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (_c1.z > ty)\r\n\t\t\t{\r\n\t\t\t\t//中上矩形\r\n\t\t\t\t_amend.set(0, 0, tty - _c1.z);\r\n\t\t\t}\r\n\t\t\telse if (_c1.z < by)\r\n\t\t\t{\r\n\t\t\t\t//中下矩形\r\n\t\t\t\t_amend.set(0, 0, bby - _c1.z);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t//矩形内\r\n\t\t\t\tlet _rtPoint = new Vec3(rx, 0, ty);\r\n\t\t\t\tlet _rtAngle = MathUtil.Angle(MathUtil.vec2Subtract(_rtPoint , _rCenter));\r\n\t\t\t\tlet _ltAngle = 180 - _rtAngle;\r\n\t\t\t\tlet _lbAngle = 180 + _rtAngle;\r\n\t\t\t\tlet _rbAngel = 360 - _rtAngle;\r\n\r\n\t\t\t\tlet circleAngle = MathUtil.Angle(MathUtil.vec2Subtract(_c1 , _rCenter));//圆心和矩形中心的角度\r\n\r\n\t\t\t\tif (circleAngle > _rbAngel)\r\n\t\t\t\t{\r\n\t\t\t\t\t_amend.set(rrx - _c1.x, 0, 0);\r\n\t\t\t\t}\r\n\t\t\t\telse if (circleAngle > _lbAngle)\r\n\t\t\t\t{\r\n\t\t\t\t\t_amend.set(0, 0, bby - _c1.z);\r\n\t\t\t\t}\r\n\t\t\t\telse if (circleAngle > _ltAngle)\r\n\t\t\t\t{\r\n\t\t\t\t\t_amend.set(llx - _c1.x, 0, 0);\r\n\t\t\t\t}\r\n\t\t\t\telse if (circleAngle > _rtAngle)\r\n\t\t\t\t{\r\n\t\t\t\t\t_amend.set(0, 0, tty - _c1.z);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t_amend.set(rrx - _c1.x, 0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (_amend.x != 0 && _amend.z != 0)\r\n\t\t{\r\n\t\t\t  X = _amend.x * Math.cos(MathUtil.changeDir(-_dir)  ) + _amend.z * Math.sin(MathUtil.changeDir(-_dir));\r\n\r\n\t\t\t  Z = -_amend.x * Math.sin(MathUtil.changeDir(-_dir)) +_amend.z * Math.cos(MathUtil.changeDir(-_dir));\r\n\r\n\t\t\t_amend.x = Math.floor(X);\r\n\t\t\t_amend.z = Math.floor(Z);\r\n \r\n\r\n\t\t}\r\n\t\t// _amend.x = -_amend.x;\r\n\t\t// _amend.z = -_amend.z;\r\n\t\treturn true;\r\n\t}\r\n}"]}