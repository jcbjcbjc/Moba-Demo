{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/UI/Common/ListView/ListView.ts"],"names":["_decorator","Component","EventManager","EventType","ccclass","property","ListView","SelectedItem","selectedItem","value","Selected","owner","Instance","dispatchObj","ListView_OnItemSelected","AddItem","node","item","i","items","length","listViewItem","uuid","console","log","push","isAddScene","addChild","RemoveAll","removeAllChildren","destroy","ClearAllSelect","removeListener","removeAll"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AAEZC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,S,iBAAAA,S;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;0BAGjBM,Q,WADZF,OAAO,CAAC,UAAD,C,yBAAR,MACaE,QADb,SAC8BL,SAD9B,CACuC;AAAA;AAAA;;AAAA,yCAED,EAFC;;AAAA;;AAAA,8CAIT,IAJS;;AAAA,gDAMC,IAND;AAAA;;AAOZ,YAAZM,YAAY,GACvB;AACK,iBAAO,KAAKC,YAAZ;AAEJ;;AAEsB,YAAZD,YAAY,CAACE,KAAD,EAAoB;AACrC,cAAI,KAAKD,YAAL,IAAqB,KAAKA,YAAL,IAAqBC,KAA9C,EAAoD;AAChD,iBAAKD,YAAL,CAAkBE,QAAlB,GAA6B,KAA7B;AACH;;AAEC,eAAKF,YAAL,GAAoBC,KAApB;;AACA,cAAG,KAAKE,KAAR,EAAc;AACX;AAAA;AAAA,8CAAaC,QAAb,CAAsBC,WAAtB,CAAkC;AAAA;AAAA,wCAAUC,uBAA5C,EAAoE,KAAKH,KAAzE,EAA+EF,KAA/E;AACF;AACR;;AAEOM,QAAAA,OAAO,CAACC,IAAD,EAAWC,IAAX,EACf;AACIA,UAAAA,IAAI,CAACN,KAAL,GAAa,IAAb,CADJ,CAEI;;AACA,eAAI,IAAIO,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKC,KAAL,CAAWC,MAAzB,EAAgCF,CAAC,EAAjC,EAAoC;AAChC,gBAAIG,YAAY,GAAG,KAAKF,KAAL,CAAWD,CAAX,CAAnB;;AACA,gBAAGG,YAAY,CAACC,IAAb,IAAqBL,IAAI,CAACK,IAA7B,EAAkC;AAC9BD,cAAAA,YAAY,CAACX,QAAb,GAAsB,KAAtB;AACAa,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA;AACH;AACJ;;AAED,eAAKL,KAAL,CAAWM,IAAX,CAAgBR,IAAhB;;AACA,cAAG,KAAKS,UAAR,EAAmB;AACjB,iBAAKV,IAAL,CAAUW,QAAV,CAAmBX,IAAnB;AACD;AACJ;;AAEMY,QAAAA,SAAS,GAChB;AACE,cAAG,KAAKF,UAAR,EAAmB;AACjB,iBAAKV,IAAL,CAAUa,iBAAV;;AACA,iBAAI,IAAIX,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKC,KAAL,CAAWC,MAAzB,EAAgCF,CAAC,EAAjC,EAAoC;AACjC,kBAAIG,YAAY,GAAE,KAAKF,KAAL,CAAWD,CAAX,CAAlB;AACAG,cAAAA,YAAY,CAACS,OAAb;AACF;AACF;;AACC,eAAKX,KAAL,GAAW,EAAX;AAEH,SAtDkC,CAwDnC;AACA;AACA;;;AACOY,QAAAA,cAAc,GACrB;AACI,eAAI,IAAIb,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKC,KAAL,CAAWC,MAAzB,EAAgCF,CAAC,EAAjC,EAAoC;AAChC,gBAAIG,YAAY,GAAE,KAAKF,KAAL,CAAWD,CAAX,CAAlB;;AACD,gBAAGG,YAAY,CAACX,QAAhB,EAAyB;AACxBW,cAAAA,YAAY,CAACX,QAAb,GAAsB,KAAtB;AACA;AACF;AACL;;AAEMsB,QAAAA,cAAc,GAAE;AACnB;AAAA;AAAA,4CAAapB,QAAb,CAAsBqB,SAAtB,CAAgC,IAAhC;AACH;;AAvEkC,O","sourcesContent":["import { _decorator, Component, Node, Label, Sprite, SpriteFrame, loader, resources, director, Font, Prefab, instantiate } from 'cc';\r\nimport { ListViewItem } from './ListViewItem';\r\nimport { EventManager } from '../Event/EventManager';\r\nimport { EventType } from '../Event/EventType';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ListView')\r\nexport class ListView extends Component{\r\n    \r\n    private items:Array<ListViewItem>=[] ;\r\n    public owner:any;\r\n    public isAddScene:boolean=true; //是否添加场景\r\n\r\n    private selectedItem:ListViewItem = null as unknown as ListViewItem;\r\n    public get SelectedItem():ListViewItem\r\n    {\r\n         return this.selectedItem; \r\n        \r\n    }\r\n\r\n    public set SelectedItem(value:ListViewItem){\r\n          if (this.selectedItem && this.selectedItem != value){\r\n              this.selectedItem.Selected = false;\r\n          }\r\n\r\n            this.selectedItem = value;\r\n            if(this.owner){\r\n               EventManager.Instance.dispatchObj(EventType.ListView_OnItemSelected,this.owner,value);\r\n            }\r\n    }\r\n\r\n    public  AddItem(node:Node,item:ListViewItem):void\r\n    {\r\n        item.owner = this;\r\n        //判断存在则退出\r\n        for(let i=0;i<this.items.length;i++){\r\n            let listViewItem = this.items[i];\r\n            if(listViewItem.uuid == item.uuid){\r\n                listViewItem.Selected=false;  \r\n                console.log('AddItem 已存在项')\r\n                return;\r\n            }            \r\n        }\r\n\r\n        this.items.push(item);\r\n        if(this.isAddScene){\r\n          this.node.addChild(node);\r\n        }\r\n    }\r\n\r\n    public RemoveAll():void\r\n    {\r\n      if(this.isAddScene){\r\n        this.node.removeAllChildren();\r\n        for(let i=0;i<this.items.length;i++){\r\n           let listViewItem =this.items[i];\r\n           listViewItem.destroy();\r\n        }\r\n      }\r\n        this.items=[];\r\n       \r\n    }\r\n\r\n    /// <summary>\r\n    /// 清除所有的选中状态\r\n    /// </summary>\r\n    public ClearAllSelect():void\r\n    {\r\n        for(let i=0;i<this.items.length;i++){\r\n            let listViewItem =this.items[i];\r\n           if(listViewItem.Selected){\r\n            listViewItem.Selected=false;\r\n           }\r\n         }\r\n    }\r\n\r\n    public removeListener(){\r\n        EventManager.Instance.removeAll(this);\r\n    }\r\n}\r\n"]}