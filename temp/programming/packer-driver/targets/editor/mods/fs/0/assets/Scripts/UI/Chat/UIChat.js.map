{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/UI/Chat/UIChat.ts"],"names":["_decorator","Node","Prefab","instantiate","EditBox","SystemEventType","Sprite","UIWindow","proto","EventManager","ListView","UIChatItem","EventType","TabView","MessageBox","ChatManager","ChatUserVo","UIChatUserItem","ChatService","TipsManager","List","ccclass","property","NItem","ChatMessage","ChatChannel","NUser","ChatRoomType","UIChat","onLoad","compMessages","Instance","console","log","length","compList","numItems","scrollTo","compMsgRedSprite","node","active","privateMsgRedSprite","roomMsgRedSprite","roomMessages","roomList","start","tab","owner","privateUserListMain","isAddScene","addListener","TabView_OnTabSelect","OnChangeChannel","ListView_OnItemSelected","OnPrivateUserSelected","OnChat_UI","OnPrivateUserStatusChange","chatIconArr","chatIconBg","children","tempChatIcon","i","newChatIcon","iconName","name","sprite","getComponent","spriteFrame","spriteAtlas","getSpriteFrame","addChild","on","TOUCH_END","OnChatIconClick","isOpenChatUI","OnChangeRedNum","ChangeChatChannel","index","user","defaultIndex","chatUserVo","id","nickname","character","level","cid","Date","getTime","UpdatePrivateUserListOrder","PrivateUserSelected","roomButton","param","currentTarget","_name","contentEditBox","string","uiChatUserItem","selectedPrivateUserId","userId","updatePrivateList","SelectedChannel","OnClickSend","showTips","SendChat","Comp","undefined","Show","Private","nickName","cCharacterId","JSON","stringify","RoomChat","Room_","OnClickChatIcon","compChatContent","privateChatContent","roomChatContent","userList","chatUserVoList","chatMessageList","privateMessages","get","privateList","OnCompListRender","item","uiChatItem","SetItemInfo","OnUserListRender","selected","privateUserSelectedIndex","AddItem","OnPrivateListRender","OnRoomListRender","channel","messages","privateNum","GetPrivateChatMsgNum","compNum","roomNum","onDestroy","removeListener","removeAll"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, Prefab, instantiate, Button, EditBox, Size, Label, size, SystemEventType, Sprite, Layout } from 'cc';\r\nimport { UIWindow } from '../Common/UIWindow';\r\nimport { User } from '../../Models/User';\r\nimport proto from '../../../Proto/proto.js';\r\nimport { EventManager } from '../Common/Event/EventManager';\r\nimport { ListView } from '../Common/ListView/ListView';\r\nimport { UIChatItem } from './UIChatItem';\r\nimport { ListViewItem } from '../Common/ListView/ListViewItem';\r\nimport { EventType } from '../Common/Event/EventType';\r\nimport { TabView } from '../Common/TabView/TabView';\r\nimport { DataManager } from '../../Managers/DataManager';\r\nimport { MessageBox, MessageBoxType } from '../Common/MessageBox';\r\nimport { ItemService } from '../../Services/ItemService';\r\nimport { ChatManager } from '../../Managers/ChatManager';\r\nimport { UserService } from '../../Services/UserService';\r\nimport { ChatUserVo } from '../../Vo/ChatUserVo';\r\nimport { HashMap } from '../../Utils/HashMap';\r\nimport { MathUtil } from '../../Utils/MathUtil';\r\nimport { UIChatUserItem } from './UIChatUserItem';\r\nimport { ChatService } from '../../Services/ChatService';\r\nimport { TipsManager } from '../TipsManager';\r\nimport List from '../Common/ScrollView/List';\r\nimport { LoadResUtil } from '../../Utils/LoadResUtil';\r\nconst { ccclass, property } = _decorator;\r\nconst { NItem, ChatMessage, ChatChannel, NUser, ChatRoomType } = proto;\r\n\r\n@ccclass('UIChat')\r\nexport class UIChat extends UIWindow {\r\n\r\n\r\n    @property(TabView)\r\n    public tab: TabView = null as unknown as TabView;\r\n    @property(Prefab)\r\n    public chatItemPrefab: Prefab = null as unknown as Prefab;\r\n    @property(Prefab)\r\n    public chatUserItemPrefab: Prefab = null as unknown as Prefab;\r\n    // @property(ListView)\r\n    // public chatListMain:ListView=null as unknown as ListView;\r\n    @property(EditBox)\r\n    public contentEditBox = null as unknown as EditBox;\r\n    @property(ListView)\r\n    public privateUserListMain: ListView = null as unknown as ListView;\r\n    @property(Node)\r\n    public compChatContent = null as unknown as Node;\r\n    @property(Node)\r\n    public privateChatContent = null as unknown as Node;\r\n    @property(Node)\r\n    public roomChatContent = null as unknown as Node;\r\n\r\n\r\n    @property(Node)\r\n    public chatIconBg = null as unknown as Node;\r\n    @property(List)\r\n    private compList = null as unknown as List;\r\n    @property(List)\r\n    private userList = null as unknown as List;\r\n    @property(List)\r\n    private privateList = null as unknown as List;\r\n    @property(List)\r\n    private roomList = null as unknown as List;\r\n    @property(Node)\r\n    private roomButton = null as unknown as Node;\r\n    // @property(Label)\r\n    // private compMsgNumLabel = null as unknown as Label;\r\n    @property(Sprite)\r\n    public compMsgRedSprite: Sprite = null as unknown as Sprite;\r\n    // @property(Label)\r\n    // private privateMsgNumLabel = null as unknown as Label;\r\n    @property(Sprite)\r\n    public privateMsgRedSprite: Sprite = null as unknown as Sprite;\r\n    // @property(Label)\r\n    // private roomMsgNumLabel = null as unknown as Label;\r\n    @property(Sprite)\r\n    public roomMsgRedSprite: Sprite = null as unknown as Sprite;\r\n\r\n    private index: number = -1;  //选择索引\r\n\r\n    private uiChatUserItem = null as unknown as UIChatUserItem;\r\n    private privateUserSelectedIndex = -1;   //私聊用户选择索引\r\n    private selectedPrivateUserId = 0;  //私聊选择的用户id\r\n\r\n    onLoad() {\r\n        //初始化综合列表\r\n        let compMessages = ChatManager.Instance.compMessages;\r\n        console.log('compMessages.length=' + compMessages.length)\r\n        this.compList.numItems = compMessages.length;\r\n        this.compList.scrollTo(compMessages.length);\r\n        //红点隐藏\r\n        this.compMsgRedSprite.node.active = false;\r\n        this.privateMsgRedSprite.node.active = false;\r\n        this.roomMsgRedSprite.node.active = false;\r\n\r\n        //初始化用户列表\r\n        // let privateMessages=ChatManager.Instance.privateMessages;\r\n        // this.userList.numItems = privateMessages.length;\r\n        // this.userList.scrollTo(privateMessages.length );\r\n        //初始化房间列表\r\n        let roomMessages = ChatManager.Instance.roomMessages;\r\n        this.roomList.numItems = roomMessages.length;\r\n        this.roomList.scrollTo(roomMessages.length);\r\n    }\r\n\r\n    start() {\r\n        console.log('UIChat start')\r\n        this.tab.owner = this;\r\n        this.privateUserListMain.owner = this;\r\n        this.privateUserListMain.isAddScene = false;\r\n        EventManager.Instance.addListener(EventType.TabView_OnTabSelect, this.OnChangeChannel, this);\r\n        EventManager.Instance.addListener(EventType.ListView_OnItemSelected, this.OnPrivateUserSelected, this);\r\n        EventManager.Instance.addListener(EventType.OnChat_UI, this.OnChat_UI, this);\r\n        EventManager.Instance.addListener(EventType.OnPrivateUserStatusChange, this.OnPrivateUserStatusChange, this);\r\n        //初始化所有表情\r\n        let chatIconArr = this.chatIconBg.children;\r\n        let tempChatIcon = null as unknown as Node;\r\n        for (let i = 0; i < 63; i++) {\r\n            let newChatIcon = null;\r\n            if (i < chatIconArr.length) {\r\n                newChatIcon = chatIconArr[i];\r\n                if (!tempChatIcon) {\r\n                    tempChatIcon = newChatIcon;\r\n                }\r\n            } else {\r\n                newChatIcon = instantiate(tempChatIcon);\r\n            }\r\n            let iconName = i + 1 < 10 ? '0' + (i + 1) : i + 1;\r\n            newChatIcon.name = iconName + '';\r\n            let sprite = newChatIcon.getComponent(Sprite);\r\n            sprite.spriteFrame = sprite.spriteAtlas.getSpriteFrame(iconName + '');\r\n            this.chatIconBg.addChild(newChatIcon);\r\n            newChatIcon.on(SystemEventType.TOUCH_END, this.OnChatIconClick, this);\r\n        }\r\n        ChatManager.Instance.isOpenChatUI = true;\r\n        EventManager.Instance.addListener(EventType.OnChangeRedNum, this.OnChangeRedNum, this);\r\n        this.OnChangeRedNum();\r\n    }\r\n\r\n    /**\r\n     * 切换聊天频道 0、综合  1、私聊  2、房间\r\n     */\r\n    public ChangeChatChannel(index: number, user?: NUser) {\r\n        console.log('ChangeChatChannel index=' + index + ',user=' + user)\r\n        this.tab.defaultIndex = index;\r\n        if (index == 1 && user) {    //私聊列表更新用户\r\n            let chatUserVo = new ChatUserVo(user.id, user.nickname, user.character.level, user.character.cid, true, new Date().getTime());\r\n            ChatManager.Instance.UpdatePrivateUserListOrder(chatUserVo);\r\n            this.PrivateUserSelected(chatUserVo, 0);\r\n        }\r\n        //房间\r\n        this.roomButton.active = (index == 2);\r\n    }\r\n\r\n    /**\r\n     * 表情点击\r\n     * @param param \r\n     */\r\n    private OnChatIconClick(param: any) {\r\n        let name = param.currentTarget._name as string;\r\n        console.log(name)\r\n        this.contentEditBox.string = this.contentEditBox.string + '[' + name + ']';\r\n        this.chatIconBg.active = false;\r\n    }\r\n\r\n    /**\r\n     * 用户选择\r\n     * @param param \r\n     */\r\n    private OnPrivateUserSelected(param: any) {\r\n        this.uiChatUserItem = param[0] as UIChatUserItem;\r\n        console.log('OnPrivateUserSelected selectedPrivateUserId=' + this.selectedPrivateUserId)\r\n        this.PrivateUserSelected(this.uiChatUserItem.chatUserVo, this.uiChatUserItem.index);\r\n    }\r\n\r\n    /**\r\n     * 用户选择\r\n     * @param chatUserVo \r\n     * @param index \r\n     */\r\n    private PrivateUserSelected(chatUserVo: ChatUserVo, index: number) {\r\n        // this.privateUserSelectedIndex=index;\r\n        this.selectedPrivateUserId = chatUserVo.userId;\r\n        //私聊用户信息列表\r\n        this.updatePrivateList();\r\n        ChatManager.Instance.SelectedChannel(null, this.selectedPrivateUserId)\r\n    }\r\n\r\n\r\n    /**\r\n     * 点击发送\r\n     */\r\n    public async OnClickSend() {\r\n        if (!this.contentEditBox.string) {\r\n            TipsManager.Instance.showTips('请输入发送的内容');\r\n            return;\r\n        }\r\n\r\n        if (this.index == 0) {   //综合\r\n            ChatService.Instance.SendChat(ChatChannel.Comp, this.contentEditBox.string, undefined);\r\n        } else if (this.index == 1) {    //私聊\r\n            if (!this.uiChatUserItem) {\r\n                MessageBox.Show(\"请选择要发送的用户\", \"发送提示\");\r\n                return;\r\n            }\r\n            let chatUserVo = this.uiChatUserItem.chatUserVo;\r\n            ChatService.Instance.SendChat(ChatChannel.Private, this.contentEditBox.string, undefined, chatUserVo.userId, chatUserVo.nickName, chatUserVo.level,\r\n                chatUserVo.cCharacterId);\r\n        } else if (this.index == 2) {    //房间\r\n            console.log('room SendChat=' + (JSON.stringify(ChatManager.Instance.roomMessages)) + ',index=' + this.index)\r\n            ChatService.Instance.SendChat(ChatChannel.RoomChat, this.contentEditBox.string, ChatRoomType.Room_);\r\n        }\r\n        this.contentEditBox.string = '';\r\n    }\r\n\r\n    /**\r\n   * 打开表情框\r\n   */\r\n    public async OnClickChatIcon() {\r\n        if (this.chatIconBg.active) {\r\n            this.chatIconBg.active = false;\r\n        } else {\r\n            this.chatIconBg.active = true;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n    * 切换选择频道\r\n    * @param param 索引\r\n    */\r\n    private OnChangeChannel(param: any) {\r\n        let index = param[0];\r\n        if (this.index == index) {\r\n            return;\r\n        }\r\n        this.index = index;\r\n        console.log('OnChangeChannel index=' + this.index)\r\n        //切换频道显示聊天\r\n        this.compChatContent.active = (index == 0);\r\n        this.privateChatContent.active = (index == 1);\r\n        this.roomChatContent.active = (index == 2);\r\n        if (index == 0) {  //综合\r\n            ChatManager.Instance.SelectedChannel(ChatChannel.Comp)\r\n            this.compList.numItems = ChatManager.Instance.compMessages.length;\r\n            this.compList.scrollTo(ChatManager.Instance.compMessages.length);\r\n        } else if (index == 1) {  //私聊\r\n            //私聊用户列表\r\n            ChatManager.Instance.SelectedChannel(ChatChannel.Private, this.selectedPrivateUserId)\r\n            this.userList.numItems = ChatManager.Instance.chatUserVoList.length;\r\n            this.userList.scrollTo(ChatManager.Instance.chatUserVoList.length);\r\n            console.log('userList length=' + this.userList.numItems)\r\n            //私聊用户信息列表\r\n            this.updatePrivateList();\r\n        } else if (index == 2) {  //房间\r\n            ChatManager.Instance.SelectedChannel(ChatChannel.RoomChat)\r\n            this.roomList.numItems = ChatManager.Instance.roomMessages.length;\r\n            this.roomList.scrollTo(ChatManager.Instance.roomMessages.length);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新私聊列表\r\n     */\r\n    private updatePrivateList() {\r\n        let userId = this.selectedPrivateUserId;\r\n        if (!userId) {  //取第一个用户\r\n            if (ChatManager.Instance.chatUserVoList.length > 0) {\r\n                let chatUserVo = ChatManager.Instance.chatUserVoList[0];\r\n                userId = chatUserVo.userId;\r\n            }\r\n        }\r\n        if (userId) {\r\n            let chatMessageList = ChatManager.Instance.privateMessages.get(userId) || [];\r\n            console.log('updatePrivateList userId=' + userId + ',chatMessageList leng=' + chatMessageList.length)\r\n            this.privateList.numItems = chatMessageList.length;\r\n            this.privateList.scrollTo(chatMessageList.length);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 综合列表渲染\r\n     * @param item \r\n     * @param index \r\n     */\r\n    OnCompListRender(item: Node, index: number) {\r\n        // console.log('OnCompListRender index='+index)\r\n        let uiChatItem = item.getComponent(UIChatItem);\r\n        uiChatItem?.SetItemInfo(ChatManager.Instance.compMessages[index], 25, index, this.index);\r\n    }\r\n\r\n    /**\r\n     * 用户列表渲染\r\n     * @param item \r\n     * @param index \r\n     */\r\n    OnUserListRender(item: Node, index: number) {\r\n        let uiChatUserItem = item.getComponent(UIChatUserItem);\r\n        let selected = false;\r\n        if (this.privateUserSelectedIndex == -1 && index == 0) {\r\n            this.privateUserSelectedIndex = index;\r\n            selected = true;\r\n        }\r\n        this.privateUserListMain.AddItem(item, uiChatUserItem);\r\n        uiChatUserItem?.SetItemInfo(ChatManager.Instance.chatUserVoList[index], selected, index);\r\n        console.log('OnUserListRender index=' + index + ',userId=' + uiChatUserItem.chatUserVo.userId + ',selected=' + selected)\r\n    }\r\n\r\n    /**\r\n     * 用户私聊列表渲染\r\n     * @param item \r\n     * @param index \r\n     */\r\n    OnPrivateListRender(item: Node, index: number) {\r\n        // console.log('OnPrivateListRender index='+index)\r\n        if (this.privateUserSelectedIndex == -1) {\r\n            return;\r\n        }\r\n        let uiChatItem = item.getComponent(UIChatItem);\r\n        let chatMessageList = ChatManager.Instance.privateMessages.get(this.selectedPrivateUserId);\r\n        if (chatMessageList && chatMessageList.length > 0) {\r\n            uiChatItem?.SetItemInfo(chatMessageList[index], 15, index, this.index, chatMessageList);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 房间列表渲染\r\n     * @param item \r\n     * @param index \r\n     */\r\n    OnRoomListRender(item: Node, index: number) {\r\n        // console.log('OnRoomListRender index='+index)\r\n        let uiChatItem = item.getComponent(UIChatItem);\r\n        uiChatItem?.SetItemInfo(ChatManager.Instance.roomMessages[index], 25, index, this.index);\r\n    }\r\n\r\n    /**\r\n     * 收到消息更新\r\n     * @param param \r\n     */\r\n    private OnChat_UI(param: any) {\r\n        let channel = param[0] as ChatChannel;\r\n        let messages = param[1] as Array<ChatMessage>;\r\n        if (channel == ChatChannel.Comp) {  //综合\r\n            this.compList.numItems = ChatManager.Instance.compMessages.length;\r\n            this.compList.scrollTo(ChatManager.Instance.compMessages.length);\r\n        } else if (channel == ChatChannel.Private) {  //私聊\r\n            let privateMessages = ChatManager.Instance.privateMessages;\r\n            //更新私聊用户列表\r\n            if (this.userList.numItems != privateMessages.length) {\r\n                this.userList.numItems = privateMessages.length;\r\n                this.userList.scrollTo(privateMessages.length);\r\n            }\r\n            //私聊用户信息列表\r\n            this.updatePrivateList();\r\n        } else if (channel == ChatChannel.RoomChat) {  //房间\r\n            this.roomList.numItems = ChatManager.Instance.roomMessages.length;\r\n            this.roomList.scrollTo(ChatManager.Instance.roomMessages.length);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 私聊列表用户状态变更\r\n     */\r\n    private OnPrivateUserStatusChange() {\r\n        let chatUserVoList = ChatManager.Instance.chatUserVoList;\r\n        this.userList.numItems = chatUserVoList.length;\r\n        this.userList.scrollTo(chatUserVoList.length);\r\n    }\r\n\r\n    /**\r\n     * 消息数量改变\r\n     */\r\n    private OnChangeRedNum() {\r\n        let privateNum = ChatManager.Instance.GetPrivateChatMsgNum();\r\n        console.log('UIChat OnChangeRedNum:privateNum=' + privateNum)\r\n        // this.compMsgNumLabel.string = (ChatManager.Instance.compNum > 99 ? '99+' : ChatManager.Instance.compNum + '');\r\n        // this.privateMsgNumLabel.string = (privateNum > 99 ? '99+' : privateNum + '');\r\n        // this.roomMsgNumLabel.string = (ChatManager.Instance.roomNum > 99 ? '99+' : ChatManager.Instance.roomNum + '');\r\n        if (ChatManager.Instance.compNum > 0) {\r\n            this.compMsgRedSprite.node.active = true;\r\n        } else {\r\n            this.compMsgRedSprite.node.active = false;\r\n        }\r\n        if (privateNum > 0) {\r\n            this.privateMsgRedSprite.node.active = true;\r\n        } else {\r\n            this.privateMsgRedSprite.node.active = false;\r\n        }\r\n        if (ChatManager.Instance.roomNum > 0) {\r\n            this.roomMsgRedSprite.node.active = true;\r\n        } else {\r\n            this.roomMsgRedSprite.node.active = false;\r\n        }\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        console.log('onDestroy')\r\n        // this.chatListMain.removeListener();\r\n        // ChatManager.Instance.currentChatChannel=-1;\r\n        ChatManager.Instance.isOpenChatUI = false;\r\n        this.privateUserListMain.removeListener();\r\n        EventManager.Instance.removeAll(this);\r\n    }\r\n\r\n}\r\n"]}