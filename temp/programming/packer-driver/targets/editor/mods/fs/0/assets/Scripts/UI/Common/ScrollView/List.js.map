{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/UI/Common/ScrollView/List.ts"],"names":["Node","Component","Enum","tween","_decorator","EventHandler","ScrollView","Prefab","Layout","Size","NodePool","isValid","instantiate","Vec3","Widget","UITransform","CCFloat","CCBoolean","CCInteger","ListItem","ccclass","property","disallowMultiple","menu","executionOrder","requireComponent","TemplateType","SlideType","SelectedType","List","type","tooltip","visible","templateType","NODE","PREFAB","range","slide","_slideMode","PAGE","val","slideMode","NORMAL","cyclic","virtual","lackCenter","lackSlide","selectedMode","NONE","SINGLE","serializable","_virtual","_numItems","_onScrolling","updateRate","_updateRate","selectedId","t","item","repeatEventSingle","_selectedId","getItemByListId","listItem","_lastSelectedId","getComponent","selected","lastItem","selectedEvent","emitEvents","_actualNumItems","MULT","bool","sub","multSelected","indexOf","push","splice","numItems","checkInited","console","error","_forceUpdate","_resizeContent","_cyclicNum","frameByFrameRenderNum","curPageNum","nearestListId","layout","content","enabled","_delRedundantItem","firstListId","len","n","_createOrUpdateItem2","_updateCounter","_updateDone","displayItemNum","scrollView","_scrollView","onLoad","_init","onDestroy","_itemTmp","destroy","tmpNode","_pool","clear","onEnable","_registerEvent","_aniDelRuning","_aniDelItem","_aniDelBeforePos","position","_aniDelBeforeScale","scale","_aniDelCB","onDisable","_unregisterEvent","node","on","EventType","TOUCH_START","_onTouchStart","_onTouchUp","TOUCH_CANCEL","_onTouchCancelled","_onScrollBegan","_onScrollEnded","SIZE_CHANGED","_onSizeChanged","off","_inited","_thisNodeUt","_contentUt","name","_layout","_align","_resizeMode","resizeMode","_startAxis","startAxis","_topGap","paddingTop","_rightGap","paddingRight","_bottomGap","paddingBottom","_leftGap","paddingLeft","_columnGap","spacingX","_lineGap","spacingY","_colLineNum","_verticalDir","verticalDirection","_horizontalDir","horizontalDirection","setTemplateItem","tmpPrefab","ADHERING","inertia","_onMouseWheel","_lastDisplayData","displayData","_processAutoScrolling","bind","_startBounceBackIfNeeded","Type","HORIZONTAL","HorizontalDirection","LEFT_TO_RIGHT","_alignCalcType","RIGHT_TO_LEFT","VERTICAL","VerticalDirection","TOP_TO_BOTTOM","BOTTOM_TO_TOP","GRID","AxisDirection","removeAllChildren","dt","OUT_OF_BOUNDARY_BREAKING_FACTOR","EPSILON","ZERO","quintEaseOut","time","sv","isAutoScrollBrake","brakingFactor","percentage","Math","min","a","multiplyScalar","newPosition","add","reachedEnd","abs","fireEvent","SCROLL_ENG_WITH_THRESHOLD","brakeOffsetPosition","subtract","set","moveDelta","outOfBoundary","equals","deltaMove","SCROLLING","SCROLL_ENDED","_itemTmpUt","ResizeMode","CHILDREN","_itemSize","cellSize","itemUt","width","height","com","remove","_needUpdateWidget","_sizeType","trimW","floor","trimH","printLog","result","_customSize","fixed","_getFixedSize","count","lineNum","ceil","colNum","_allItemSize","_allItemSizeNoEdge","totalSize","_cyclicPos1","spacing","_cyclicPos2","_cyclicAllItemSize","_cycilcAllItemSizeNoEdge","_lack","slideOffset","targetWH","ev","frameCount","scrollPos","getPosition","y","x","addVal","contentPos","z","setPosition","isAutoScrolling","_calcViewPos","vTop","vRight","vBottom","vLeft","viewTop","viewBottom","viewRight","viewLeft","itemPos","curId","endId","breakFor","_calcItemPos","right","left","length","bottom","top","ww","hh","id","haveDataChange","sort","b","_doneAfterUpdate","c","_createOrUpdateItem","_calcNearestItem","elasticLeft","elasticRight","elasticTop","elasticBottom","itemX","itemY","cs","offset","anchorX","anchorY","colLine","_calcExistItemPos","ut","pos","data","getItemPos","listId","parseInt","_beganPos","_curScrollIsTouch","scrollToListId","to","start","adhering","adhere","_pageAdhere","captureListeners","isMe","eventPhase","Event","AT_TARGET","target","itemNode","_listId","parent","_scrollItem","_scrollPos","_adheringBarrier","simulate","_onItemAdaptive","updateAll","_scrollToListId","unschedule","_scrollToSo","scrollTo","max","_scrollToEndTime","Date","getTime","curPos","dis","pageDistance","canSkip","timeInSecond","prePage","nextPage","update","canGet","size","get","setContentSize","_resetItemSize","addChild","widget","updateAlignment","setSiblingIndex","children","list","renderEvent","_updateListItem","_updateItemPos","listIdOrItem","isNaN","setMultSelected","args","Array","isArray","getMultSelected","hasMultSelected","updateItem","_getOutsideItem","find","d","arr","isCached","put","m","_delSingleItem","removeFromParent","aniDelItem","callFunc","aniType","warn","curLastId","resetSelectedId","showAni","newId","newData","newCustomSize","idNumber","sec","twe","haveCB","posData","call","overStress","updateLayout","targetX","targetY","viewPos","comparePos","runScroll","scrollToOffset","scheduleOnce","center","skipPage","pageNum","pageChangeEvent","calcCustomSize","temp","Object","keys"],"mappings":"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","sourcesContent":["/******************************************\n * @author kL <klk0@qq.com>\n * @date 2020/12/9\n * @doc 列表组件.\n * @end\n ******************************************/\nconst { ccclass, property, disallowMultiple, menu, executionOrder, requireComponent } = _decorator;\nimport { Node, Component, Enum, tween, _decorator, EventHandler, Tween, ScrollView, Prefab, Layout, Vec2, Size, NodePool, isValid, instantiate, Vec3, Widget, UITransform, CCFloat, CCBoolean, CCInteger } from 'cc';\nimport ListItem from './ListItem';\n\nenum TemplateType {\n    NODE = 1,\n    PREFAB = 2,\n}\n\nenum SlideType {\n    NORMAL = 1,//普通\n    ADHERING = 2,//粘附模式，将强制关闭滚动惯性\n    PAGE = 3,//页面模式，将强制关闭滚动惯性\n}\n\nenum SelectedType {\n    NONE = 0,\n    SINGLE = 1,//单选\n    MULT = 2,//多选\n}\n\n@ccclass\n@disallowMultiple()\n@menu('List')\n@requireComponent(ScrollView)\n//脚本生命周期回调的执行优先级。小于 0 的脚本将优先执行，大于 0 的脚本将最后执行。该优先级只对 onLoad, onEnable, start, update 和 lateUpdate 有效，对 onDisable 和 onDestroy 无效。\n@executionOrder(-5000)\nexport default class List extends Component {\n    //模板类型\n    @property({ type: Enum(TemplateType), tooltip:  '模板类型', })\n    private templateType: TemplateType = TemplateType.NODE;\n    //模板Item（Node）\n    @property({\n        type: Node,\n        tooltip:  '模板Item',\n        visible() { return this.templateType == TemplateType.NODE; }\n    })\n    tmpNode: Node = null;\n    //模板Item（Prefab）\n    @property({\n        type: Prefab,\n        tooltip:  '模板Item',\n        visible() { return this.templateType == TemplateType.PREFAB; }\n    })\n    tmpPrefab: Prefab = null;\n    //滑动模式\n    @property({})\n    private _slideMode: SlideType = SlideType.NORMAL;\n    @property({\n        type: Enum(SlideType),\n        tooltip:  '滑动模式'\n    })\n    set slideMode(val: SlideType) {\n        this._slideMode = val;\n    }\n    get slideMode() {\n        return this._slideMode;\n    }\n    //翻页作用距离\n    @property({\n        type: CCFloat,\n        range: [0, 1, .1],\n        tooltip:  '翻页作用距离',\n        slide: true,\n        visible() { return this._slideMode == SlideType.PAGE; }\n    })\n    public pageDistance: number = .3;\n    //页面改变事件\n    @property({\n        type: EventHandler,\n        tooltip:  '页面改变事件',\n        visible() { return this._slideMode == SlideType.PAGE; }\n    })\n    private pageChangeEvent: EventHandler = new EventHandler();\n    //是否为虚拟列表（动态列表）\n    @property({})\n    private _virtual: boolean = true;\n    @property({\n        type: CCBoolean,\n        tooltip:  '是否为虚拟列表（动态列表）'\n    })\n    set virtual(val: boolean) {\n        if (val != null)\n            this._virtual = val;\n        if (! this._numItems != 0) {\n            this._onScrolling();\n        }\n    }\n    get virtual() {\n        return this._virtual;\n    }\n    //是否为循环列表\n    @property({\n        tooltip:  '是否为循环列表',\n        visible() {\n            let val: boolean = /*this.virtual &&*/ this.slideMode == SlideType.NORMAL;\n            if (!val)\n                this.cyclic = false;\n            return val;\n        }\n    })\n    public cyclic: boolean = false;\n    //缺省居中\n    @property({\n        tooltip:  'Item数量不足以填满Content时，是否居中显示Item（不支持Grid布局）',\n        visible() { return this.virtual; }\n    })\n    public lackCenter: boolean = false;\n    //缺省可滑动\n    @property({\n        tooltip:  'Item数量不足以填满Content时，是否可滑动',\n        visible() {\n            let val: boolean = this.virtual && !this.lackCenter;\n            if (!val)\n                this.lackSlide = false;\n            return val;\n        }\n    })\n    public lackSlide: boolean = false;\n    //刷新频率\n    @property({ type: CCInteger })\n    private _updateRate: number = 0;\n    @property({\n        type: CCInteger,\n        range: [0, 6, 1],\n        tooltip:  '刷新频率（值越大刷新频率越低、性能越高）',\n        slide: true,\n    })\n    set updateRate(val: number) {\n        if (val >= 0 && val <= 6) {\n            this._updateRate = val;\n        }\n    }\n    get updateRate() {\n        return this._updateRate;\n    }\n    //分帧渲染（每帧渲染的Item数量（<=0时关闭分帧渲染））\n    @property({\n        type: CCInteger,\n        range: [0, 12, 1],\n        tooltip:  '逐帧渲染时，每帧渲染的Item数量（<=0时关闭分帧渲染）',\n        slide: true,\n    })\n    public frameByFrameRenderNum: number = 0;\n    //渲染事件（渲染器）\n    @property({\n        type: EventHandler,\n        tooltip:  '渲染事件（渲染器）',\n    })\n    public renderEvent: EventHandler = new EventHandler();\n    //选择模式\n    @property({\n        type: Enum(SelectedType),\n        tooltip:  '选择模式'\n    })\n    public selectedMode: SelectedType = SelectedType.NONE;\n    //触发选择事件\n    // @property({\n    //     type: EventHandler,\n    //     tooltip:  '触发选择事件',\n    //     // visible() { return this.selectedMode > SelectedType.NONE; }\n    // })\n    // public selectedEvent: EventHandler = new EventHandler();\n    @property({\n        type: EventHandler,\n        tooltip:  '触发选择事件',\n        visible() { return this.selectedMode > SelectedType.NONE; }\n    })\n    public selectedEvent: EventHandler = new EventHandler();\n    @property({\n        tooltip:  '是否重复响应单选事件',\n        visible() { return this.selectedMode == SelectedType.SINGLE; }\n    })\n    public repeatEventSingle: boolean = false;\n\n    //当前选择id\n    private _selectedId: number = -1;\n    private _lastSelectedId: number;\n    private multSelected: number[];\n    set selectedId(val: number) {\n        let t: any = this;\n        let item: any;\n        switch (t.selectedMode) {\n            case SelectedType.SINGLE: {\n                if (!t.repeatEventSingle && val == t._selectedId)\n                    return;\n                item = t.getItemByListId(val);\n                // if (!item && val >= 0)\n                //     return;\n                let listItem: ListItem;\n                if (t._selectedId >= 0)\n                    t._lastSelectedId = t._selectedId;\n                else //如果＜0则取消选择，把_lastSelectedId也置空吧，如果以后有特殊需求再改吧。\n                    t._lastSelectedId = null;\n                t._selectedId = val;\n                if (item) {\n                    listItem = item.getComponent(ListItem);\n                    listItem.selected = true;\n                }\n                if (t._lastSelectedId >= 0 && t._lastSelectedId != t._selectedId) {\n                    let lastItem: any = t.getItemByListId(t._lastSelectedId);\n                    if (lastItem) {\n                        lastItem.getComponent(ListItem).selected = false;\n                    }\n                }\n                if (t.selectedEvent) {\n                    EventHandler.emitEvents([t.selectedEvent], item, val % this._actualNumItems, t._lastSelectedId == null ? null : (t._lastSelectedId % this._actualNumItems));\n                }\n                break;\n            }\n            case SelectedType.MULT: {\n                item = t.getItemByListId(val);\n                if (!item)\n                    return;\n                let listItem = item.getComponent(ListItem);\n                if (t._selectedId >= 0)\n                    t._lastSelectedId = t._selectedId;\n                t._selectedId = val;\n                let bool: boolean = !listItem.selected;\n                listItem.selected = bool;\n                let sub: number = t.multSelected.indexOf(val);\n                if (bool && sub < 0) {\n                    t.multSelected.push(val);\n                } else if (!bool && sub >= 0) {\n                    t.multSelected.splice(sub, 1);\n                }\n                if (t.selectedEvent) {\n                    EventHandler.emitEvents([t.selectedEvent], item, val % this._actualNumItems, t._lastSelectedId == null ? null : (t._lastSelectedId % this._actualNumItems), bool);\n                }\n                break;\n            }\n        }\n    }\n    get selectedId() {\n        return this._selectedId;\n    }\n    private _forceUpdate: boolean = false;\n    private _align: number;\n    private _horizontalDir: number;\n    private _verticalDir: number;\n    private _startAxis: number;\n    private _alignCalcType: number;\n    public content: Node;\n    private _contentUt: UITransform;\n    private firstListId: number;\n    public displayItemNum: number;\n    private _updateDone: boolean = true;\n    private _updateCounter: number;\n    public _actualNumItems: number;\n    private _cyclicNum: number;\n    private _cyclicPos1: number;\n    private _cyclicPos2: number;\n    //列表数量\n    @property({\n        serializable: false\n    })\n    private _numItems: number = 0;\n    set numItems(val: number) {\n        let t = this;\n        if (!t.checkInited(false))\n            return;\n        if (val == null ) {\n            console.error('numItems set the wrong::', val);\n            return;\n        }\n        t._actualNumItems = t._numItems = val;\n        t._forceUpdate = true;\n\n        if (t._virtual) {\n            t._resizeContent();\n            if (t.cyclic) {\n                t._numItems = t._cyclicNum * t._numItems;\n            }\n            t._onScrolling();\n            if (!t.frameByFrameRenderNum && t.slideMode == SlideType.PAGE)\n                t.curPageNum = t.nearestListId;\n        } else {\n            if (t.cyclic) {\n                t._resizeContent();\n                t._numItems = t._cyclicNum * t._numItems;\n            }\n            let layout: Layout = t.content.getComponent(Layout);\n            if (layout) {\n                layout.enabled = true;\n            }\n            t._delRedundantItem();\n\n            t.firstListId = 0;\n            if (t.frameByFrameRenderNum > 0) {\n                //先渲染几个出来\n                let len: number = t.frameByFrameRenderNum > t._numItems ? t._numItems : t.frameByFrameRenderNum;\n                for (let n: number = 0; n < len; n++) {\n                    t._createOrUpdateItem2(n);\n                }\n                if (t.frameByFrameRenderNum < t._numItems) {\n                    t._updateCounter = t.frameByFrameRenderNum;\n                    t._updateDone = false;\n                }\n            } else {\n                for (let n: number = 0; n < t._numItems; n++) {\n                    t._createOrUpdateItem2(n);\n                }\n                t.displayItemNum = t._numItems;\n            }\n        }\n    }\n    get numItems() {\n        return this._actualNumItems;\n    }\n\n    private _inited: boolean = false;\n    private _scrollView: ScrollView;\n    get scrollView() {\n        return this._scrollView;\n    }\n    private _layout: Layout;\n    private _resizeMode: number;\n    private _topGap: number;\n    private _rightGap: number;\n    private _bottomGap: number;\n    private _leftGap: number;\n\n    private _columnGap: number;\n    private _lineGap: number;\n    private _colLineNum: number;\n\n    private _lastDisplayData: number[];\n    public displayData: any[];\n    private _pool: NodePool;\n\n    private _itemTmp: any;\n    private _itemTmpUt: UITransform;\n    private _needUpdateWidget: boolean = false;\n    private _itemSize: Size;\n    private _sizeType: boolean;\n\n    public _customSize: any;\n\n    private frameCount: number;\n    private _aniDelRuning: boolean = false;\n    private _aniDelCB: Function;\n    private _aniDelItem: any;\n    private _aniDelBeforePos: Vec2;\n    private _aniDelBeforeScale: number;\n    private viewTop: number;\n    private viewRight: number;\n    private viewBottom: number;\n    private viewLeft: number;\n\n    private _doneAfterUpdate: boolean = false;\n\n    private elasticTop: number;\n    private elasticRight: number;\n    private elasticBottom: number;\n    private elasticLeft: number;\n\n    private scrollToListId: number;\n\n    private adhering: boolean = false;\n\n    private _adheringBarrier: boolean = false;\n    private nearestListId: number;\n\n    public curPageNum: number = 0;\n    private _beganPos: number;\n    private _scrollPos: number;\n    private _curScrollIsTouch: boolean;//当前滑动是否为手动\n\n    private _scrollToListId: number;\n    private _scrollToEndTime: number;\n    private _scrollToSo: any;\n\n    private _lack: boolean;\n    private _allItemSize: number;\n    private _allItemSizeNoEdge: number;\n\n    private _scrollItem: any;//当前控制 ScrollView 滚动的 Item\n\n    private _thisNodeUt: UITransform;\n\n    //----------------------------------------------------------------------------\n\n    onLoad() {\n        this._init();\n    }\n\n    onDestroy() {\n        let t: any = this;\n        if (isValid(t._itemTmp))\n            t._itemTmp.destroy();\n        if (isValid(t.tmpNode))\n            t.tmpNode.destroy();\n        t._pool && t._pool.clear();\n    }\n\n    onEnable() {\n        // if (!EDITOR) \n        this._registerEvent();\n        this._init();\n        // 处理重新显示后，有可能上一次的动画移除还未播放完毕，导致动画卡住的问题\n        if (this._aniDelRuning) {\n            this._aniDelRuning = false;\n            if (this._aniDelItem) {\n                if (this._aniDelBeforePos) {\n                    this._aniDelItem.position = this._aniDelBeforePos;\n                    delete this._aniDelBeforePos;\n                }\n                if (this._aniDelBeforeScale) {\n                    this._aniDelItem.scale = this._aniDelBeforeScale;\n                    delete this._aniDelBeforeScale;\n                }\n                delete this._aniDelItem;\n            }\n            if (this._aniDelCB) {\n                this._aniDelCB();\n                delete this._aniDelCB;\n            }\n        }\n    }\n\n    onDisable() {\n        // if (!EDITOR) \n        this._unregisterEvent();\n    }\n    //注册事件\n    _registerEvent() {\n        let t: any = this;\n        t.node.on(Node.EventType.TOUCH_START, t._onTouchStart, t, true);\n        t.node.on('touch-up', t._onTouchUp, t);\n        t.node.on(Node.EventType.TOUCH_CANCEL, t._onTouchCancelled, t, true);\n        t.node.on('scroll-began', t._onScrollBegan, t, true);\n        t.node.on('scroll-ended', t._onScrollEnded, t, true);\n        t.node.on('scrolling', t._onScrolling, t, true);\n        t.node.on(Node.EventType.SIZE_CHANGED, t._onSizeChanged, t);\n    }\n    //卸载事件\n    _unregisterEvent() {\n        let t: any = this;\n        t.node.off(Node.EventType.TOUCH_START, t._onTouchStart, t, true);\n        t.node.off('touch-up', t._onTouchUp, t);\n        t.node.off(Node.EventType.TOUCH_CANCEL, t._onTouchCancelled, t, true);\n        t.node.off('scroll-began', t._onScrollBegan, t, true);\n        t.node.off('scroll-ended', t._onScrollEnded, t, true);\n        t.node.off('scrolling', t._onScrolling, t, true);\n        t.node.off(Node.EventType.SIZE_CHANGED, t._onSizeChanged, t);\n    }\n    //初始化各种..\n    _init() {\n        let t: any = this;\n        if (t._inited)\n            return;\n\n        t._thisNodeUt = t.node.getComponent(UITransform);\n        t._scrollView = t.node.getComponent(ScrollView);\n\n        t.content = t._scrollView.content;\n        t._contentUt = t.content.getComponent(UITransform);\n        if (!t.content) {\n            console.error(t.node.name + \"'s ScrollView unset content!\");\n            return;\n        }\n\n        t._layout = t.content.getComponent(Layout);\n\n        t._align = t._layout.type; //排列模式\n        t._resizeMode = t._layout.resizeMode; //自适应模式\n        t._startAxis = t._layout.startAxis;\n\n        t._topGap = t._layout.paddingTop; //顶边距\n        t._rightGap = t._layout.paddingRight; //右边距\n        t._bottomGap = t._layout.paddingBottom; //底边距\n        t._leftGap = t._layout.paddingLeft; //左边距\n\n        t._columnGap = t._layout.spacingX; //列距\n        t._lineGap = t._layout.spacingY; //行距\n\n        t._colLineNum; //列数或行数（非GRID模式则=1，表示单列或单行）;\n\n        t._verticalDir = t._layout.verticalDirection; //垂直排列子节点的方向\n        t._horizontalDir = t._layout.horizontalDirection; //水平排列子节点的方向\n\n        t.setTemplateItem(instantiate(t.templateType == TemplateType.PREFAB ? t.tmpPrefab : t.tmpNode));\n\n        // 特定的滑动模式处理\n        if (t._slideMode == SlideType.ADHERING || t._slideMode == SlideType.PAGE) {\n            t._scrollView.inertia = false;\n            t._scrollView._onMouseWheel = function () {\n                return;\n            };\n        }\n        if (!t.virtual)         // lackCenter 仅支持 Virtual 模式\n            t.lackCenter = false;\n\n        t._lastDisplayData = []; //最后一次刷新的数据\n        t.displayData = []; //当前数据\n        t._pool = new NodePool();    //这是个池子..\n        t._forceUpdate = false;         //是否强制更新\n        t._updateCounter = 0;           //当前分帧渲染帧数\n        t._updateDone = true;           //分帧渲染是否完成\n\n        t.curPageNum = 0;               //当前页数\n\n        if (t.cyclic || 0) {\n            t._scrollView._processAutoScrolling = this._processAutoScrolling.bind(t);\n            t._scrollView._startBounceBackIfNeeded = function () {\n                return false;\n            }\n            // t._scrollView._scrollChildren = function () {\n            //     return false;\n            // }\n        }\n\n        switch (t._align) {\n            case Layout.Type.HORIZONTAL: {\n                switch (t._horizontalDir) {\n                    case Layout.HorizontalDirection.LEFT_TO_RIGHT:\n                        t._alignCalcType = 1;\n                        break;\n                    case Layout.HorizontalDirection.RIGHT_TO_LEFT:\n                        t._alignCalcType = 2;\n                        break;\n                }\n                break;\n            }\n            case Layout.Type.VERTICAL: {\n                switch (t._verticalDir) {\n                    case Layout.VerticalDirection.TOP_TO_BOTTOM:\n                        t._alignCalcType = 3;\n                        break;\n                    case Layout.VerticalDirection.BOTTOM_TO_TOP:\n                        t._alignCalcType = 4;\n                        break;\n                }\n                break;\n            }\n            case Layout.Type.GRID: {\n                switch (t._startAxis) {\n                    case Layout.AxisDirection.HORIZONTAL:\n                        switch (t._verticalDir) {\n                            case Layout.VerticalDirection.TOP_TO_BOTTOM:\n                                t._alignCalcType = 3;\n                                break;\n                            case Layout.VerticalDirection.BOTTOM_TO_TOP:\n                                t._alignCalcType = 4;\n                                break;\n                        }\n                        break;\n                    case Layout.AxisDirection.VERTICAL:\n                        switch (t._horizontalDir) {\n                            case Layout.HorizontalDirection.LEFT_TO_RIGHT:\n                                t._alignCalcType = 1;\n                                break;\n                            case Layout.HorizontalDirection.RIGHT_TO_LEFT:\n                                t._alignCalcType = 2;\n                                break;\n                        }\n                        break;\n                }\n                break;\n            }\n        }\n        // 清空 content\n        // t.content.children.forEach((child: Node) => {\n        //     child.removeFromParent();\n        //     if (child != t.tmpNode && child.isValid)\n        //         child.destroy();\n        // });\n        t.content.removeAllChildren();\n        t._inited = true;\n    }\n    /**\n     * 为了实现循环列表，必须覆写cc.ScrollView的某些函数\n     * @param {Number} dt\n     */\n    _processAutoScrolling(dt: number) {\n        // let brakingFactor: number = 1;\n        // this._scrollView['_autoScrollAccumulatedTime'] += dt * (1 / brakingFactor);\n\n        // let percentage: number = Math.min(1, this._scrollView['_autoScrollAccumulatedTime'] / this._scrollView['_autoScrollTotalTime']);\n        // if (this._scrollView['_autoScrollAttenuate']) {\n        //     let time: number = percentage - 1;\n        //     percentage = time * time * time * time * time + 1;\n        // }\n        // let newPosition: any = this._scrollView['_autoScrollStartPosition'].add(this._scrollView['_autoScrollTargetDelta'].multiply(percentage));\n        // let EPSILON: number = this._scrollView['getScrollEndedEventTiming']();\n        // let reachedEnd: boolean = Math.abs(percentage - 1) <= EPSILON;\n        // // cc.log(reachedEnd, Math.abs(percentage - 1), EPSILON)\n\n        // let fireEvent: boolean = Math.abs(percentage - 1) <= this._scrollView['getScrollEndedEventTiming']();\n        // if (fireEvent && !this._scrollView['_isScrollEndedWithThresholdEventFired']) {\n        //     this._scrollView['_dispatchEvent']('scroll-ended-with-threshold');\n        //     this._scrollView['_isScrollEndedWithThresholdEventFired'] = true;\n        // }\n\n        // if (reachedEnd) {\n        //     this._scrollView['_autoScrolling'] = false;\n        // }\n\n        // let deltaMove: any = newPosition.sub(this._scrollView.getContentPosition());\n        // this._scrollView['_moveContent'](this._scrollView['_clampDelta'](deltaMove), reachedEnd);\n        // this._scrollView['_dispatchEvent']('scrolling');\n\n        // if (!this._scrollView['_autoScrolling']) {\n        //     this._scrollView['_isBouncing'] = false;\n        //     this._scrollView['_scrolling'] = false;\n        //     this._scrollView['_dispatchEvent']('scroll-ended');\n        // }\n\n        // ------------- scroll-view 里定义的一些常量 -------------\n        const OUT_OF_BOUNDARY_BREAKING_FACTOR = 0.05;\n        const EPSILON = 1e-4;\n        const ZERO = new Vec3();\n        const quintEaseOut = (time: number) => {\n            time -= 1;\n            return (time * time * time * time * time + 1);\n        };\n        // ------------- scroll-view 里定义的一些常量 -------------\n\n        let sv: ScrollView = this._scrollView;\n\n        const isAutoScrollBrake = sv['_isNecessaryAutoScrollBrake']();\n        const brakingFactor = isAutoScrollBrake ? OUT_OF_BOUNDARY_BREAKING_FACTOR : 1;\n        sv['_autoScrollAccumulatedTime'] += dt * (1 / brakingFactor);\n\n        let percentage = Math.min(1, sv['_autoScrollAccumulatedTime'] / sv['_autoScrollTotalTime']);\n        if (sv['_autoScrollAttenuate']) {\n            percentage = quintEaseOut(percentage);\n        }\n\n        const a = new Vec3(sv['_autoScrollTargetDelta']);\n        a.multiplyScalar(percentage);\n        const newPosition = new Vec3(sv['_autoScrollStartPosition']);\n        newPosition.add(a);\n        let reachedEnd = Math.abs(percentage - 1) <= EPSILON;\n\n        const fireEvent = Math.abs(percentage - 1) <= sv['getScrollEndedEventTiming']();\n        if (fireEvent && !sv['_isScrollEndedWithThresholdEventFired']) {\n            sv['_dispatchEvent'](ScrollView.EventType.SCROLL_ENG_WITH_THRESHOLD);\n            sv['_isScrollEndedWithThresholdEventFired'] = true;\n        }\n\n        if (sv['elastic']) {\n            const brakeOffsetPosition = new Vec3(newPosition);\n            brakeOffsetPosition.subtract(sv['_autoScrollBrakingStartPosition']);\n            if (isAutoScrollBrake) {\n                brakeOffsetPosition.multiplyScalar(brakingFactor);\n            }\n            newPosition.set(sv['_autoScrollBrakingStartPosition']);\n            newPosition.add(brakeOffsetPosition);\n        } else {\n            const moveDelta = new Vec3(newPosition);\n            moveDelta.subtract(sv['getContentPosition']());\n            const outOfBoundary = sv['_getHowMuchOutOfBoundary'](moveDelta);\n            if (!outOfBoundary.equals(ZERO, EPSILON)) {\n                newPosition.add(outOfBoundary);\n                reachedEnd = true;\n            }\n        }\n\n        if (reachedEnd) {\n            sv['_autoScrolling'] = false;\n        }\n\n        const deltaMove = new Vec3(newPosition);\n        deltaMove.subtract(sv['getContentPosition']());\n        sv['_moveContent'](sv['_clampDelta'](deltaMove), reachedEnd);\n        sv['_dispatchEvent'](ScrollView.EventType.SCROLLING);\n\n        if (!sv['_autoScrolling']) {\n            sv['_isBouncing'] = false;\n            sv['_scrolling'] = false;\n            sv['_dispatchEvent'](ScrollView.EventType.SCROLL_ENDED);\n        }\n    }\n    //设置模板Item\n    setTemplateItem(item: any) {\n        if (!item)\n            return;\n        let t: any = this;\n        t._itemTmp = item;\n        t._itemTmpUt = item.getComponent(UITransform);\n\n        if (t._resizeMode == Layout.ResizeMode.CHILDREN)\n            t._itemSize = t._layout.cellSize;\n        else {\n            let itemUt: UITransform = item.getComponent(UITransform);\n            t._itemSize = new Size(itemUt.width, itemUt.height);\n        }\n\n        //获取ListItem，如果没有就取消选择模式\n        let com: any = item.getComponent(ListItem);\n        let remove = false;\n        if (!com)\n            remove = true;\n        // if (com) {\n        //     if (!com._btnCom && !item.getComponent(cc.Button)) {\n        //         remove = true;\n        //     }\n        // }\n        if (remove) {\n            t.selectedMode = SelectedType.NONE;\n        }\n        com = item.getComponent(Widget);\n        if (com && com.enabled) {\n            t._needUpdateWidget = true;\n        }\n        if (t.selectedMode == SelectedType.MULT)\n            t.multSelected = [];\n\n        switch (t._align) {\n            case Layout.Type.HORIZONTAL:\n                t._colLineNum = 1;\n                t._sizeType = false;\n                break;\n            case Layout.Type.VERTICAL:\n                t._colLineNum = 1;\n                t._sizeType = true;\n                break;\n            case Layout.Type.GRID:\n                switch (t._startAxis) {\n                    case Layout.AxisDirection.HORIZONTAL:\n                        //计算列数\n                        let trimW: number = t._contentUt.width - t._leftGap - t._rightGap;\n                        t._colLineNum = Math.floor((trimW + t._columnGap) / (t._itemSize.width + t._columnGap));\n                        t._sizeType = true;\n                        break;\n                    case Layout.AxisDirection.VERTICAL:\n                        //计算行数\n                        let trimH: number = t._contentUt.height - t._topGap - t._bottomGap;\n                        t._colLineNum = Math.floor((trimH + t._lineGap) / (t._itemSize.height + t._lineGap));\n                        t._sizeType = false;\n                        break;\n                }\n                break;\n        }\n    }\n    /**\n     * 检查是否初始化\n     * @param {Boolean} printLog 是否打印错误信息\n     * @returns\n     */\n    checkInited(printLog: boolean = true) {\n        if (!this._inited) {\n            if (printLog)\n                console.error('List initialization not completed!');\n            return false;\n        }\n        return true;\n    }\n    //禁用 Layout 组件，自行计算 Content Size\n    _resizeContent() {\n        let t: any = this;\n        let result: number;\n\n        switch (t._align) {\n            case Layout.Type.HORIZONTAL: {\n                if (t._customSize) {\n                    let fixed: any = t._getFixedSize(null);\n                    result = t._leftGap + fixed.val + (t._itemSize.width * (t._numItems - fixed.count)) + (t._columnGap * (t._numItems - 1)) + t._rightGap;\n                } else {\n                    result = t._leftGap + (t._itemSize.width * t._numItems) + (t._columnGap * (t._numItems - 1)) + t._rightGap;\n                }\n                break;\n            }\n            case Layout.Type.VERTICAL: {\n                if (t._customSize) {\n                    let fixed: any = t._getFixedSize(null);\n                    result = t._topGap + fixed.val + (t._itemSize.height * (t._numItems - fixed.count)) + (t._lineGap * (t._numItems - 1)) + t._bottomGap;\n                } else {\n                    result = t._topGap + (t._itemSize.height * t._numItems) + (t._lineGap * (t._numItems - 1)) + t._bottomGap;\n                }\n                break;\n            }\n            case Layout.Type.GRID: {\n                //网格模式不支持居中\n                if (t.lackCenter)\n                    t.lackCenter = false;\n                switch (t._startAxis) {\n                    case Layout.AxisDirection.HORIZONTAL:\n                        let lineNum: number = Math.ceil(t._numItems / t._colLineNum);\n                        result = t._topGap + (t._itemSize.height * lineNum) + (t._lineGap * (lineNum - 1)) + t._bottomGap;\n                        break;\n                    case Layout.AxisDirection.VERTICAL:\n                        let colNum: number = Math.ceil(t._numItems / t._colLineNum);\n                        result = t._leftGap + (t._itemSize.width * colNum) + (t._columnGap * (colNum - 1)) + t._rightGap;\n                        break;\n                }\n                break;\n            }\n        }\n\n        let layout: Layout = t.content.getComponent(Layout);\n        if (layout)\n            layout.enabled = false;\n\n        t._allItemSize = result;\n        t._allItemSizeNoEdge = t._allItemSize - (t._sizeType ? (t._topGap + t._bottomGap) : (t._leftGap + t._rightGap));\n\n        if (t.cyclic) {\n            let totalSize: number = (t._sizeType ? t._thisNodeUt.height : t._thisNodeUt.width);\n\n            t._cyclicPos1 = 0;\n            totalSize -= t._cyclicPos1;\n            t._cyclicNum = Math.ceil(totalSize / t._allItemSizeNoEdge) + 1;\n            let spacing: number = t._sizeType ? t._lineGap : t._columnGap;\n            t._cyclicPos2 = t._cyclicPos1 + t._allItemSizeNoEdge + spacing;\n            t._cyclicAllItemSize = t._allItemSize + (t._allItemSizeNoEdge * (t._cyclicNum - 1)) + (spacing * (t._cyclicNum - 1));\n            t._cycilcAllItemSizeNoEdge = t._allItemSizeNoEdge * t._cyclicNum;\n            t._cycilcAllItemSizeNoEdge += spacing * (t._cyclicNum - 1);\n            // cc.log('_cyclicNum ->', t._cyclicNum, t._allItemSizeNoEdge, t._allItemSize, t._cyclicPos1, t._cyclicPos2);\n        }\n\n        t._lack = !t.cyclic && t._allItemSize < (t._sizeType ? t._thisNodeUt.height : t._thisNodeUt.width);\n        let slideOffset: number = ((!t._lack || !t.lackCenter) && t.lackSlide) ? 0 : .1;\n\n        let targetWH: number = t._lack ? ((t._sizeType ? t._thisNodeUt.height : t._thisNodeUt.width) - slideOffset) : (t.cyclic ? t._cyclicAllItemSize : t._allItemSize);\n        if (targetWH < 0)\n            targetWH = 0;\n\n        if (t._sizeType) {\n            t._contentUt.height = targetWH;\n        } else {\n            t._contentUt.width = targetWH;\n        }\n\n        // cc.log('_resizeContent()  numItems =', t._numItems, '，content =', t.content);\n    }\n\n    //滚动进行时...\n    _onScrolling(ev: Event = null) {\n        if (this.frameCount == null)\n            this.frameCount = this._updateRate;\n        if (!this._forceUpdate && (ev && ev.type != 'scroll-ended') && this.frameCount > 0) {\n            this.frameCount--;\n            return;\n        } else\n            this.frameCount = this._updateRate;\n\n        if (this._aniDelRuning)\n            return;\n\n        //循环列表处理\n        if (this.cyclic) {\n            let scrollPos: any = this.content.getPosition();\n            scrollPos = this._sizeType ? scrollPos.y : scrollPos.x;\n\n            let addVal = this._allItemSizeNoEdge + (this._sizeType ? this._lineGap : this._columnGap);\n            let add: any = this._sizeType ? new Vec3(0, addVal, 0) : new Vec3(addVal, 0, 0);\n\n            let contentPos = this.content.getPosition();\n\n            switch (this._alignCalcType) {\n                case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\n                    if (scrollPos > -this._cyclicPos1) {\n                        contentPos.set(-this._cyclicPos2, contentPos.y, contentPos.z);\n                        this.content.setPosition(contentPos);\n                        if (this._scrollView.isAutoScrolling()) {\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].subtract(add);\n                        }\n                        // if (this._beganPos) {\n                        //     this._beganPos += add;\n                        // }\n                    } else if (scrollPos < -this._cyclicPos2) {\n                        contentPos.set(-this._cyclicPos1, contentPos.y, contentPos.z);\n                        this.content.setPosition(contentPos);\n                        if (this._scrollView.isAutoScrolling()) {\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].add(add);\n                        }\n                        // if (this._beganPos) {\n                        //     this._beganPos -= add;\n                        // }\n                    }\n                    break;\n                case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\n                    if (scrollPos < this._cyclicPos1) {\n                        contentPos.set(this._cyclicPos2, contentPos.y, contentPos.z);\n                        this.content.setPosition(contentPos);\n                        if (this._scrollView.isAutoScrolling()) {\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].add(add);\n                        }\n                    } else if (scrollPos > this._cyclicPos2) {\n                        contentPos.set(this._cyclicPos1, contentPos.y, contentPos.z);\n                        this.content.setPosition(contentPos);\n                        if (this._scrollView.isAutoScrolling()) {\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].subtract(add);\n                        }\n                    }\n                    break;\n                case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\n                    if (scrollPos < this._cyclicPos1) {\n                        contentPos.set(contentPos.x, this._cyclicPos2, contentPos.z);\n                        this.content.setPosition(contentPos);\n                        if (this._scrollView.isAutoScrolling()) {\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].add(add);\n                        }\n                    } else if (scrollPos > this._cyclicPos2) {\n                        contentPos.set(contentPos.x, this._cyclicPos1, contentPos.z);\n                        this.content.setPosition(contentPos);\n                        if (this._scrollView.isAutoScrolling()) {\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].subtract(add);\n                        }\n                    }\n                    break;\n                case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\n                    if (scrollPos > -this._cyclicPos1) {\n                        contentPos.set(contentPos.x, -this._cyclicPos2, contentPos.z);\n                        this.content.setPosition(contentPos);\n                        if (this._scrollView.isAutoScrolling()) {\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].subtract(add);\n                        }\n                    } else if (scrollPos < -this._cyclicPos2) {\n                        contentPos.set(contentPos.x, -this._cyclicPos1, contentPos.z);\n                        this.content.setPosition(contentPos);\n                        if (this._scrollView.isAutoScrolling()) {\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].add(add);\n                        }\n                    }\n                    break;\n            }\n        }\n\n        this._calcViewPos();\n\n        let vTop: number, vRight: number, vBottom: number, vLeft: number;\n        if (this._sizeType) {\n            vTop = this.viewTop;\n            vBottom = this.viewBottom;\n        } else {\n            vRight = this.viewRight;\n            vLeft = this.viewLeft;\n        }\n\n        if (this._virtual) {\n            this.displayData = [];\n            let itemPos: any;\n\n            let curId: number = 0;\n            let endId: number = this._numItems - 1;\n\n            if (this._customSize) {\n                let breakFor: boolean = false;\n                //如果该item的位置在可视区域内，就推入displayData\n                for (; curId <= endId && !breakFor; curId++) {\n                    itemPos = this._calcItemPos(curId);\n                    switch (this._align) {\n                        case Layout.Type.HORIZONTAL:\n                            if (itemPos.right >= vLeft && itemPos.left <= vRight) {\n                                this.displayData.push(itemPos);\n                            } else if (curId != 0 && this.displayData.length > 0) {\n                                breakFor = true;\n                            }\n                            break;\n                        case Layout.Type.VERTICAL:\n                            if (itemPos.bottom <= vTop && itemPos.top >= vBottom) {\n                                this.displayData.push(itemPos);\n                            } else if (curId != 0 && this.displayData.length > 0) {\n                                breakFor = true;\n                            }\n                            break;\n                        case Layout.Type.GRID:\n                            switch (this._startAxis) {\n                                case Layout.AxisDirection.HORIZONTAL:\n                                    if (itemPos.bottom <= vTop && itemPos.top >= vBottom) {\n                                        this.displayData.push(itemPos);\n                                    } else if (curId != 0 && this.displayData.length > 0) {\n                                        breakFor = true;\n                                    }\n                                    break;\n                                case Layout.AxisDirection.VERTICAL:\n                                    if (itemPos.right >= vLeft && itemPos.left <= vRight) {\n                                        this.displayData.push(itemPos);\n                                    } else if (curId != 0 && this.displayData.length > 0) {\n                                        breakFor = true;\n                                    }\n                                    break;\n                            }\n                            break;\n                    }\n                }\n            } else {\n                let ww: number = this._itemSize.width + this._columnGap;\n                let hh: number = this._itemSize.height + this._lineGap;\n                switch (this._alignCalcType) {\n                    case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\n                        curId = (vLeft - this._leftGap) / ww;\n                        endId = (vRight - this._leftGap) / ww;\n                        break;\n                    case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\n                        curId = (-vRight - this._rightGap) / ww;\n                        endId = (-vLeft - this._rightGap) / ww;\n                        break;\n                    case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\n                        curId = (-vTop - this._topGap) / hh;\n                        endId = (-vBottom - this._topGap) / hh;\n                        break;\n                    case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\n                        curId = (vBottom - this._bottomGap) / hh;\n                        endId = (vTop - this._bottomGap) / hh;\n                        break;\n                }\n                curId = Math.floor(curId) * this._colLineNum;\n                endId = Math.ceil(endId) * this._colLineNum;\n                endId--;\n                if (curId < 0)\n                    curId = 0;\n                if (endId >= this._numItems)\n                    endId = this._numItems - 1;\n                for (; curId <= endId; curId++) {\n                    this.displayData.push(this._calcItemPos(curId));\n                }\n            }\n            this._delRedundantItem();\n            if (this.displayData.length <= 0 || !this._numItems) { //if none, delete all.\n                this._lastDisplayData = [];\n                return;\n            }\n            this.firstListId = this.displayData[0].id;\n            this.displayItemNum = this.displayData.length;\n\n            let len: number = this._lastDisplayData.length;\n\n            let haveDataChange: boolean = this.displayItemNum != len;\n            if (haveDataChange) {\n                // 如果是逐帧渲染，需要排序\n                if (this.frameByFrameRenderNum > 0) {\n                    this._lastDisplayData.sort((a, b) => { return a - b });\n                }\n                // 因List的显示数据是有序的，所以只需要判断数组长度是否相等，以及头、尾两个元素是否相等即可。\n                haveDataChange = this.firstListId != this._lastDisplayData[0] || this.displayData[this.displayItemNum - 1].id != this._lastDisplayData[len - 1];\n            }\n\n            if (this._forceUpdate || haveDataChange) {    //如果是强制更新\n                if (this.frameByFrameRenderNum > 0) {\n                    // if (this._updateDone) {\n                    // this._lastDisplayData = [];\n                    //逐帧渲染\n                    if (this._numItems > 0) {\n                        if (!this._updateDone) {\n                            this._doneAfterUpdate = true;\n                        } else {\n                            this._updateCounter = 0;\n                        }\n                        this._updateDone = false;\n                    } else {\n                        this._updateCounter = 0;\n                        this._updateDone = true;\n                    }\n                    // }\n                } else {\n                    //直接渲染\n                    this._lastDisplayData = [];\n                    // cc.log('List Display Data II::', this.displayData);\n                    for (let c = 0; c < this.displayItemNum; c++) {\n                        this._createOrUpdateItem(this.displayData[c]);\n                    }\n                    this._forceUpdate = false;\n                }\n            }\n            this._calcNearestItem();\n        }\n    }\n    //计算可视范围\n    _calcViewPos() {\n        let scrollPos: any = this.content.getPosition();\n        switch (this._alignCalcType) {\n            case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\n                this.elasticLeft = scrollPos.x > 0 ? scrollPos.x : 0;\n                this.viewLeft = (scrollPos.x < 0 ? -scrollPos.x : 0) - this.elasticLeft;\n\n                this.viewRight = this.viewLeft + this._thisNodeUt.width;\n                this.elasticRight = this.viewRight > this._contentUt.width ? Math.abs(this.viewRight - this._contentUt.width) : 0;\n                this.viewRight += this.elasticRight;\n                // cc.log(this.elasticLeft, this.elasticRight, this.viewLeft, this.viewRight);\n                break;\n            case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\n                this.elasticRight = scrollPos.x < 0 ? -scrollPos.x : 0;\n                this.viewRight = (scrollPos.x > 0 ? -scrollPos.x : 0) + this.elasticRight;\n                this.viewLeft = this.viewRight - this._thisNodeUt.width;\n                this.elasticLeft = this.viewLeft < -this._contentUt.width ? Math.abs(this.viewLeft + this._contentUt.width) : 0;\n                this.viewLeft -= this.elasticLeft;\n                // cc.log(this.elasticLeft, this.elasticRight, this.viewLeft, this.viewRight);\n                break;\n            case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\n                this.elasticTop = scrollPos.y < 0 ? Math.abs(scrollPos.y) : 0;\n                this.viewTop = (scrollPos.y > 0 ? -scrollPos.y : 0) + this.elasticTop;\n                this.viewBottom = this.viewTop - this._thisNodeUt.height;\n                this.elasticBottom = this.viewBottom < -this._contentUt.height ? Math.abs(this.viewBottom + this._contentUt.height) : 0;\n                this.viewBottom += this.elasticBottom;\n                // cc.log(this.elasticTop, this.elasticBottom, this.viewTop, this.viewBottom);\n                break;\n            case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\n                this.elasticBottom = scrollPos.y > 0 ? Math.abs(scrollPos.y) : 0;\n                this.viewBottom = (scrollPos.y < 0 ? -scrollPos.y : 0) - this.elasticBottom;\n                this.viewTop = this.viewBottom + this._thisNodeUt.height;\n                this.elasticTop = this.viewTop > this._contentUt.height ? Math.abs(this.viewTop - this._contentUt.height) : 0;\n                this.viewTop -= this.elasticTop;\n                // cc.log(this.elasticTop, this.elasticBottom, this.viewTop, this.viewBottom);\n                break;\n        }\n    }\n    //计算位置 根据id\n    _calcItemPos(id: number) {\n        let width: number, height: number, top: number, bottom: number, left: number, right: number, itemX: number, itemY: number;\n        switch (this._align) {\n            case Layout.Type.HORIZONTAL:\n                switch (this._horizontalDir) {\n                    case Layout.HorizontalDirection.LEFT_TO_RIGHT: {\n                        if (this._customSize) {\n                            let fixed: any = this._getFixedSize(id);\n                            left = this._leftGap + ((this._itemSize.width + this._columnGap) * (id - fixed.count)) + (fixed.val + (this._columnGap * fixed.count));\n                            let cs: number = this._customSize[id];\n                            width = (cs > 0 ? cs : this._itemSize.width);\n                        } else {\n                            left = this._leftGap + ((this._itemSize.width + this._columnGap) * id);\n                            width = this._itemSize.width;\n                        }\n                        if (this.lackCenter) {\n                            left -= this._leftGap;\n                            let offset: number = (this._contentUt.width / 2) - (this._allItemSizeNoEdge / 2);\n                            left += offset;\n                        }\n                        right = left + width;\n                        return {\n                            id: id,\n                            left: left,\n                            right: right,\n                            x: left + (this._itemTmpUt.anchorX * width),\n                            y: this._itemTmp.y,\n                        };\n                    }\n                    case Layout.HorizontalDirection.RIGHT_TO_LEFT: {\n                        if (this._customSize) {\n                            let fixed: any = this._getFixedSize(id);\n                            right = -this._rightGap - ((this._itemSize.width + this._columnGap) * (id - fixed.count)) - (fixed.val + (this._columnGap * fixed.count));\n                            let cs: number = this._customSize[id];\n                            width = (cs > 0 ? cs : this._itemSize.width);\n                        } else {\n                            right = -this._rightGap - ((this._itemSize.width + this._columnGap) * id);\n                            width = this._itemSize.width;\n                        }\n                        if (this.lackCenter) {\n                            right += this._rightGap;\n                            let offset: number = (this._contentUt.width / 2) - (this._allItemSizeNoEdge / 2);\n                            right -= offset;\n                        }\n                        left = right - width;\n                        return {\n                            id: id,\n                            right: right,\n                            left: left,\n                            x: left + (this._itemTmpUt.anchorX * width),\n                            y: this._itemTmp.y,\n                        };\n                    }\n                }\n                break;\n            case Layout.Type.VERTICAL: {\n                switch (this._verticalDir) {\n                    case Layout.VerticalDirection.TOP_TO_BOTTOM: {\n                        if (this._customSize) {\n                            let fixed: any = this._getFixedSize(id);\n                            top = -this._topGap - ((this._itemSize.height + this._lineGap) * (id - fixed.count)) - (fixed.val + (this._lineGap * fixed.count));\n                            let cs: number = this._customSize[id];\n                            height = (cs > 0 ? cs : this._itemSize.height);\n                        } else {\n                            top = -this._topGap - ((this._itemSize.height + this._lineGap) * id);\n                            height = this._itemSize.height;\n                        }\n                        if (this.lackCenter) {\n                            top += this._topGap;\n                            let offset: number = (this._contentUt.height / 2) - (this._allItemSizeNoEdge / 2);\n                            top -= offset;\n                        }\n                        bottom = top - height;\n                        return {\n                            id: id,\n                            top: top,\n                            bottom: bottom,\n                            x: this._itemTmp.x,\n                            y: bottom + (this._itemTmpUt.anchorY * height),\n                        };\n                    }\n                    case Layout.VerticalDirection.BOTTOM_TO_TOP: {\n                        if (this._customSize) {\n                            let fixed: any = this._getFixedSize(id);\n                            bottom = this._bottomGap + ((this._itemSize.height + this._lineGap) * (id - fixed.count)) + (fixed.val + (this._lineGap * fixed.count));\n                            let cs: number = this._customSize[id];\n                            height = (cs > 0 ? cs : this._itemSize.height);\n                        } else {\n                            bottom = this._bottomGap + ((this._itemSize.height + this._lineGap) * id);\n                            height = this._itemSize.height;\n                        }\n                        if (this.lackCenter) {\n                            bottom -= this._bottomGap;\n                            let offset: number = (this._contentUt.height / 2) - (this._allItemSizeNoEdge / 2);\n                            bottom += offset;\n                        }\n                        top = bottom + height;\n                        return {\n                            id: id,\n                            top: top,\n                            bottom: bottom,\n                            x: this._itemTmp.x,\n                            y: bottom + (this._itemTmpUt.anchorY * height),\n                        };\n                        break;\n                    }\n                }\n            }\n            case Layout.Type.GRID: {\n                let colLine: number = Math.floor(id / this._colLineNum);\n                switch (this._startAxis) {\n                    case Layout.AxisDirection.HORIZONTAL: {\n                        switch (this._verticalDir) {\n                            case Layout.VerticalDirection.TOP_TO_BOTTOM: {\n                                top = -this._topGap - ((this._itemSize.height + this._lineGap) * colLine);\n                                bottom = top - this._itemSize.height;\n                                itemY = bottom + (this._itemTmpUt.anchorY * this._itemSize.height);\n                                break;\n                            }\n                            case Layout.VerticalDirection.BOTTOM_TO_TOP: {\n                                bottom = this._bottomGap + ((this._itemSize.height + this._lineGap) * colLine);\n                                top = bottom + this._itemSize.height;\n                                itemY = bottom + (this._itemTmpUt.anchorY * this._itemSize.height);\n                                break;\n                            }\n                        }\n                        itemX = this._leftGap + ((id % this._colLineNum) * (this._itemSize.width + this._columnGap));\n                        switch (this._horizontalDir) {\n                            case Layout.HorizontalDirection.LEFT_TO_RIGHT: {\n                                itemX += (this._itemTmpUt.anchorX * this._itemSize.width);\n                                itemX -= (this._contentUt.anchorX * this._contentUt.width);\n                                break;\n                            }\n                            case Layout.HorizontalDirection.RIGHT_TO_LEFT: {\n                                itemX += ((1 - this._itemTmpUt.anchorX) * this._itemSize.width);\n                                itemX -= ((1 - this._contentUt.anchorX) * this._contentUt.width);\n                                itemX *= -1;\n                                break;\n                            }\n                        }\n                        return {\n                            id: id,\n                            top: top,\n                            bottom: bottom,\n                            x: itemX,\n                            y: itemY,\n                        };\n                    }\n                    case Layout.AxisDirection.VERTICAL: {\n                        switch (this._horizontalDir) {\n                            case Layout.HorizontalDirection.LEFT_TO_RIGHT: {\n                                left = this._leftGap + ((this._itemSize.width + this._columnGap) * colLine);\n                                right = left + this._itemSize.width;\n                                itemX = left + (this._itemTmpUt.anchorX * this._itemSize.width);\n                                itemX -= (this._contentUt.anchorX * this._contentUt.width);\n                                break;\n                            }\n                            case Layout.HorizontalDirection.RIGHT_TO_LEFT: {\n                                right = -this._rightGap - ((this._itemSize.width + this._columnGap) * colLine);\n                                left = right - this._itemSize.width;\n                                itemX = left + (this._itemTmpUt.anchorX * this._itemSize.width);\n                                itemX += ((1 - this._contentUt.anchorX) * this._contentUt.width);\n                                break;\n                            }\n                        }\n                        itemY = -this._topGap - ((id % this._colLineNum) * (this._itemSize.height + this._lineGap));\n                        switch (this._verticalDir) {\n                            case Layout.VerticalDirection.TOP_TO_BOTTOM: {\n                                itemY -= ((1 - this._itemTmpUt.anchorY) * this._itemSize.height);\n                                itemY += ((1 - this._contentUt.anchorY) * this._contentUt.height);\n                                break;\n                            }\n                            case Layout.VerticalDirection.BOTTOM_TO_TOP: {\n                                itemY -= ((this._itemTmpUt.anchorY) * this._itemSize.height);\n                                itemY += (this._contentUt.anchorY * this._contentUt.height);\n                                itemY *= -1;\n                                break;\n                            }\n                        }\n                        return {\n                            id: id,\n                            left: left,\n                            right: right,\n                            x: itemX,\n                            y: itemY,\n                        };\n                    }\n                }\n                break;\n            }\n        }\n    }\n    //计算已存在的Item的位置\n    _calcExistItemPos(id: number) {\n        let item: any = this.getItemByListId(id);\n        if (!item)\n            return null;\n        let ut: UITransform = item.getComponent(UITransform);\n        let pos: Vec3 = item.getPosition();\n        let data: any = {\n            id: id,\n            x: pos.x,\n            y: pos.y,\n        }\n        if (this._sizeType) {\n            data.top = pos.y + (ut.height * (1 - ut.anchorY));\n            data.bottom = pos.y - (ut.height * ut.anchorY);\n        } else {\n            data.left = pos.x - (ut.width * ut.anchorX);\n            data.right = pos.x + (ut.width * (1 - ut.anchorX));\n        }\n        return data;\n    }\n    //获取Item位置\n    getItemPos(id: number) {\n        if (this._virtual)\n            return this._calcItemPos(id);\n        else {\n            if (this.frameByFrameRenderNum)\n                return this._calcItemPos(id);\n            else\n                return this._calcExistItemPos(id);\n        }\n    }\n    //获取固定尺寸\n    _getFixedSize(listId: number) {\n        if (!this._customSize)\n            return null;\n        if (listId == null)\n            listId = this._numItems;\n        let fixed: number = 0;\n        let count: number = 0;\n        for (let id in this._customSize) {\n            if (parseInt(id) < listId) {\n                fixed += this._customSize[id];\n                count++;\n            }\n        }\n        return {\n            val: fixed,\n            count: count,\n        }\n    }\n    //滚动结束时..\n    _onScrollBegan() {\n        this._beganPos = this._sizeType ? this.viewTop : this.viewLeft;\n    }\n    //滚动结束时..\n    _onScrollEnded() {\n        let t: any = this;\n        t._curScrollIsTouch = false;\n        if (t.scrollToListId != null) {\n            let item: any = t.getItemByListId(t.scrollToListId);\n            t.scrollToListId = null;\n            if (item) {\n                tween(item)\n                    .to(.1, { scale: 1.06 })\n                    .to(.1, { scale: 1 })\n                    .start();\n            }\n        }\n        t._onScrolling();\n\n        if (t._slideMode == SlideType.ADHERING &&\n            !t.adhering\n        ) {\n            //cc.log(t.adhering, t._scrollView.isAutoScrolling(), t._scrollView.isScrolling());\n            t.adhere();\n        } else if (t._slideMode == SlideType.PAGE) {\n            if (t._beganPos != null && t._curScrollIsTouch) {\n                this._pageAdhere();\n            } else {\n                t.adhere();\n            }\n        }\n    }\n    // 触摸时\n    _onTouchStart(ev, captureListeners) {\n        if (this._scrollView['_hasNestedViewGroup'](ev, captureListeners))\n            return;\n        this._curScrollIsTouch = true;\n        let isMe = ev.eventPhase === Event.AT_TARGET && ev.target === this.node;\n        if (!isMe) {\n            let itemNode: any = ev.target;\n            while (itemNode._listId == null && itemNode.parent)\n                itemNode = itemNode.parent;\n            this._scrollItem = itemNode._listId != null ? itemNode : ev.target;\n        }\n    }\n    //触摸抬起时..\n    _onTouchUp() {\n        let t: any = this;\n        t._scrollPos = null;\n        if (t._slideMode == SlideType.ADHERING) {\n            if (this.adhering)\n                this._adheringBarrier = true;\n            t.adhere();\n        } else if (t._slideMode == SlideType.PAGE) {\n            if (t._beganPos != null) {\n                this._pageAdhere();\n            } else {\n                t.adhere();\n            }\n        }\n        this._scrollItem = null;\n    }\n\n    _onTouchCancelled(ev, captureListeners) {\n        let t = this;\n        if (t._scrollView['_hasNestedViewGroup'](ev, captureListeners) || ev.simulate)\n            return;\n\n        t._scrollPos = null;\n        if (t._slideMode == SlideType.ADHERING) {\n            if (t.adhering)\n                t._adheringBarrier = true;\n            t.adhere();\n        } else if (t._slideMode == SlideType.PAGE) {\n            if (t._beganPos != null) {\n                t._pageAdhere();\n            } else {\n                t.adhere();\n            }\n        }\n        this._scrollItem = null;\n    }\n    //当尺寸改变\n    _onSizeChanged() {\n        if (this.checkInited(false))\n            this._onScrolling();\n    }\n    //当Item自适应\n    _onItemAdaptive(item: any) {\n        let ut: UITransform = item.getComponent(UITransform);\n        // if (this.checkInited(false)) {\n        if (\n            (!this._sizeType && ut.width != this._itemSize.width)\n            || (this._sizeType && ut.height != this._itemSize.height)\n        ) {\n            if (!this._customSize)\n                this._customSize = {};\n            let val = this._sizeType ? ut.height : ut.width;\n            if (this._customSize[item._listId] != val) {\n                this._customSize[item._listId] = val;\n                this._resizeContent();\n                // this.content.children.forEach((child: Node) => {\n                //     this._updateItemPos(child);\n                // });\n                this.updateAll();\n                // 如果当前正在运行 scrollTo，肯定会不准确，在这里做修正\n                if (this._scrollToListId != null) {\n                    this._scrollPos = null;\n                    this.unschedule(this._scrollToSo);\n                    this.scrollTo(this._scrollToListId, Math.max(0, this._scrollToEndTime - ((new Date()).getTime() / 1000)));\n                }\n            }\n        }\n        // }\n    }\n    //PAGE粘附\n    _pageAdhere() {\n        let t = this;\n        if (!t.cyclic && (t.elasticTop > 0 || t.elasticRight > 0 || t.elasticBottom > 0 || t.elasticLeft > 0))\n            return;\n        let curPos = t._sizeType ? t.viewTop : t.viewLeft;\n        let dis = (t._sizeType ? t._thisNodeUt.height : t._thisNodeUt.width) * t.pageDistance;\n        let canSkip = Math.abs(t._beganPos - curPos) > dis;\n        if (canSkip) {\n            let timeInSecond = .5;\n            switch (t._alignCalcType) {\n                case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\n                case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\n                    if (t._beganPos > curPos) {\n                        t.prePage(timeInSecond);\n                        // cc.log('_pageAdhere   PPPPPPPPPPPPPPP');\n                    } else {\n                        t.nextPage(timeInSecond);\n                        // cc.log('_pageAdhere   NNNNNNNNNNNNNNN');\n                    }\n                    break;\n                case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\n                case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\n                    if (t._beganPos < curPos) {\n                        t.prePage(timeInSecond);\n                    } else {\n                        t.nextPage(timeInSecond);\n                    }\n                    break;\n            }\n        } else if (t.elasticTop <= 0 && t.elasticRight <= 0 && t.elasticBottom <= 0 && t.elasticLeft <= 0) {\n            t.adhere();\n        }\n        t._beganPos = null;\n    }\n    //粘附\n    adhere() {\n        let t: any = this;\n        if (!t.checkInited())\n            return;\n        if (t.elasticTop > 0 || t.elasticRight > 0 || t.elasticBottom > 0 || t.elasticLeft > 0)\n            return;\n        t.adhering = true;\n        t._calcNearestItem();\n        let offset: number = (t._sizeType ? t._topGap : t._leftGap) / (t._sizeType ? t._thisNodeUt.height : t._thisNodeUt.width);\n        let timeInSecond: number = .7;\n        t.scrollTo(t.nearestListId, timeInSecond, offset);\n    }\n    //Update..\n    update() {\n        if (this.frameByFrameRenderNum <= 0 || this._updateDone)\n            return;\n        // cc.log(this.displayData.length, this._updateCounter, this.displayData[this._updateCounter]);\n        if (this._virtual) {\n            let len: number = (this._updateCounter + this.frameByFrameRenderNum) > this.displayItemNum ? this.displayItemNum : (this._updateCounter + this.frameByFrameRenderNum);\n            for (let n: number = this._updateCounter; n < len; n++) {\n                let data: any = this.displayData[n];\n                if (data) {\n                    this._createOrUpdateItem(data);\n                }\n            }\n\n            if (this._updateCounter >= this.displayItemNum - 1) { //最后一个\n                if (this._doneAfterUpdate) {\n                    this._updateCounter = 0;\n                    this._updateDone = false;\n                    // if (!this._scrollView.isScrolling())\n                    this._doneAfterUpdate = false;\n                } else {\n                    this._updateDone = true;\n                    this._delRedundantItem();\n                    this._forceUpdate = false;\n                    this._calcNearestItem();\n                    if (this.slideMode == SlideType.PAGE)\n                        this.curPageNum = this.nearestListId;\n                }\n            } else {\n                this._updateCounter += this.frameByFrameRenderNum;\n            }\n        } else {\n            if (this._updateCounter < this._numItems) {\n                let len: number = (this._updateCounter + this.frameByFrameRenderNum) > this._numItems ? this._numItems : (this._updateCounter + this.frameByFrameRenderNum);\n                for (let n: number = this._updateCounter; n < len; n++) {\n                    this._createOrUpdateItem2(n);\n                }\n                this._updateCounter += this.frameByFrameRenderNum;\n            } else {\n                this._updateDone = true;\n                this._calcNearestItem();\n                if (this.slideMode == SlideType.PAGE)\n                    this.curPageNum = this.nearestListId;\n            }\n        }\n    }\n    /**\n     * 创建或更新Item（虚拟列表用）\n     * @param {Object} data 数据\n     */\n    _createOrUpdateItem(data: any) {\n        let item: any = this.getItemByListId(data.id);\n        if (!item) { //如果不存在\n            let canGet: boolean = this._pool.size() > 0;\n            if (canGet) {\n                item = this._pool.get();\n                // cc.log('从池中取出::   旧id =', item['_listId'], '，新id =', data.id, item);\n            } else {\n                item = instantiate(this._itemTmp);\n                // cc.log('新建::', data.id, item);\n            }\n            if (!canGet || !isValid(item)) {\n                item = instantiate(this._itemTmp);\n                canGet = false;\n            }\n            if (item._listId != data.id) {\n                item._listId = data.id;\n                let ut: UITransform = item.getComponent(UITransform);\n                ut.setContentSize(this._itemSize);\n            }\n            item.setPosition(new Vec3(data.x, data.y, 0));\n            this._resetItemSize(item);\n            this.content.addChild(item);\n            if (canGet && this._needUpdateWidget) {\n                let widget: Widget = item.getComponent(Widget);\n                if (widget)\n                    widget.updateAlignment();\n            }\n            item.setSiblingIndex(this.content.children.length - 1);\n\n            let listItem: ListItem = item.getComponent(ListItem);\n            item['listItem'] = listItem;\n            if (listItem) {\n                listItem.listId = data.id;\n                listItem.list = this;\n                listItem._registerEvent();\n            }\n            if (this.renderEvent) {\n                EventHandler.emitEvents([this.renderEvent], item, data.id % this._actualNumItems);\n            }\n        } else if (this._forceUpdate && this.renderEvent) { //强制更新\n            item.setPosition(new Vec3(data.x, data.y, 0));\n            this._resetItemSize(item);\n            // cc.log('ADD::', data.id, item);\n            if (this.renderEvent) {\n                EventHandler.emitEvents([this.renderEvent], item, data.id % this._actualNumItems);\n            }\n        }\n        this._resetItemSize(item);\n\n        this._updateListItem(item['listItem']);\n        if (this._lastDisplayData.indexOf(data.id) < 0) {\n            this._lastDisplayData.push(data.id);\n        }\n    }\n    //创建或更新Item（非虚拟列表用）\n    _createOrUpdateItem2(listId: number) {\n        let item: any = this.content.children[listId];\n        let listItem: ListItem;\n        if (!item) { //如果不存在\n            item = instantiate(this._itemTmp);\n            item._listId = listId;\n            this.content.addChild(item);\n            listItem = item.getComponent(ListItem);\n            item['listItem'] = listItem;\n            if (listItem) {\n                listItem.listId = listId;\n                listItem.list = this;\n                listItem._registerEvent();\n            }\n            if (this.renderEvent) {\n                EventHandler.emitEvents([this.renderEvent], item, listId % this._actualNumItems);\n            }\n        } else if (this._forceUpdate && this.renderEvent) { //强制更新\n            item._listId = listId;\n            if (listItem)\n                listItem.listId = listId;\n            if (this.renderEvent) {\n                EventHandler.emitEvents([this.renderEvent], item, listId % this._actualNumItems);\n            }\n        }\n        this._updateListItem(listItem);\n        if (this._lastDisplayData.indexOf(listId) < 0) {\n            this._lastDisplayData.push(listId);\n        }\n    }\n\n    _updateListItem(listItem: ListItem) {\n        if (!listItem)\n            return;\n        if (this.selectedMode > SelectedType.NONE) {\n            let item: any = listItem.node;\n            switch (this.selectedMode) {\n                case SelectedType.SINGLE:\n                    listItem.selected = this.selectedId == item._listId;\n                    break;\n                case SelectedType.MULT:\n                    listItem.selected = this.multSelected.indexOf(item._listId) >= 0;\n                    break;\n            }\n        }\n    }\n    //仅虚拟列表用\n    _resetItemSize(item: any) {\n        return;\n        let size: number;\n        let ut: UITransform = item.getComponent(UITransform);\n        if (this._customSize && this._customSize[item._listId]) {\n            size = this._customSize[item._listId];\n        } else {\n            if (this._colLineNum > 1)\n                ut.setContentSize(this._itemSize);\n            else\n                size = this._sizeType ? this._itemSize.height : this._itemSize.width;\n        }\n        if (size) {\n            if (this._sizeType)\n                ut.height = size;\n            else\n                ut.width = size;\n        }\n    }\n    /**\n     * 更新Item位置\n     * @param {Number||Node} listIdOrItem\n     */\n    _updateItemPos(listIdOrItem: any) {\n        let item: any = isNaN(listIdOrItem) ? listIdOrItem : this.getItemByListId(listIdOrItem);\n        let pos: any = this.getItemPos(item._listId);\n        item.setPosition(pos.x, pos.y);\n    }\n    /**\n     * 设置多选\n     * @param {Array} args 可以是单个listId，也可是个listId数组\n     * @param {Boolean} bool 值，如果为null的话，则直接用args覆盖\n     */\n    setMultSelected(args: any, bool: boolean) {\n        let t: any = this;\n        if (!t.checkInited())\n            return;\n        if (!Array.isArray(args)) {\n            args = [args];\n        }\n        if (bool == null) {\n            t.multSelected = args;\n        } else {\n            let listId: number, sub: number;\n            if (bool) {\n                for (let n: number = args.length - 1; n >= 0; n--) {\n                    listId = args[n];\n                    sub = t.multSelected.indexOf(listId);\n                    if (sub < 0) {\n                        t.multSelected.push(listId);\n                    }\n                }\n            } else {\n                for (let n: number = args.length - 1; n >= 0; n--) {\n                    listId = args[n];\n                    sub = t.multSelected.indexOf(listId);\n                    if (sub >= 0) {\n                        t.multSelected.splice(sub, 1);\n                    }\n                }\n            }\n        }\n        t._forceUpdate = true;\n        t._onScrolling();\n    }\n    /**\n     * 获取多选数据\n     * @returns\n     */\n    getMultSelected() {\n        return this.multSelected;\n    }\n    /**\n     * 多选是否有选择\n     * @param {number} listId 索引\n     * @returns\n     */\n    hasMultSelected(listId: number) {\n        return this.multSelected && this.multSelected.indexOf(listId) >= 0;\n    }\n    /**\n     * 更新指定的Item\n     * @param {Array} args 单个listId，或者数组\n     * @returns\n     */\n    updateItem(args: any) {\n        if (!this.checkInited())\n            return;\n        if (!Array.isArray(args)) {\n            args = [args];\n        }\n        for (let n: number = 0, len: number = args.length; n < len; n++) {\n            let listId: number = args[n];\n            let item: any = this.getItemByListId(listId);\n            if (item)\n                EventHandler.emitEvents([this.renderEvent], item, listId % this._actualNumItems);\n        }\n    }\n    /**\n     * 更新全部\n     */\n    updateAll() {\n        if (!this.checkInited())\n            return;\n        this.numItems = this.numItems;\n    }\n    /**\n     * 根据ListID获取Item\n     * @param {Number} listId\n     * @returns\n     */\n    getItemByListId(listId: number) {\n        if (this.content) {\n            for (let n: number = this.content.children.length - 1; n >= 0; n--) {\n                let item: any = this.content.children[n];\n                if (item._listId == listId)\n                    return item;\n            }\n        }\n    }\n    /**\n     * 获取在显示区域外的Item\n     * @returns\n     */\n    _getOutsideItem() {\n        let item: any;\n        let result: any[] = [];\n        for (let n: number = this.content.children.length - 1; n >= 0; n--) {\n            item = this.content.children[n];\n            if (!this.displayData.find(d => d.id == item._listId)) {\n                result.push(item);\n            }\n        }\n        return result;\n    }\n    //删除显示区域以外的Item\n    _delRedundantItem() {\n        if (this._virtual) {\n            let arr: any[] = this._getOutsideItem();\n            for (let n: number = arr.length - 1; n >= 0; n--) {\n                let item: any = arr[n];\n                if (this._scrollItem && item._listId == this._scrollItem._listId)\n                    continue;\n                item.isCached = true;\n                this._pool.put(item);\n                for (let m: number = this._lastDisplayData.length - 1; m >= 0; m--) {\n                    if (this._lastDisplayData[m] == item._listId) {\n                        this._lastDisplayData.splice(m, 1);\n                        break;\n                    }\n                }\n            }\n            // cc.log('存入::', str, '    pool.length =', this._pool.length);\n        } else {\n            while (this.content.children.length > this._numItems) {\n                this._delSingleItem(this.content.children[this.content.children.length - 1]);\n            }\n        }\n    }\n    //删除单个Item\n    _delSingleItem(item: any) {\n        // cc.log('DEL::', item['_listId'], item);\n        item.removeFromParent();\n        if (item.destroy)\n            item.destroy();\n        item = null;\n    }\n    /** \n     * 动效删除Item（此方法只适用于虚拟列表，即_virtual=true）\n     * 一定要在回调函数里重新设置新的numItems进行刷新，毕竟本List是靠数据驱动的。\n     */\n    aniDelItem(listId: number, callFunc: Function, aniType: number) {\n        let t: any = this;\n\n        if (!t.checkInited() || t.cyclic || !t._virtual)\n            return console.error('This function is not allowed to be called!');\n\n        if (!callFunc)\n            return console.error('CallFunc are not allowed to be NULL, You need to delete the corresponding index in the data array in the CallFunc!');\n\n        if (t._aniDelRuning)\n            return console.warn('Please wait for the current deletion to finish!');\n\n        let item: any = t.getItemByListId(listId);\n        let listItem: ListItem;\n        if (!item) {\n            callFunc(listId);\n            return;\n        } else {\n            listItem = item.getComponent(ListItem);\n        }\n        t._aniDelRuning = true;\n        t._aniDelCB = callFunc;\n        t._aniDelItem = item;\n        t._aniDelBeforePos = item.position;\n        t._aniDelBeforeScale = item.scale;\n        let curLastId: number = t.displayData[t.displayData.length - 1].id;\n        let resetSelectedId: boolean = listItem.selected;\n        listItem.showAni(aniType, () => {\n            //判断有没有下一个，如果有的话，创建粗来\n            let newId: number;\n            if (curLastId < t._numItems - 2) {\n                newId = curLastId + 1;\n            }\n            if (newId != null) {\n                let newData: any = t._calcItemPos(newId);\n                t.displayData.push(newData);\n                if (t._virtual)\n                    t._createOrUpdateItem(newData);\n                else\n                    t._createOrUpdateItem2(newId);\n            } else\n                t._numItems--;\n            if (t.selectedMode == SelectedType.SINGLE) {\n                if (resetSelectedId) {\n                    t._selectedId = -1;\n                } else if (t._selectedId - 1 >= 0) {\n                    t._selectedId--;\n                }\n            } else if (t.selectedMode == SelectedType.MULT && t.multSelected.length) {\n                let sub: number = t.multSelected.indexOf(listId);\n                if (sub >= 0) {\n                    t.multSelected.splice(sub, 1);\n                }\n                //多选的数据，在其后的全部减一\n                for (let n: number = t.multSelected.length - 1; n >= 0; n--) {\n                    let id: number = t.multSelected[n];\n                    if (id >= listId)\n                        t.multSelected[n]--;\n                }\n            }\n            if (t._customSize) {\n                if (t._customSize[listId])\n                    delete t._customSize[listId];\n                let newCustomSize: any = {};\n                let size: number;\n                for (let id in t._customSize) {\n                    size = t._customSize[id];\n                    let idNumber: number = parseInt(id);\n                    newCustomSize[idNumber - (idNumber >= listId ? 1 : 0)] = size;\n                }\n                t._customSize = newCustomSize;\n            }\n            //后面的Item向前怼的动效\n            let sec: number = .2333;\n            let twe: Tween<Node>, haveCB: boolean;\n            for (let n: number = newId != null ? newId : curLastId; n >= listId + 1; n--) {\n                item = t.getItemByListId(n);\n                if (item) {\n                    let posData: any = t._calcItemPos(n - 1);\n                    twe = tween(item)\n                        .to(sec, { position: new Vec3(posData.x, posData.y, 0) });\n\n                    if (n <= listId + 1) {\n                        haveCB = true;\n                        twe.call(() => {\n                            t._aniDelRuning = false;\n                            callFunc(listId);\n                            delete t._aniDelCB;\n                        });\n                    }\n                    twe.start();\n                }\n            }\n            if (!haveCB) {\n                t._aniDelRuning = false;\n                callFunc(listId);\n                t._aniDelCB = null;\n            }\n        }, true);\n    }\n    /**\n     * 滚动到..\n     * @param {Number} listId 索引（如果<0，则滚到首个Item位置，如果>=_numItems，则滚到最末Item位置）\n     * @param {Number} timeInSecond 时间\n     * @param {Number} offset 索引目标位置偏移，0-1\n     * @param {Boolean} overStress 滚动后是否强调该Item（这只是个实验功能）\n     */\n    scrollTo(listId: number, timeInSecond: number = .5, offset: number = null, overStress: boolean = false) {\n        let t = this;\n        if (!t.checkInited(false))\n            return;\n        // t._scrollView.stopAutoScroll();\n        if (timeInSecond == null)   //默认0.5\n            timeInSecond = .5;\n        else if (timeInSecond < 0)\n            timeInSecond = 0;\n        if (listId < 0)\n            listId = 0;\n        else if (listId >= t._numItems)\n            listId = t._numItems - 1;\n        // 以防设置了numItems之后layout的尺寸还未更新\n        if (!t._virtual && t._layout && t._layout.enabled)\n            t._layout.updateLayout();\n\n        let pos = t.getItemPos(listId);\n        if (!pos) {\n            return  console.error('pos is null', listId);\n        }\n        let targetX: number, targetY: number;\n\n        switch (t._alignCalcType) {\n            case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\n                targetX = pos.left;\n                if (offset != null)\n                    targetX -= t._thisNodeUt.width * offset;\n                else\n                    targetX -= t._leftGap;\n                pos = new Vec3(targetX, 0, 0);\n                break;\n            case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\n                targetX = pos.right - t._thisNodeUt.width;\n                if (offset != null)\n                    targetX += t._thisNodeUt.width * offset;\n                else\n                    targetX += t._rightGap;\n                pos = new Vec3(targetX + t._contentUt.width, 0, 0);\n                break;\n            case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\n                targetY = pos.top;\n                if (offset != null)\n                    targetY += t._thisNodeUt.height * offset;\n                else\n                    targetY += t._topGap;\n                pos = new Vec3(0, -targetY, 0);\n                break;\n            case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\n                targetY = pos.bottom + t._thisNodeUt.height;\n                if (offset != null)\n                    targetY -= t._thisNodeUt.height * offset;\n                else\n                    targetY -= t._bottomGap;\n                pos = new Vec3(0, -targetY + t._contentUt.height, 0);\n                break;\n        }\n        let viewPos: any = t.content.getPosition();\n        viewPos = Math.abs(t._sizeType ? viewPos.y : viewPos.x);\n\n        let comparePos = t._sizeType ? pos.y : pos.x;\n        let runScroll = Math.abs((t._scrollPos != null ? t._scrollPos : viewPos) - comparePos) > .5;\n        // cc.log(runScroll, t._scrollPos, viewPos, comparePos)\n\n        // t._scrollView.stopAutoScroll();\n        if (runScroll) {\n            t._scrollView.scrollToOffset(pos, timeInSecond);\n            t._scrollToListId = listId;\n            t._scrollToEndTime = ((new Date()).getTime() / 1000) + timeInSecond;\n            // cc.log(listId, t.content.width, t.content.getPosition(), pos);\n            t._scrollToSo = t.scheduleOnce(() => {\n                if (!t._adheringBarrier) {\n                    t.adhering = t._adheringBarrier = false;\n                }\n                t._scrollPos =\n                    t._scrollToListId =\n                    t._scrollToEndTime =\n                    t._scrollToSo =\n                    null;\n                //cc.log('2222222222', t._adheringBarrier)\n                if (overStress) {\n                    // t.scrollToListId = listId;\n                    let item = t.getItemByListId(listId);\n                    if (item) {\n                        tween(item)\n                            .to(.1, { scale: 1.05 })\n                            .to(.1, { scale: 1 })\n                            .start();\n                    }\n                }\n            }, timeInSecond + .1);\n\n            if (timeInSecond <= 0) {\n                t._onScrolling();\n            }\n        }\n    }\n    /**\n     * 计算当前滚动窗最近的Item\n     */\n    _calcNearestItem() {\n        let t: any = this;\n        t.nearestListId = null;\n        let data: any, center: number;\n\n        if (t._virtual)\n            t._calcViewPos();\n\n        let vTop: number, vRight: number, vBottom: number, vLeft: number;\n        vTop = t.viewTop;\n        vRight = t.viewRight;\n        vBottom = t.viewBottom;\n        vLeft = t.viewLeft;\n\n        let breakFor: boolean = false;\n        for (let n = 0; n < t.content.children.length && !breakFor; n += t._colLineNum) {\n            data = t._virtual ? t.displayData[n] : t._calcExistItemPos(n);\n            if (data) {\n                center = t._sizeType ? ((data.top + data.bottom) / 2) : (center = (data.left + data.right) / 2);\n                switch (t._alignCalcType) {\n                    case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\n                        if (data.right >= vLeft) {\n                            t.nearestListId = data.id;\n                            if (vLeft > center)\n                                t.nearestListId += t._colLineNum;\n                            breakFor = true;\n                        }\n                        break;\n                    case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\n                        if (data.left <= vRight) {\n                            t.nearestListId = data.id;\n                            if (vRight < center)\n                                t.nearestListId += t._colLineNum;\n                            breakFor = true;\n                        }\n                        break;\n                    case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\n                        if (data.bottom <= vTop) {\n                            t.nearestListId = data.id;\n                            if (vTop < center)\n                                t.nearestListId += t._colLineNum;\n                            breakFor = true;\n                        }\n                        break;\n                    case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\n                        if (data.top >= vBottom) {\n                            t.nearestListId = data.id;\n                            if (vBottom > center)\n                                t.nearestListId += t._colLineNum;\n                            breakFor = true;\n                        }\n                        break;\n                }\n            }\n        }\n        //判断最后一个Item。。。（哎，这些判断真心恶心，判断了前面的还要判断最后一个。。。一开始呢，就只有一个布局（单列布局），那时候代码才三百行，后来就想着完善啊，艹..这坑真深，现在这行数都一千五了= =||）\n        data = t._virtual ? t.displayData[t.displayItemNum - 1] : t._calcExistItemPos(t._numItems - 1);\n        if (data && data.id == t._numItems - 1) {\n            center = t._sizeType ? ((data.top + data.bottom) / 2) : (center = (data.left + data.right) / 2);\n            switch (t._alignCalcType) {\n                case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\n                    if (vRight > center)\n                        t.nearestListId = data.id;\n                    break;\n                case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\n                    if (vLeft < center)\n                        t.nearestListId = data.id;\n                    break;\n                case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\n                    if (vBottom < center)\n                        t.nearestListId = data.id;\n                    break;\n                case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\n                    if (vTop > center)\n                        t.nearestListId = data.id;\n                    break;\n            }\n        }\n        // cc.log('t.nearestListId =', t.nearestListId);\n    }\n    //上一页\n    prePage(timeInSecond: number = .5) {\n        // cc.log('👈');\n        if (!this.checkInited())\n            return;\n        this.skipPage(this.curPageNum - 1, timeInSecond);\n    }\n    //下一页\n    nextPage(timeInSecond: number = .5) {\n        // cc.log('👉');\n        if (!this.checkInited())\n            return;\n        this.skipPage(this.curPageNum + 1, timeInSecond);\n    }\n    //跳转到第几页\n    skipPage(pageNum: number, timeInSecond: number) {\n        let t: any = this;\n        if (!t.checkInited())\n            return;\n        if (t._slideMode != SlideType.PAGE)\n            return console.error('This function is not allowed to be called, Must SlideMode = PAGE!');\n        if (pageNum < 0 || pageNum >= t._numItems)\n            return;\n        if (t.curPageNum == pageNum)\n            return;\n        // cc.log(pageNum);\n        t.curPageNum = pageNum;\n        if (t.pageChangeEvent) {\n            EventHandler.emitEvents([t.pageChangeEvent], pageNum);\n        }\n        t.scrollTo(pageNum, timeInSecond);\n    }\n    //计算 CustomSize（这个函数还是保留吧，某些罕见的情况的确还是需要手动计算customSize的）\n    calcCustomSize(numItems: number) {\n        let t: any = this;\n        if (!t.checkInited())\n            return;\n        if (!t._itemTmp)\n            return console.error('Unset template item!');\n        if (!t.renderEvent)\n            return console.error('Unset Render-Event!');\n        t._customSize = {};\n        let temp: any = instantiate(t._itemTmp);\n        let ut: UITransform = temp.getComponent(UITransform);\n        t.content.addChild(temp);\n        for (let n: number = 0; n < numItems; n++) {\n            EventHandler.emitEvents([t.renderEvent], temp, n);\n            if (ut.height != t._itemSize.height || ut.width != t._itemSize.width) {\n                t._customSize[n] = t._sizeType ? ut.height : ut.width;\n            }\n        }\n        if (!Object.keys(t._customSize).length)\n            t._customSize = null;\n        temp.removeFromParent();\n        if (temp.destroy)\n            temp.destroy();\n        return t._customSize;\n    }\n}"]}