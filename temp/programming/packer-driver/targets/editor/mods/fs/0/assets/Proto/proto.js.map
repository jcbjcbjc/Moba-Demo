{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Proto/proto.js"],"names":["$protobuf","require","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","Result","valuesById","values","Object","create","CharacterClass","ItemType","AddAttrType","ItemFunction","BagHandleType","TipsType","NUser","properties","unLockCharacters","bag","keys","i","length","prototype","id","nickname","coin","Long","fromBits","character","emptyArray","isFollow","status","fenSiCount","userStatus","biFen","teamType","roomNum","encode","message","writer","hasOwnProperty","uint32","int32","string","int64","NCharacter","fork","ldelim","UnLockCharacter","bool","NItem","encodeDelimited","decode","reader","end","undefined","len","pos","tag","push","skipType","decodeDelimited","verify","isInteger","isString","low","high","error","Array","isArray","fromObject","object","String","fromValue","unsigned","parseInt","LongBits","toNumber","TypeError","Boolean","toObject","options","arrays","defaults","long","longs","toString","Number","enums","call","j","UserStatus","TeamType","toJSON","constructor","toJSONOptions","tid","cid","level","exp","userId","att","def","hp","cri","resu","speed","cd","attSpot","defSpot","hpSpot","criSpot","resuSpot","speedSpot","cdSpot","levelExp","speedValue","itemId","count","isTran","money","StatusAction","StatusType","NStatus","type","action","value","StatusNotify","NUserStatusChange","NAuctionItem","biddingPrice","currentPrice","bidderUserId","bidderNickName","remainingTime","NetMessage","Request","Response","NetMessageRequest","NetMessageResponse","userRegister","userLogin","characterDetail","updateNickName","attrPromote","combatPowerRanking","itemBuy","followReq","unLockReq","switchCharacterReq","bagHandleReq","queryTranReq","buyTranReq","heartBeatReq","offerPriceReq","auctionReq","getAuctionListReq","myRoomReq","inviteReq","inviteRes","kickOutReq","roomStartGameReq","nickNameSearchReq","addRoomReq","addRoomRes","outRoomReq","chatReq","userStatusQueryReq","startMatchReq","gameOver2Req","addLiveReq","uploadBiFenReq","followListReq","validateOpenRoomReq","UserRegisterRequest","UserLoginRequest","CharacterDetailRequest","UpdateNickNameRequest","AttrPromoteRequest","CombatPowerRankingRequest","ItemBuyRequest","FollowRequest","UnLockRequest","SwitchCharacterRequest","BagHandleRequest","QueryTranRequest","BuyTranRequest","HeartBeatRequest","OfferPriceRequest","AuctionRequest","GetAuctionListRequest","MyRoomRequest","InviteRequest","InviteResponse","KickOutRequest","RoomStartGameRequest","NickNameSearchRequest","AddRoomRequest","AddRoomResponse","OutRoomRequest","ChatRequest","UserStatusQueryRequest","StartMatchRequest","GameOver2Request","AddLiveRequest","UploadBiFenRequest","FollowListRequest","ValidateOpenRoomRequest","followRes","unLockRes","switchCharacterRes","bagHandleRes","userStatusChangeRes","queryTranRes","buyTranRes","heartBeatRes","offerPriceRes","auctionRes","getAuctionListRes","tipsRes","myRoomRes","kickOutRes","roomStartGameRes","nickNameSearchRes","followListRes","outRoomRes","chatRes","userStatusQueryRes","startMatchRes","matchRes","addLiveRes","validateOpenRoomRes","statusNotify","UserRegisterResponse","UserLoginResponse","CharacterDetailResponse","UpdateNickNameResponse","AttrPromoteInfoResponse","CombatPowerRankingResponse","ItemBuyResponse","FollowResponse","UnLockResponse","SwitchCharacterResponse","BagHandleResponse","UserStatusChangeResponse","QueryTranResponse","BuyTranResponse","HeartBeatResponse","OfferPriceResponse","AuctionResponse","GetAuctionListResponse","TipsResponse","MyRoomResponse","KickOutResponse","RoomStartGameResponse","NickNameSearchResponse","FollowListResponse","OutRoomResponse","ChatResponse","UserStatusQueryResponse","StartMatchResponse","MatchResponse","AddLiveResponse","ValidateOpenRoomResponse","userName","passward","result","errormsg","user","password","tCharacterId","spot","attrValue","attrPromoteType","AttrPromoteType","users","myRanking","shopId","cCharacterId","unLockCharacter","bagHandleType","userStatusChanges","items","liveFenSiCount","auctionItems","TipsWorkType","tipsType","content","tipsWorkType","RoomUser","nickName","RoomStatus","NRoom","my","enemy","roomId","roomStatus","ipPortStr","randomSeed","room","fromUserId","fromNickName","toUserId","toNickName","inviteRequest","roomUser","addRoomRequest","follows","ChatChannel","ChatMessage","chatChannel","fromId","fromName","fromLevel","fromCCharacterId","toId","toName","toLevel","toCCharacterId","msg","time","chatRoomType","enterLiveUserId","ChatRoomType","chatMessage","compMessages","privateMessages","roomMessages","userIds","end2","module","exports"],"mappings":"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","sourcesContent":["/*eslint-disable block-scoped-var, no-redeclare, no-control-regex, no-prototype-builtins*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal.js\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n/**\n * Result enum.\n * @exports Result\n * @enum {string}\n * @property {number} Success=0 Success value\n * @property {number} Failed=1 Failed value\n */\n$root.Result = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = \"Success\"] = 0;\n    values[valuesById[1] = \"Failed\"] = 1;\n    return values;\n})();\n\n/**\n * CharacterClass enum.\n * @exports CharacterClass\n * @enum {string}\n * @property {number} NONE=0 NONE value\n * @property {number} WARRIOR=1 WARRIOR value\n * @property {number} WIZARD=2 WIZARD value\n * @property {number} ASSASSIN=3 ASSASSIN value\n * @property {number} NoticeMonsters=4 NoticeMonsters value\n * @property {number} Monsters=5 Monsters value\n * @property {number} Soldier=6 Soldier value\n * @property {number} Cart=7 Cart value\n */\n$root.CharacterClass = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = \"NONE\"] = 0;\n    values[valuesById[1] = \"WARRIOR\"] = 1;\n    values[valuesById[2] = \"WIZARD\"] = 2;\n    values[valuesById[3] = \"ASSASSIN\"] = 3;\n    values[valuesById[4] = \"NoticeMonsters\"] = 4;\n    values[valuesById[5] = \"Monsters\"] = 5;\n    values[valuesById[6] = \"Soldier\"] = 6;\n    values[valuesById[7] = \"Cart\"] = 7;\n    return values;\n})();\n\n/**\n * ItemType enum.\n * @exports ItemType\n * @enum {string}\n * @property {number} SPORTS=0 SPORTS value\n * @property {number} ATTSTONE=1 ATTSTONE value\n * @property {number} DEFSTONE=2 DEFSTONE value\n * @property {number} RESUSTONE=3 RESUSTONE value\n * @property {number} HPSTONE=4 HPSTONE value\n * @property {number} CDSTONE=5 CDSTONE value\n * @property {number} CRISTONE=6 CRISTONE value\n * @property {number} SPEEDSTONE=7 SPEEDSTONE value\n */\n$root.ItemType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = \"SPORTS\"] = 0;\n    values[valuesById[1] = \"ATTSTONE\"] = 1;\n    values[valuesById[2] = \"DEFSTONE\"] = 2;\n    values[valuesById[3] = \"RESUSTONE\"] = 3;\n    values[valuesById[4] = \"HPSTONE\"] = 4;\n    values[valuesById[5] = \"CDSTONE\"] = 5;\n    values[valuesById[6] = \"CRISTONE\"] = 6;\n    values[valuesById[7] = \"SPEEDSTONE\"] = 7;\n    return values;\n})();\n\n/**\n * AddAttrType enum.\n * @exports AddAttrType\n * @enum {string}\n * @property {number} GEM=0 GEM value\n * @property {number} SPAR=1 SPAR value\n */\n$root.AddAttrType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = \"GEM\"] = 0;\n    values[valuesById[1] = \"SPAR\"] = 1;\n    return values;\n})();\n\n/**\n * ItemFunction enum.\n * @exports ItemFunction\n * @enum {string}\n * @property {number} RecoverHP=0 RecoverHP value\n * @property {number} RecoverMP=1 RecoverMP value\n * @property {number} AddBuf=2 AddBuf value\n * @property {number} AddExp=3 AddExp value\n * @property {number} AddMoney=4 AddMoney value\n * @property {number} AddItem=5 AddItem value\n * @property {number} AddBuff=6 AddBuff value\n * @property {number} AddSkillPoint=7 AddSkillPoint value\n */\n$root.ItemFunction = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = \"RecoverHP\"] = 0;\n    values[valuesById[1] = \"RecoverMP\"] = 1;\n    values[valuesById[2] = \"AddBuf\"] = 2;\n    values[valuesById[3] = \"AddExp\"] = 3;\n    values[valuesById[4] = \"AddMoney\"] = 4;\n    values[valuesById[5] = \"AddItem\"] = 5;\n    values[valuesById[6] = \"AddBuff\"] = 6;\n    values[valuesById[7] = \"AddSkillPoint\"] = 7;\n    return values;\n})();\n\n/**\n * BagHandleType enum.\n * @exports BagHandleType\n * @enum {string}\n * @property {number} SELL=0 SELL value\n * @property {number} TRAN=1 TRAN value\n * @property {number} CANCELTRAN=2 CANCELTRAN value\n */\n$root.BagHandleType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = \"SELL\"] = 0;\n    values[valuesById[1] = \"TRAN\"] = 1;\n    values[valuesById[2] = \"CANCELTRAN\"] = 2;\n    return values;\n})();\n\n/**\n * TipsType enum.\n * @exports TipsType\n * @enum {string}\n * @property {number} Tips=0 Tips value\n * @property {number} Popup=1 Popup value\n */\n$root.TipsType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = \"Tips\"] = 0;\n    values[valuesById[1] = \"Popup\"] = 1;\n    return values;\n})();\n\n$root.NUser = (function() {\n\n    /**\n     * Properties of a NUser.\n     * @exports INUser\n     * @interface INUser\n     * @property {number|null} [id] NUser id\n     * @property {string|null} [nickname] NUser nickname\n     * @property {number|Long|null} [coin] NUser coin\n     * @property {INCharacter|null} [character] NUser character\n     * @property {Array.<IUnLockCharacter>|null} [unLockCharacters] NUser unLockCharacters\n     * @property {boolean|null} [isFollow] NUser isFollow\n     * @property {Array.<INItem>|null} [bag] NUser bag\n     * @property {boolean|null} [status] NUser status\n     * @property {number|null} [fenSiCount] NUser fenSiCount\n     * @property {UserStatus|null} [userStatus] NUser userStatus\n     * @property {string|null} [biFen] NUser biFen\n     * @property {TeamType|null} [teamType] NUser teamType\n     * @property {number|null} [roomNum] NUser roomNum\n     */\n\n    /**\n     * Constructs a new NUser.\n     * @exports NUser\n     * @classdesc Represents a NUser.\n     * @implements INUser\n     * @constructor\n     * @param {INUser=} [properties] Properties to set\n     */\n    function NUser(properties) {\n        this.unLockCharacters = [];\n        this.bag = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * NUser id.\n     * @member {number} id\n     * @memberof NUser\n     * @instance\n     */\n    NUser.prototype.id = 0;\n\n    /**\n     * NUser nickname.\n     * @member {string} nickname\n     * @memberof NUser\n     * @instance\n     */\n    NUser.prototype.nickname = \"\";\n\n    /**\n     * NUser coin.\n     * @member {number|Long} coin\n     * @memberof NUser\n     * @instance\n     */\n    NUser.prototype.coin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * NUser character.\n     * @member {INCharacter|null|undefined} character\n     * @memberof NUser\n     * @instance\n     */\n    NUser.prototype.character = null;\n\n    /**\n     * NUser unLockCharacters.\n     * @member {Array.<IUnLockCharacter>} unLockCharacters\n     * @memberof NUser\n     * @instance\n     */\n    NUser.prototype.unLockCharacters = $util.emptyArray;\n\n    /**\n     * NUser isFollow.\n     * @member {boolean} isFollow\n     * @memberof NUser\n     * @instance\n     */\n    NUser.prototype.isFollow = false;\n\n    /**\n     * NUser bag.\n     * @member {Array.<INItem>} bag\n     * @memberof NUser\n     * @instance\n     */\n    NUser.prototype.bag = $util.emptyArray;\n\n    /**\n     * NUser status.\n     * @member {boolean} status\n     * @memberof NUser\n     * @instance\n     */\n    NUser.prototype.status = false;\n\n    /**\n     * NUser fenSiCount.\n     * @member {number} fenSiCount\n     * @memberof NUser\n     * @instance\n     */\n    NUser.prototype.fenSiCount = 0;\n\n    /**\n     * NUser userStatus.\n     * @member {UserStatus} userStatus\n     * @memberof NUser\n     * @instance\n     */\n    NUser.prototype.userStatus = 0;\n\n    /**\n     * NUser biFen.\n     * @member {string} biFen\n     * @memberof NUser\n     * @instance\n     */\n    NUser.prototype.biFen = \"\";\n\n    /**\n     * NUser teamType.\n     * @member {TeamType} teamType\n     * @memberof NUser\n     * @instance\n     */\n    NUser.prototype.teamType = 0;\n\n    /**\n     * NUser roomNum.\n     * @member {number} roomNum\n     * @memberof NUser\n     * @instance\n     */\n    NUser.prototype.roomNum = 0;\n\n    /**\n     * Creates a new NUser instance using the specified properties.\n     * @function create\n     * @memberof NUser\n     * @static\n     * @param {INUser=} [properties] Properties to set\n     * @returns {NUser} NUser instance\n     */\n    NUser.create = function create(properties) {\n        return new NUser(properties);\n    };\n\n    /**\n     * Encodes the specified NUser message. Does not implicitly {@link NUser.verify|verify} messages.\n     * @function encode\n     * @memberof NUser\n     * @static\n     * @param {INUser} message NUser message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NUser.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n        if (message.nickname != null && message.hasOwnProperty(\"nickname\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.nickname);\n        if (message.coin != null && message.hasOwnProperty(\"coin\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).int64(message.coin);\n        if (message.character != null && message.hasOwnProperty(\"character\"))\n            $root.NCharacter.encode(message.character, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.unLockCharacters != null && message.unLockCharacters.length)\n            for (var i = 0; i < message.unLockCharacters.length; ++i)\n                $root.UnLockCharacter.encode(message.unLockCharacters[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n        if (message.isFollow != null && message.hasOwnProperty(\"isFollow\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).bool(message.isFollow);\n        if (message.bag != null && message.bag.length)\n            for (var i = 0; i < message.bag.length; ++i)\n                $root.NItem.encode(message.bag[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n        if (message.status != null && message.hasOwnProperty(\"status\"))\n            writer.uint32(/* id 8, wireType 0 =*/64).bool(message.status);\n        if (message.fenSiCount != null && message.hasOwnProperty(\"fenSiCount\"))\n            writer.uint32(/* id 9, wireType 0 =*/72).int32(message.fenSiCount);\n        if (message.userStatus != null && message.hasOwnProperty(\"userStatus\"))\n            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.userStatus);\n        if (message.biFen != null && message.hasOwnProperty(\"biFen\"))\n            writer.uint32(/* id 11, wireType 2 =*/90).string(message.biFen);\n        if (message.teamType != null && message.hasOwnProperty(\"teamType\"))\n            writer.uint32(/* id 12, wireType 0 =*/96).int32(message.teamType);\n        if (message.roomNum != null && message.hasOwnProperty(\"roomNum\"))\n            writer.uint32(/* id 13, wireType 0 =*/104).int32(message.roomNum);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified NUser message, length delimited. Does not implicitly {@link NUser.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof NUser\n     * @static\n     * @param {INUser} message NUser message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NUser.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a NUser message from the specified reader or buffer.\n     * @function decode\n     * @memberof NUser\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {NUser} NUser\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NUser.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NUser();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.id = reader.int32();\n                break;\n            case 2:\n                message.nickname = reader.string();\n                break;\n            case 3:\n                message.coin = reader.int64();\n                break;\n            case 4:\n                message.character = $root.NCharacter.decode(reader, reader.uint32());\n                break;\n            case 5:\n                if (!(message.unLockCharacters && message.unLockCharacters.length))\n                    message.unLockCharacters = [];\n                message.unLockCharacters.push($root.UnLockCharacter.decode(reader, reader.uint32()));\n                break;\n            case 6:\n                message.isFollow = reader.bool();\n                break;\n            case 7:\n                if (!(message.bag && message.bag.length))\n                    message.bag = [];\n                message.bag.push($root.NItem.decode(reader, reader.uint32()));\n                break;\n            case 8:\n                message.status = reader.bool();\n                break;\n            case 9:\n                message.fenSiCount = reader.int32();\n                break;\n            case 10:\n                message.userStatus = reader.int32();\n                break;\n            case 11:\n                message.biFen = reader.string();\n                break;\n            case 12:\n                message.teamType = reader.int32();\n                break;\n            case 13:\n                message.roomNum = reader.int32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a NUser message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof NUser\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {NUser} NUser\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NUser.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a NUser message.\n     * @function verify\n     * @memberof NUser\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    NUser.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (!$util.isInteger(message.id))\n                return \"id: integer expected\";\n        if (message.nickname != null && message.hasOwnProperty(\"nickname\"))\n            if (!$util.isString(message.nickname))\n                return \"nickname: string expected\";\n        if (message.coin != null && message.hasOwnProperty(\"coin\"))\n            if (!$util.isInteger(message.coin) && !(message.coin && $util.isInteger(message.coin.low) && $util.isInteger(message.coin.high)))\n                return \"coin: integer|Long expected\";\n        if (message.character != null && message.hasOwnProperty(\"character\")) {\n            var error = $root.NCharacter.verify(message.character);\n            if (error)\n                return \"character.\" + error;\n        }\n        if (message.unLockCharacters != null && message.hasOwnProperty(\"unLockCharacters\")) {\n            if (!Array.isArray(message.unLockCharacters))\n                return \"unLockCharacters: array expected\";\n            for (var i = 0; i < message.unLockCharacters.length; ++i) {\n                var error = $root.UnLockCharacter.verify(message.unLockCharacters[i]);\n                if (error)\n                    return \"unLockCharacters.\" + error;\n            }\n        }\n        if (message.isFollow != null && message.hasOwnProperty(\"isFollow\"))\n            if (typeof message.isFollow !== \"boolean\")\n                return \"isFollow: boolean expected\";\n        if (message.bag != null && message.hasOwnProperty(\"bag\")) {\n            if (!Array.isArray(message.bag))\n                return \"bag: array expected\";\n            for (var i = 0; i < message.bag.length; ++i) {\n                var error = $root.NItem.verify(message.bag[i]);\n                if (error)\n                    return \"bag.\" + error;\n            }\n        }\n        if (message.status != null && message.hasOwnProperty(\"status\"))\n            if (typeof message.status !== \"boolean\")\n                return \"status: boolean expected\";\n        if (message.fenSiCount != null && message.hasOwnProperty(\"fenSiCount\"))\n            if (!$util.isInteger(message.fenSiCount))\n                return \"fenSiCount: integer expected\";\n        if (message.userStatus != null && message.hasOwnProperty(\"userStatus\"))\n            switch (message.userStatus) {\n            default:\n                return \"userStatus: enum value expected\";\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n                break;\n            }\n        if (message.biFen != null && message.hasOwnProperty(\"biFen\"))\n            if (!$util.isString(message.biFen))\n                return \"biFen: string expected\";\n        if (message.teamType != null && message.hasOwnProperty(\"teamType\"))\n            switch (message.teamType) {\n            default:\n                return \"teamType: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.roomNum != null && message.hasOwnProperty(\"roomNum\"))\n            if (!$util.isInteger(message.roomNum))\n                return \"roomNum: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a NUser message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof NUser\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {NUser} NUser\n     */\n    NUser.fromObject = function fromObject(object) {\n        if (object instanceof $root.NUser)\n            return object;\n        var message = new $root.NUser();\n        if (object.id != null)\n            message.id = object.id | 0;\n        if (object.nickname != null)\n            message.nickname = String(object.nickname);\n        if (object.coin != null)\n            if ($util.Long)\n                (message.coin = $util.Long.fromValue(object.coin)).unsigned = false;\n            else if (typeof object.coin === \"string\")\n                message.coin = parseInt(object.coin, 10);\n            else if (typeof object.coin === \"number\")\n                message.coin = object.coin;\n            else if (typeof object.coin === \"object\")\n                message.coin = new $util.LongBits(object.coin.low >>> 0, object.coin.high >>> 0).toNumber();\n        if (object.character != null) {\n            if (typeof object.character !== \"object\")\n                throw TypeError(\".NUser.character: object expected\");\n            message.character = $root.NCharacter.fromObject(object.character);\n        }\n        if (object.unLockCharacters) {\n            if (!Array.isArray(object.unLockCharacters))\n                throw TypeError(\".NUser.unLockCharacters: array expected\");\n            message.unLockCharacters = [];\n            for (var i = 0; i < object.unLockCharacters.length; ++i) {\n                if (typeof object.unLockCharacters[i] !== \"object\")\n                    throw TypeError(\".NUser.unLockCharacters: object expected\");\n                message.unLockCharacters[i] = $root.UnLockCharacter.fromObject(object.unLockCharacters[i]);\n            }\n        }\n        if (object.isFollow != null)\n            message.isFollow = Boolean(object.isFollow);\n        if (object.bag) {\n            if (!Array.isArray(object.bag))\n                throw TypeError(\".NUser.bag: array expected\");\n            message.bag = [];\n            for (var i = 0; i < object.bag.length; ++i) {\n                if (typeof object.bag[i] !== \"object\")\n                    throw TypeError(\".NUser.bag: object expected\");\n                message.bag[i] = $root.NItem.fromObject(object.bag[i]);\n            }\n        }\n        if (object.status != null)\n            message.status = Boolean(object.status);\n        if (object.fenSiCount != null)\n            message.fenSiCount = object.fenSiCount | 0;\n        switch (object.userStatus) {\n        case \"Normal\":\n        case 0:\n            message.userStatus = 0;\n            break;\n        case \"Game\":\n        case 1:\n            message.userStatus = 1;\n            break;\n        case \"Room\":\n        case 2:\n            message.userStatus = 2;\n            break;\n        case \"Live\":\n        case 3:\n            message.userStatus = 3;\n            break;\n        case \"GameOver\":\n        case 4:\n            message.userStatus = 4;\n            break;\n        }\n        if (object.biFen != null)\n            message.biFen = String(object.biFen);\n        switch (object.teamType) {\n        case \"My\":\n        case 0:\n            message.teamType = 0;\n            break;\n        case \"Enemy\":\n        case 1:\n            message.teamType = 1;\n            break;\n        }\n        if (object.roomNum != null)\n            message.roomNum = object.roomNum | 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a NUser message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof NUser\n     * @static\n     * @param {NUser} message NUser\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    NUser.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.unLockCharacters = [];\n            object.bag = [];\n        }\n        if (options.defaults) {\n            object.id = 0;\n            object.nickname = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.coin = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.coin = options.longs === String ? \"0\" : 0;\n            object.character = null;\n            object.isFollow = false;\n            object.status = false;\n            object.fenSiCount = 0;\n            object.userStatus = options.enums === String ? \"Normal\" : 0;\n            object.biFen = \"\";\n            object.teamType = options.enums === String ? \"My\" : 0;\n            object.roomNum = 0;\n        }\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            object.id = message.id;\n        if (message.nickname != null && message.hasOwnProperty(\"nickname\"))\n            object.nickname = message.nickname;\n        if (message.coin != null && message.hasOwnProperty(\"coin\"))\n            if (typeof message.coin === \"number\")\n                object.coin = options.longs === String ? String(message.coin) : message.coin;\n            else\n                object.coin = options.longs === String ? $util.Long.prototype.toString.call(message.coin) : options.longs === Number ? new $util.LongBits(message.coin.low >>> 0, message.coin.high >>> 0).toNumber() : message.coin;\n        if (message.character != null && message.hasOwnProperty(\"character\"))\n            object.character = $root.NCharacter.toObject(message.character, options);\n        if (message.unLockCharacters && message.unLockCharacters.length) {\n            object.unLockCharacters = [];\n            for (var j = 0; j < message.unLockCharacters.length; ++j)\n                object.unLockCharacters[j] = $root.UnLockCharacter.toObject(message.unLockCharacters[j], options);\n        }\n        if (message.isFollow != null && message.hasOwnProperty(\"isFollow\"))\n            object.isFollow = message.isFollow;\n        if (message.bag && message.bag.length) {\n            object.bag = [];\n            for (var j = 0; j < message.bag.length; ++j)\n                object.bag[j] = $root.NItem.toObject(message.bag[j], options);\n        }\n        if (message.status != null && message.hasOwnProperty(\"status\"))\n            object.status = message.status;\n        if (message.fenSiCount != null && message.hasOwnProperty(\"fenSiCount\"))\n            object.fenSiCount = message.fenSiCount;\n        if (message.userStatus != null && message.hasOwnProperty(\"userStatus\"))\n            object.userStatus = options.enums === String ? $root.UserStatus[message.userStatus] : message.userStatus;\n        if (message.biFen != null && message.hasOwnProperty(\"biFen\"))\n            object.biFen = message.biFen;\n        if (message.teamType != null && message.hasOwnProperty(\"teamType\"))\n            object.teamType = options.enums === String ? $root.TeamType[message.teamType] : message.teamType;\n        if (message.roomNum != null && message.hasOwnProperty(\"roomNum\"))\n            object.roomNum = message.roomNum;\n        return object;\n    };\n\n    /**\n     * Converts this NUser to JSON.\n     * @function toJSON\n     * @memberof NUser\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    NUser.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return NUser;\n})();\n\n$root.UnLockCharacter = (function() {\n\n    /**\n     * Properties of an UnLockCharacter.\n     * @exports IUnLockCharacter\n     * @interface IUnLockCharacter\n     * @property {number|null} [tid] UnLockCharacter tid\n     * @property {number|null} [cid] UnLockCharacter cid\n     */\n\n    /**\n     * Constructs a new UnLockCharacter.\n     * @exports UnLockCharacter\n     * @classdesc Represents an UnLockCharacter.\n     * @implements IUnLockCharacter\n     * @constructor\n     * @param {IUnLockCharacter=} [properties] Properties to set\n     */\n    function UnLockCharacter(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * UnLockCharacter tid.\n     * @member {number} tid\n     * @memberof UnLockCharacter\n     * @instance\n     */\n    UnLockCharacter.prototype.tid = 0;\n\n    /**\n     * UnLockCharacter cid.\n     * @member {number} cid\n     * @memberof UnLockCharacter\n     * @instance\n     */\n    UnLockCharacter.prototype.cid = 0;\n\n    /**\n     * Creates a new UnLockCharacter instance using the specified properties.\n     * @function create\n     * @memberof UnLockCharacter\n     * @static\n     * @param {IUnLockCharacter=} [properties] Properties to set\n     * @returns {UnLockCharacter} UnLockCharacter instance\n     */\n    UnLockCharacter.create = function create(properties) {\n        return new UnLockCharacter(properties);\n    };\n\n    /**\n     * Encodes the specified UnLockCharacter message. Does not implicitly {@link UnLockCharacter.verify|verify} messages.\n     * @function encode\n     * @memberof UnLockCharacter\n     * @static\n     * @param {IUnLockCharacter} message UnLockCharacter message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UnLockCharacter.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.tid != null && message.hasOwnProperty(\"tid\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.tid);\n        if (message.cid != null && message.hasOwnProperty(\"cid\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.cid);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified UnLockCharacter message, length delimited. Does not implicitly {@link UnLockCharacter.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof UnLockCharacter\n     * @static\n     * @param {IUnLockCharacter} message UnLockCharacter message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UnLockCharacter.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an UnLockCharacter message from the specified reader or buffer.\n     * @function decode\n     * @memberof UnLockCharacter\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {UnLockCharacter} UnLockCharacter\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UnLockCharacter.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UnLockCharacter();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.tid = reader.int32();\n                break;\n            case 2:\n                message.cid = reader.int32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an UnLockCharacter message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof UnLockCharacter\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {UnLockCharacter} UnLockCharacter\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UnLockCharacter.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an UnLockCharacter message.\n     * @function verify\n     * @memberof UnLockCharacter\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    UnLockCharacter.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.tid != null && message.hasOwnProperty(\"tid\"))\n            if (!$util.isInteger(message.tid))\n                return \"tid: integer expected\";\n        if (message.cid != null && message.hasOwnProperty(\"cid\"))\n            if (!$util.isInteger(message.cid))\n                return \"cid: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates an UnLockCharacter message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UnLockCharacter\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {UnLockCharacter} UnLockCharacter\n     */\n    UnLockCharacter.fromObject = function fromObject(object) {\n        if (object instanceof $root.UnLockCharacter)\n            return object;\n        var message = new $root.UnLockCharacter();\n        if (object.tid != null)\n            message.tid = object.tid | 0;\n        if (object.cid != null)\n            message.cid = object.cid | 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an UnLockCharacter message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UnLockCharacter\n     * @static\n     * @param {UnLockCharacter} message UnLockCharacter\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UnLockCharacter.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.tid = 0;\n            object.cid = 0;\n        }\n        if (message.tid != null && message.hasOwnProperty(\"tid\"))\n            object.tid = message.tid;\n        if (message.cid != null && message.hasOwnProperty(\"cid\"))\n            object.cid = message.cid;\n        return object;\n    };\n\n    /**\n     * Converts this UnLockCharacter to JSON.\n     * @function toJSON\n     * @memberof UnLockCharacter\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UnLockCharacter.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UnLockCharacter;\n})();\n\n$root.NCharacter = (function() {\n\n    /**\n     * Properties of a NCharacter.\n     * @exports INCharacter\n     * @interface INCharacter\n     * @property {number|null} [tid] NCharacter tid\n     * @property {number|null} [cid] NCharacter cid\n     * @property {number|null} [level] NCharacter level\n     * @property {number|Long|null} [exp] NCharacter exp\n     * @property {number|null} [userId] NCharacter userId\n     * @property {number|null} [att] NCharacter att\n     * @property {number|null} [def] NCharacter def\n     * @property {number|null} [hp] NCharacter hp\n     * @property {number|null} [cri] NCharacter cri\n     * @property {number|null} [resu] NCharacter resu\n     * @property {number|null} [speed] NCharacter speed\n     * @property {number|null} [cd] NCharacter cd\n     * @property {number|null} [attSpot] NCharacter attSpot\n     * @property {number|null} [defSpot] NCharacter defSpot\n     * @property {number|null} [hpSpot] NCharacter hpSpot\n     * @property {number|null} [criSpot] NCharacter criSpot\n     * @property {number|null} [resuSpot] NCharacter resuSpot\n     * @property {number|null} [speedSpot] NCharacter speedSpot\n     * @property {number|null} [cdSpot] NCharacter cdSpot\n     * @property {number|Long|null} [levelExp] NCharacter levelExp\n     * @property {number|null} [speedValue] NCharacter speedValue\n     */\n\n    /**\n     * Constructs a new NCharacter.\n     * @exports NCharacter\n     * @classdesc Represents a NCharacter.\n     * @implements INCharacter\n     * @constructor\n     * @param {INCharacter=} [properties] Properties to set\n     */\n    function NCharacter(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * NCharacter tid.\n     * @member {number} tid\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.tid = 0;\n\n    /**\n     * NCharacter cid.\n     * @member {number} cid\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.cid = 0;\n\n    /**\n     * NCharacter level.\n     * @member {number} level\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.level = 0;\n\n    /**\n     * NCharacter exp.\n     * @member {number|Long} exp\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.exp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * NCharacter userId.\n     * @member {number} userId\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.userId = 0;\n\n    /**\n     * NCharacter att.\n     * @member {number} att\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.att = 0;\n\n    /**\n     * NCharacter def.\n     * @member {number} def\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.def = 0;\n\n    /**\n     * NCharacter hp.\n     * @member {number} hp\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.hp = 0;\n\n    /**\n     * NCharacter cri.\n     * @member {number} cri\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.cri = 0;\n\n    /**\n     * NCharacter resu.\n     * @member {number} resu\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.resu = 0;\n\n    /**\n     * NCharacter speed.\n     * @member {number} speed\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.speed = 0;\n\n    /**\n     * NCharacter cd.\n     * @member {number} cd\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.cd = 0;\n\n    /**\n     * NCharacter attSpot.\n     * @member {number} attSpot\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.attSpot = 0;\n\n    /**\n     * NCharacter defSpot.\n     * @member {number} defSpot\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.defSpot = 0;\n\n    /**\n     * NCharacter hpSpot.\n     * @member {number} hpSpot\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.hpSpot = 0;\n\n    /**\n     * NCharacter criSpot.\n     * @member {number} criSpot\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.criSpot = 0;\n\n    /**\n     * NCharacter resuSpot.\n     * @member {number} resuSpot\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.resuSpot = 0;\n\n    /**\n     * NCharacter speedSpot.\n     * @member {number} speedSpot\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.speedSpot = 0;\n\n    /**\n     * NCharacter cdSpot.\n     * @member {number} cdSpot\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.cdSpot = 0;\n\n    /**\n     * NCharacter levelExp.\n     * @member {number|Long} levelExp\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.levelExp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * NCharacter speedValue.\n     * @member {number} speedValue\n     * @memberof NCharacter\n     * @instance\n     */\n    NCharacter.prototype.speedValue = 0;\n\n    /**\n     * Creates a new NCharacter instance using the specified properties.\n     * @function create\n     * @memberof NCharacter\n     * @static\n     * @param {INCharacter=} [properties] Properties to set\n     * @returns {NCharacter} NCharacter instance\n     */\n    NCharacter.create = function create(properties) {\n        return new NCharacter(properties);\n    };\n\n    /**\n     * Encodes the specified NCharacter message. Does not implicitly {@link NCharacter.verify|verify} messages.\n     * @function encode\n     * @memberof NCharacter\n     * @static\n     * @param {INCharacter} message NCharacter message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NCharacter.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.tid != null && message.hasOwnProperty(\"tid\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.tid);\n        if (message.cid != null && message.hasOwnProperty(\"cid\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.cid);\n        if (message.level != null && message.hasOwnProperty(\"level\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.level);\n        if (message.exp != null && message.hasOwnProperty(\"exp\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).int64(message.exp);\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.userId);\n        if (message.att != null && message.hasOwnProperty(\"att\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).int32(message.att);\n        if (message.def != null && message.hasOwnProperty(\"def\"))\n            writer.uint32(/* id 7, wireType 0 =*/56).int32(message.def);\n        if (message.hp != null && message.hasOwnProperty(\"hp\"))\n            writer.uint32(/* id 8, wireType 0 =*/64).int32(message.hp);\n        if (message.cri != null && message.hasOwnProperty(\"cri\"))\n            writer.uint32(/* id 9, wireType 0 =*/72).int32(message.cri);\n        if (message.resu != null && message.hasOwnProperty(\"resu\"))\n            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.resu);\n        if (message.speed != null && message.hasOwnProperty(\"speed\"))\n            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.speed);\n        if (message.cd != null && message.hasOwnProperty(\"cd\"))\n            writer.uint32(/* id 12, wireType 0 =*/96).int32(message.cd);\n        if (message.attSpot != null && message.hasOwnProperty(\"attSpot\"))\n            writer.uint32(/* id 13, wireType 0 =*/104).int32(message.attSpot);\n        if (message.defSpot != null && message.hasOwnProperty(\"defSpot\"))\n            writer.uint32(/* id 14, wireType 0 =*/112).int32(message.defSpot);\n        if (message.hpSpot != null && message.hasOwnProperty(\"hpSpot\"))\n            writer.uint32(/* id 15, wireType 0 =*/120).int32(message.hpSpot);\n        if (message.criSpot != null && message.hasOwnProperty(\"criSpot\"))\n            writer.uint32(/* id 16, wireType 0 =*/128).int32(message.criSpot);\n        if (message.resuSpot != null && message.hasOwnProperty(\"resuSpot\"))\n            writer.uint32(/* id 17, wireType 0 =*/136).int32(message.resuSpot);\n        if (message.speedSpot != null && message.hasOwnProperty(\"speedSpot\"))\n            writer.uint32(/* id 18, wireType 0 =*/144).int32(message.speedSpot);\n        if (message.cdSpot != null && message.hasOwnProperty(\"cdSpot\"))\n            writer.uint32(/* id 19, wireType 0 =*/152).int32(message.cdSpot);\n        if (message.levelExp != null && message.hasOwnProperty(\"levelExp\"))\n            writer.uint32(/* id 20, wireType 0 =*/160).int64(message.levelExp);\n        if (message.speedValue != null && message.hasOwnProperty(\"speedValue\"))\n            writer.uint32(/* id 21, wireType 0 =*/168).int32(message.speedValue);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified NCharacter message, length delimited. Does not implicitly {@link NCharacter.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof NCharacter\n     * @static\n     * @param {INCharacter} message NCharacter message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NCharacter.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a NCharacter message from the specified reader or buffer.\n     * @function decode\n     * @memberof NCharacter\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {NCharacter} NCharacter\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NCharacter.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NCharacter();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.tid = reader.int32();\n                break;\n            case 2:\n                message.cid = reader.int32();\n                break;\n            case 3:\n                message.level = reader.int32();\n                break;\n            case 4:\n                message.exp = reader.int64();\n                break;\n            case 5:\n                message.userId = reader.int32();\n                break;\n            case 6:\n                message.att = reader.int32();\n                break;\n            case 7:\n                message.def = reader.int32();\n                break;\n            case 8:\n                message.hp = reader.int32();\n                break;\n            case 9:\n                message.cri = reader.int32();\n                break;\n            case 10:\n                message.resu = reader.int32();\n                break;\n            case 11:\n                message.speed = reader.int32();\n                break;\n            case 12:\n                message.cd = reader.int32();\n                break;\n            case 13:\n                message.attSpot = reader.int32();\n                break;\n            case 14:\n                message.defSpot = reader.int32();\n                break;\n            case 15:\n                message.hpSpot = reader.int32();\n                break;\n            case 16:\n                message.criSpot = reader.int32();\n                break;\n            case 17:\n                message.resuSpot = reader.int32();\n                break;\n            case 18:\n                message.speedSpot = reader.int32();\n                break;\n            case 19:\n                message.cdSpot = reader.int32();\n                break;\n            case 20:\n                message.levelExp = reader.int64();\n                break;\n            case 21:\n                message.speedValue = reader.int32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a NCharacter message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof NCharacter\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {NCharacter} NCharacter\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NCharacter.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a NCharacter message.\n     * @function verify\n     * @memberof NCharacter\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    NCharacter.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.tid != null && message.hasOwnProperty(\"tid\"))\n            if (!$util.isInteger(message.tid))\n                return \"tid: integer expected\";\n        if (message.cid != null && message.hasOwnProperty(\"cid\"))\n            if (!$util.isInteger(message.cid))\n                return \"cid: integer expected\";\n        if (message.level != null && message.hasOwnProperty(\"level\"))\n            if (!$util.isInteger(message.level))\n                return \"level: integer expected\";\n        if (message.exp != null && message.hasOwnProperty(\"exp\"))\n            if (!$util.isInteger(message.exp) && !(message.exp && $util.isInteger(message.exp.low) && $util.isInteger(message.exp.high)))\n                return \"exp: integer|Long expected\";\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            if (!$util.isInteger(message.userId))\n                return \"userId: integer expected\";\n        if (message.att != null && message.hasOwnProperty(\"att\"))\n            if (!$util.isInteger(message.att))\n                return \"att: integer expected\";\n        if (message.def != null && message.hasOwnProperty(\"def\"))\n            if (!$util.isInteger(message.def))\n                return \"def: integer expected\";\n        if (message.hp != null && message.hasOwnProperty(\"hp\"))\n            if (!$util.isInteger(message.hp))\n                return \"hp: integer expected\";\n        if (message.cri != null && message.hasOwnProperty(\"cri\"))\n            if (!$util.isInteger(message.cri))\n                return \"cri: integer expected\";\n        if (message.resu != null && message.hasOwnProperty(\"resu\"))\n            if (!$util.isInteger(message.resu))\n                return \"resu: integer expected\";\n        if (message.speed != null && message.hasOwnProperty(\"speed\"))\n            if (!$util.isInteger(message.speed))\n                return \"speed: integer expected\";\n        if (message.cd != null && message.hasOwnProperty(\"cd\"))\n            if (!$util.isInteger(message.cd))\n                return \"cd: integer expected\";\n        if (message.attSpot != null && message.hasOwnProperty(\"attSpot\"))\n            if (!$util.isInteger(message.attSpot))\n                return \"attSpot: integer expected\";\n        if (message.defSpot != null && message.hasOwnProperty(\"defSpot\"))\n            if (!$util.isInteger(message.defSpot))\n                return \"defSpot: integer expected\";\n        if (message.hpSpot != null && message.hasOwnProperty(\"hpSpot\"))\n            if (!$util.isInteger(message.hpSpot))\n                return \"hpSpot: integer expected\";\n        if (message.criSpot != null && message.hasOwnProperty(\"criSpot\"))\n            if (!$util.isInteger(message.criSpot))\n                return \"criSpot: integer expected\";\n        if (message.resuSpot != null && message.hasOwnProperty(\"resuSpot\"))\n            if (!$util.isInteger(message.resuSpot))\n                return \"resuSpot: integer expected\";\n        if (message.speedSpot != null && message.hasOwnProperty(\"speedSpot\"))\n            if (!$util.isInteger(message.speedSpot))\n                return \"speedSpot: integer expected\";\n        if (message.cdSpot != null && message.hasOwnProperty(\"cdSpot\"))\n            if (!$util.isInteger(message.cdSpot))\n                return \"cdSpot: integer expected\";\n        if (message.levelExp != null && message.hasOwnProperty(\"levelExp\"))\n            if (!$util.isInteger(message.levelExp) && !(message.levelExp && $util.isInteger(message.levelExp.low) && $util.isInteger(message.levelExp.high)))\n                return \"levelExp: integer|Long expected\";\n        if (message.speedValue != null && message.hasOwnProperty(\"speedValue\"))\n            if (!$util.isInteger(message.speedValue))\n                return \"speedValue: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a NCharacter message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof NCharacter\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {NCharacter} NCharacter\n     */\n    NCharacter.fromObject = function fromObject(object) {\n        if (object instanceof $root.NCharacter)\n            return object;\n        var message = new $root.NCharacter();\n        if (object.tid != null)\n            message.tid = object.tid | 0;\n        if (object.cid != null)\n            message.cid = object.cid | 0;\n        if (object.level != null)\n            message.level = object.level | 0;\n        if (object.exp != null)\n            if ($util.Long)\n                (message.exp = $util.Long.fromValue(object.exp)).unsigned = false;\n            else if (typeof object.exp === \"string\")\n                message.exp = parseInt(object.exp, 10);\n            else if (typeof object.exp === \"number\")\n                message.exp = object.exp;\n            else if (typeof object.exp === \"object\")\n                message.exp = new $util.LongBits(object.exp.low >>> 0, object.exp.high >>> 0).toNumber();\n        if (object.userId != null)\n            message.userId = object.userId | 0;\n        if (object.att != null)\n            message.att = object.att | 0;\n        if (object.def != null)\n            message.def = object.def | 0;\n        if (object.hp != null)\n            message.hp = object.hp | 0;\n        if (object.cri != null)\n            message.cri = object.cri | 0;\n        if (object.resu != null)\n            message.resu = object.resu | 0;\n        if (object.speed != null)\n            message.speed = object.speed | 0;\n        if (object.cd != null)\n            message.cd = object.cd | 0;\n        if (object.attSpot != null)\n            message.attSpot = object.attSpot | 0;\n        if (object.defSpot != null)\n            message.defSpot = object.defSpot | 0;\n        if (object.hpSpot != null)\n            message.hpSpot = object.hpSpot | 0;\n        if (object.criSpot != null)\n            message.criSpot = object.criSpot | 0;\n        if (object.resuSpot != null)\n            message.resuSpot = object.resuSpot | 0;\n        if (object.speedSpot != null)\n            message.speedSpot = object.speedSpot | 0;\n        if (object.cdSpot != null)\n            message.cdSpot = object.cdSpot | 0;\n        if (object.levelExp != null)\n            if ($util.Long)\n                (message.levelExp = $util.Long.fromValue(object.levelExp)).unsigned = false;\n            else if (typeof object.levelExp === \"string\")\n                message.levelExp = parseInt(object.levelExp, 10);\n            else if (typeof object.levelExp === \"number\")\n                message.levelExp = object.levelExp;\n            else if (typeof object.levelExp === \"object\")\n                message.levelExp = new $util.LongBits(object.levelExp.low >>> 0, object.levelExp.high >>> 0).toNumber();\n        if (object.speedValue != null)\n            message.speedValue = object.speedValue | 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a NCharacter message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof NCharacter\n     * @static\n     * @param {NCharacter} message NCharacter\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    NCharacter.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.tid = 0;\n            object.cid = 0;\n            object.level = 0;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.exp = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.exp = options.longs === String ? \"0\" : 0;\n            object.userId = 0;\n            object.att = 0;\n            object.def = 0;\n            object.hp = 0;\n            object.cri = 0;\n            object.resu = 0;\n            object.speed = 0;\n            object.cd = 0;\n            object.attSpot = 0;\n            object.defSpot = 0;\n            object.hpSpot = 0;\n            object.criSpot = 0;\n            object.resuSpot = 0;\n            object.speedSpot = 0;\n            object.cdSpot = 0;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.levelExp = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.levelExp = options.longs === String ? \"0\" : 0;\n            object.speedValue = 0;\n        }\n        if (message.tid != null && message.hasOwnProperty(\"tid\"))\n            object.tid = message.tid;\n        if (message.cid != null && message.hasOwnProperty(\"cid\"))\n            object.cid = message.cid;\n        if (message.level != null && message.hasOwnProperty(\"level\"))\n            object.level = message.level;\n        if (message.exp != null && message.hasOwnProperty(\"exp\"))\n            if (typeof message.exp === \"number\")\n                object.exp = options.longs === String ? String(message.exp) : message.exp;\n            else\n                object.exp = options.longs === String ? $util.Long.prototype.toString.call(message.exp) : options.longs === Number ? new $util.LongBits(message.exp.low >>> 0, message.exp.high >>> 0).toNumber() : message.exp;\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            object.userId = message.userId;\n        if (message.att != null && message.hasOwnProperty(\"att\"))\n            object.att = message.att;\n        if (message.def != null && message.hasOwnProperty(\"def\"))\n            object.def = message.def;\n        if (message.hp != null && message.hasOwnProperty(\"hp\"))\n            object.hp = message.hp;\n        if (message.cri != null && message.hasOwnProperty(\"cri\"))\n            object.cri = message.cri;\n        if (message.resu != null && message.hasOwnProperty(\"resu\"))\n            object.resu = message.resu;\n        if (message.speed != null && message.hasOwnProperty(\"speed\"))\n            object.speed = message.speed;\n        if (message.cd != null && message.hasOwnProperty(\"cd\"))\n            object.cd = message.cd;\n        if (message.attSpot != null && message.hasOwnProperty(\"attSpot\"))\n            object.attSpot = message.attSpot;\n        if (message.defSpot != null && message.hasOwnProperty(\"defSpot\"))\n            object.defSpot = message.defSpot;\n        if (message.hpSpot != null && message.hasOwnProperty(\"hpSpot\"))\n            object.hpSpot = message.hpSpot;\n        if (message.criSpot != null && message.hasOwnProperty(\"criSpot\"))\n            object.criSpot = message.criSpot;\n        if (message.resuSpot != null && message.hasOwnProperty(\"resuSpot\"))\n            object.resuSpot = message.resuSpot;\n        if (message.speedSpot != null && message.hasOwnProperty(\"speedSpot\"))\n            object.speedSpot = message.speedSpot;\n        if (message.cdSpot != null && message.hasOwnProperty(\"cdSpot\"))\n            object.cdSpot = message.cdSpot;\n        if (message.levelExp != null && message.hasOwnProperty(\"levelExp\"))\n            if (typeof message.levelExp === \"number\")\n                object.levelExp = options.longs === String ? String(message.levelExp) : message.levelExp;\n            else\n                object.levelExp = options.longs === String ? $util.Long.prototype.toString.call(message.levelExp) : options.longs === Number ? new $util.LongBits(message.levelExp.low >>> 0, message.levelExp.high >>> 0).toNumber() : message.levelExp;\n        if (message.speedValue != null && message.hasOwnProperty(\"speedValue\"))\n            object.speedValue = message.speedValue;\n        return object;\n    };\n\n    /**\n     * Converts this NCharacter to JSON.\n     * @function toJSON\n     * @memberof NCharacter\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    NCharacter.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return NCharacter;\n})();\n\n$root.NItem = (function() {\n\n    /**\n     * Properties of a NItem.\n     * @exports INItem\n     * @interface INItem\n     * @property {number|null} [itemId] NItem itemId\n     * @property {number|null} [count] NItem count\n     * @property {boolean|null} [isTran] NItem isTran\n     * @property {number|Long|null} [money] NItem money\n     */\n\n    /**\n     * Constructs a new NItem.\n     * @exports NItem\n     * @classdesc Represents a NItem.\n     * @implements INItem\n     * @constructor\n     * @param {INItem=} [properties] Properties to set\n     */\n    function NItem(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * NItem itemId.\n     * @member {number} itemId\n     * @memberof NItem\n     * @instance\n     */\n    NItem.prototype.itemId = 0;\n\n    /**\n     * NItem count.\n     * @member {number} count\n     * @memberof NItem\n     * @instance\n     */\n    NItem.prototype.count = 0;\n\n    /**\n     * NItem isTran.\n     * @member {boolean} isTran\n     * @memberof NItem\n     * @instance\n     */\n    NItem.prototype.isTran = false;\n\n    /**\n     * NItem money.\n     * @member {number|Long} money\n     * @memberof NItem\n     * @instance\n     */\n    NItem.prototype.money = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * Creates a new NItem instance using the specified properties.\n     * @function create\n     * @memberof NItem\n     * @static\n     * @param {INItem=} [properties] Properties to set\n     * @returns {NItem} NItem instance\n     */\n    NItem.create = function create(properties) {\n        return new NItem(properties);\n    };\n\n    /**\n     * Encodes the specified NItem message. Does not implicitly {@link NItem.verify|verify} messages.\n     * @function encode\n     * @memberof NItem\n     * @static\n     * @param {INItem} message NItem message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NItem.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.itemId != null && message.hasOwnProperty(\"itemId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.itemId);\n        if (message.count != null && message.hasOwnProperty(\"count\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.count);\n        if (message.isTran != null && message.hasOwnProperty(\"isTran\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.isTran);\n        if (message.money != null && message.hasOwnProperty(\"money\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).int64(message.money);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified NItem message, length delimited. Does not implicitly {@link NItem.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof NItem\n     * @static\n     * @param {INItem} message NItem message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NItem.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a NItem message from the specified reader or buffer.\n     * @function decode\n     * @memberof NItem\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {NItem} NItem\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NItem.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NItem();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.itemId = reader.int32();\n                break;\n            case 2:\n                message.count = reader.int32();\n                break;\n            case 3:\n                message.isTran = reader.bool();\n                break;\n            case 4:\n                message.money = reader.int64();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a NItem message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof NItem\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {NItem} NItem\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NItem.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a NItem message.\n     * @function verify\n     * @memberof NItem\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    NItem.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.itemId != null && message.hasOwnProperty(\"itemId\"))\n            if (!$util.isInteger(message.itemId))\n                return \"itemId: integer expected\";\n        if (message.count != null && message.hasOwnProperty(\"count\"))\n            if (!$util.isInteger(message.count))\n                return \"count: integer expected\";\n        if (message.isTran != null && message.hasOwnProperty(\"isTran\"))\n            if (typeof message.isTran !== \"boolean\")\n                return \"isTran: boolean expected\";\n        if (message.money != null && message.hasOwnProperty(\"money\"))\n            if (!$util.isInteger(message.money) && !(message.money && $util.isInteger(message.money.low) && $util.isInteger(message.money.high)))\n                return \"money: integer|Long expected\";\n        return null;\n    };\n\n    /**\n     * Creates a NItem message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof NItem\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {NItem} NItem\n     */\n    NItem.fromObject = function fromObject(object) {\n        if (object instanceof $root.NItem)\n            return object;\n        var message = new $root.NItem();\n        if (object.itemId != null)\n            message.itemId = object.itemId | 0;\n        if (object.count != null)\n            message.count = object.count | 0;\n        if (object.isTran != null)\n            message.isTran = Boolean(object.isTran);\n        if (object.money != null)\n            if ($util.Long)\n                (message.money = $util.Long.fromValue(object.money)).unsigned = false;\n            else if (typeof object.money === \"string\")\n                message.money = parseInt(object.money, 10);\n            else if (typeof object.money === \"number\")\n                message.money = object.money;\n            else if (typeof object.money === \"object\")\n                message.money = new $util.LongBits(object.money.low >>> 0, object.money.high >>> 0).toNumber();\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a NItem message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof NItem\n     * @static\n     * @param {NItem} message NItem\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    NItem.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.itemId = 0;\n            object.count = 0;\n            object.isTran = false;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.money = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.money = options.longs === String ? \"0\" : 0;\n        }\n        if (message.itemId != null && message.hasOwnProperty(\"itemId\"))\n            object.itemId = message.itemId;\n        if (message.count != null && message.hasOwnProperty(\"count\"))\n            object.count = message.count;\n        if (message.isTran != null && message.hasOwnProperty(\"isTran\"))\n            object.isTran = message.isTran;\n        if (message.money != null && message.hasOwnProperty(\"money\"))\n            if (typeof message.money === \"number\")\n                object.money = options.longs === String ? String(message.money) : message.money;\n            else\n                object.money = options.longs === String ? $util.Long.prototype.toString.call(message.money) : options.longs === Number ? new $util.LongBits(message.money.low >>> 0, message.money.high >>> 0).toNumber() : message.money;\n        return object;\n    };\n\n    /**\n     * Converts this NItem to JSON.\n     * @function toJSON\n     * @memberof NItem\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    NItem.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return NItem;\n})();\n\n/**\n * StatusAction enum.\n * @exports StatusAction\n * @enum {string}\n * @property {number} UPDATE=0 UPDATE value\n * @property {number} ADD=1 ADD value\n * @property {number} DELETE=2 DELETE value\n */\n$root.StatusAction = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = \"UPDATE\"] = 0;\n    values[valuesById[1] = \"ADD\"] = 1;\n    values[valuesById[2] = \"DELETE\"] = 2;\n    return values;\n})();\n\n/**\n * StatusType enum.\n * @exports StatusType\n * @enum {string}\n * @property {number} MONEY=0 MONEY value\n * @property {number} EXP=1 EXP value\n * @property {number} SKILL_POINT=2 SKILL_POINT value\n * @property {number} ITEM=3 ITEM value\n */\n$root.StatusType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = \"MONEY\"] = 0;\n    values[valuesById[1] = \"EXP\"] = 1;\n    values[valuesById[2] = \"SKILL_POINT\"] = 2;\n    values[valuesById[3] = \"ITEM\"] = 3;\n    return values;\n})();\n\n$root.NStatus = (function() {\n\n    /**\n     * Properties of a NStatus.\n     * @exports INStatus\n     * @interface INStatus\n     * @property {StatusType|null} [type] NStatus type\n     * @property {StatusAction|null} [action] NStatus action\n     * @property {number|null} [id] NStatus id\n     * @property {number|Long|null} [value] NStatus value\n     */\n\n    /**\n     * Constructs a new NStatus.\n     * @exports NStatus\n     * @classdesc Represents a NStatus.\n     * @implements INStatus\n     * @constructor\n     * @param {INStatus=} [properties] Properties to set\n     */\n    function NStatus(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * NStatus type.\n     * @member {StatusType} type\n     * @memberof NStatus\n     * @instance\n     */\n    NStatus.prototype.type = 0;\n\n    /**\n     * NStatus action.\n     * @member {StatusAction} action\n     * @memberof NStatus\n     * @instance\n     */\n    NStatus.prototype.action = 0;\n\n    /**\n     * NStatus id.\n     * @member {number} id\n     * @memberof NStatus\n     * @instance\n     */\n    NStatus.prototype.id = 0;\n\n    /**\n     * NStatus value.\n     * @member {number|Long} value\n     * @memberof NStatus\n     * @instance\n     */\n    NStatus.prototype.value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * Creates a new NStatus instance using the specified properties.\n     * @function create\n     * @memberof NStatus\n     * @static\n     * @param {INStatus=} [properties] Properties to set\n     * @returns {NStatus} NStatus instance\n     */\n    NStatus.create = function create(properties) {\n        return new NStatus(properties);\n    };\n\n    /**\n     * Encodes the specified NStatus message. Does not implicitly {@link NStatus.verify|verify} messages.\n     * @function encode\n     * @memberof NStatus\n     * @static\n     * @param {INStatus} message NStatus message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NStatus.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);\n        if (message.action != null && message.hasOwnProperty(\"action\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.action);\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.id);\n        if (message.value != null && message.hasOwnProperty(\"value\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).int64(message.value);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified NStatus message, length delimited. Does not implicitly {@link NStatus.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof NStatus\n     * @static\n     * @param {INStatus} message NStatus message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NStatus.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a NStatus message from the specified reader or buffer.\n     * @function decode\n     * @memberof NStatus\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {NStatus} NStatus\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NStatus.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NStatus();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.type = reader.int32();\n                break;\n            case 2:\n                message.action = reader.int32();\n                break;\n            case 3:\n                message.id = reader.int32();\n                break;\n            case 4:\n                message.value = reader.int64();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a NStatus message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof NStatus\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {NStatus} NStatus\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NStatus.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a NStatus message.\n     * @function verify\n     * @memberof NStatus\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    NStatus.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            switch (message.type) {\n            default:\n                return \"type: enum value expected\";\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n                break;\n            }\n        if (message.action != null && message.hasOwnProperty(\"action\"))\n            switch (message.action) {\n            default:\n                return \"action: enum value expected\";\n            case 0:\n            case 1:\n            case 2:\n                break;\n            }\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (!$util.isInteger(message.id))\n                return \"id: integer expected\";\n        if (message.value != null && message.hasOwnProperty(\"value\"))\n            if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))\n                return \"value: integer|Long expected\";\n        return null;\n    };\n\n    /**\n     * Creates a NStatus message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof NStatus\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {NStatus} NStatus\n     */\n    NStatus.fromObject = function fromObject(object) {\n        if (object instanceof $root.NStatus)\n            return object;\n        var message = new $root.NStatus();\n        switch (object.type) {\n        case \"MONEY\":\n        case 0:\n            message.type = 0;\n            break;\n        case \"EXP\":\n        case 1:\n            message.type = 1;\n            break;\n        case \"SKILL_POINT\":\n        case 2:\n            message.type = 2;\n            break;\n        case \"ITEM\":\n        case 3:\n            message.type = 3;\n            break;\n        }\n        switch (object.action) {\n        case \"UPDATE\":\n        case 0:\n            message.action = 0;\n            break;\n        case \"ADD\":\n        case 1:\n            message.action = 1;\n            break;\n        case \"DELETE\":\n        case 2:\n            message.action = 2;\n            break;\n        }\n        if (object.id != null)\n            message.id = object.id | 0;\n        if (object.value != null)\n            if ($util.Long)\n                (message.value = $util.Long.fromValue(object.value)).unsigned = false;\n            else if (typeof object.value === \"string\")\n                message.value = parseInt(object.value, 10);\n            else if (typeof object.value === \"number\")\n                message.value = object.value;\n            else if (typeof object.value === \"object\")\n                message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber();\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a NStatus message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof NStatus\n     * @static\n     * @param {NStatus} message NStatus\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    NStatus.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.type = options.enums === String ? \"MONEY\" : 0;\n            object.action = options.enums === String ? \"UPDATE\" : 0;\n            object.id = 0;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.value = options.longs === String ? \"0\" : 0;\n        }\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = options.enums === String ? $root.StatusType[message.type] : message.type;\n        if (message.action != null && message.hasOwnProperty(\"action\"))\n            object.action = options.enums === String ? $root.StatusAction[message.action] : message.action;\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            object.id = message.id;\n        if (message.value != null && message.hasOwnProperty(\"value\"))\n            if (typeof message.value === \"number\")\n                object.value = options.longs === String ? String(message.value) : message.value;\n            else\n                object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber() : message.value;\n        return object;\n    };\n\n    /**\n     * Converts this NStatus to JSON.\n     * @function toJSON\n     * @memberof NStatus\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    NStatus.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return NStatus;\n})();\n\n$root.StatusNotify = (function() {\n\n    /**\n     * Properties of a StatusNotify.\n     * @exports IStatusNotify\n     * @interface IStatusNotify\n     * @property {Array.<INStatus>|null} [status] StatusNotify status\n     */\n\n    /**\n     * Constructs a new StatusNotify.\n     * @exports StatusNotify\n     * @classdesc Represents a StatusNotify.\n     * @implements IStatusNotify\n     * @constructor\n     * @param {IStatusNotify=} [properties] Properties to set\n     */\n    function StatusNotify(properties) {\n        this.status = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * StatusNotify status.\n     * @member {Array.<INStatus>} status\n     * @memberof StatusNotify\n     * @instance\n     */\n    StatusNotify.prototype.status = $util.emptyArray;\n\n    /**\n     * Creates a new StatusNotify instance using the specified properties.\n     * @function create\n     * @memberof StatusNotify\n     * @static\n     * @param {IStatusNotify=} [properties] Properties to set\n     * @returns {StatusNotify} StatusNotify instance\n     */\n    StatusNotify.create = function create(properties) {\n        return new StatusNotify(properties);\n    };\n\n    /**\n     * Encodes the specified StatusNotify message. Does not implicitly {@link StatusNotify.verify|verify} messages.\n     * @function encode\n     * @memberof StatusNotify\n     * @static\n     * @param {IStatusNotify} message StatusNotify message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    StatusNotify.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.status != null && message.status.length)\n            for (var i = 0; i < message.status.length; ++i)\n                $root.NStatus.encode(message.status[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified StatusNotify message, length delimited. Does not implicitly {@link StatusNotify.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof StatusNotify\n     * @static\n     * @param {IStatusNotify} message StatusNotify message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    StatusNotify.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a StatusNotify message from the specified reader or buffer.\n     * @function decode\n     * @memberof StatusNotify\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {StatusNotify} StatusNotify\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    StatusNotify.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StatusNotify();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.status && message.status.length))\n                    message.status = [];\n                message.status.push($root.NStatus.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a StatusNotify message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof StatusNotify\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {StatusNotify} StatusNotify\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    StatusNotify.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a StatusNotify message.\n     * @function verify\n     * @memberof StatusNotify\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    StatusNotify.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.status != null && message.hasOwnProperty(\"status\")) {\n            if (!Array.isArray(message.status))\n                return \"status: array expected\";\n            for (var i = 0; i < message.status.length; ++i) {\n                var error = $root.NStatus.verify(message.status[i]);\n                if (error)\n                    return \"status.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a StatusNotify message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof StatusNotify\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {StatusNotify} StatusNotify\n     */\n    StatusNotify.fromObject = function fromObject(object) {\n        if (object instanceof $root.StatusNotify)\n            return object;\n        var message = new $root.StatusNotify();\n        if (object.status) {\n            if (!Array.isArray(object.status))\n                throw TypeError(\".StatusNotify.status: array expected\");\n            message.status = [];\n            for (var i = 0; i < object.status.length; ++i) {\n                if (typeof object.status[i] !== \"object\")\n                    throw TypeError(\".StatusNotify.status: object expected\");\n                message.status[i] = $root.NStatus.fromObject(object.status[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a StatusNotify message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof StatusNotify\n     * @static\n     * @param {StatusNotify} message StatusNotify\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    StatusNotify.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.status = [];\n        if (message.status && message.status.length) {\n            object.status = [];\n            for (var j = 0; j < message.status.length; ++j)\n                object.status[j] = $root.NStatus.toObject(message.status[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this StatusNotify to JSON.\n     * @function toJSON\n     * @memberof StatusNotify\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    StatusNotify.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return StatusNotify;\n})();\n\n$root.NUserStatusChange = (function() {\n\n    /**\n     * Properties of a NUserStatusChange.\n     * @exports INUserStatusChange\n     * @interface INUserStatusChange\n     * @property {number|null} [userId] NUserStatusChange userId\n     * @property {boolean|null} [status] NUserStatusChange status\n     */\n\n    /**\n     * Constructs a new NUserStatusChange.\n     * @exports NUserStatusChange\n     * @classdesc Represents a NUserStatusChange.\n     * @implements INUserStatusChange\n     * @constructor\n     * @param {INUserStatusChange=} [properties] Properties to set\n     */\n    function NUserStatusChange(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * NUserStatusChange userId.\n     * @member {number} userId\n     * @memberof NUserStatusChange\n     * @instance\n     */\n    NUserStatusChange.prototype.userId = 0;\n\n    /**\n     * NUserStatusChange status.\n     * @member {boolean} status\n     * @memberof NUserStatusChange\n     * @instance\n     */\n    NUserStatusChange.prototype.status = false;\n\n    /**\n     * Creates a new NUserStatusChange instance using the specified properties.\n     * @function create\n     * @memberof NUserStatusChange\n     * @static\n     * @param {INUserStatusChange=} [properties] Properties to set\n     * @returns {NUserStatusChange} NUserStatusChange instance\n     */\n    NUserStatusChange.create = function create(properties) {\n        return new NUserStatusChange(properties);\n    };\n\n    /**\n     * Encodes the specified NUserStatusChange message. Does not implicitly {@link NUserStatusChange.verify|verify} messages.\n     * @function encode\n     * @memberof NUserStatusChange\n     * @static\n     * @param {INUserStatusChange} message NUserStatusChange message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NUserStatusChange.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.userId);\n        if (message.status != null && message.hasOwnProperty(\"status\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.status);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified NUserStatusChange message, length delimited. Does not implicitly {@link NUserStatusChange.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof NUserStatusChange\n     * @static\n     * @param {INUserStatusChange} message NUserStatusChange message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NUserStatusChange.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a NUserStatusChange message from the specified reader or buffer.\n     * @function decode\n     * @memberof NUserStatusChange\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {NUserStatusChange} NUserStatusChange\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NUserStatusChange.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NUserStatusChange();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.userId = reader.int32();\n                break;\n            case 2:\n                message.status = reader.bool();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a NUserStatusChange message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof NUserStatusChange\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {NUserStatusChange} NUserStatusChange\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NUserStatusChange.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a NUserStatusChange message.\n     * @function verify\n     * @memberof NUserStatusChange\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    NUserStatusChange.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            if (!$util.isInteger(message.userId))\n                return \"userId: integer expected\";\n        if (message.status != null && message.hasOwnProperty(\"status\"))\n            if (typeof message.status !== \"boolean\")\n                return \"status: boolean expected\";\n        return null;\n    };\n\n    /**\n     * Creates a NUserStatusChange message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof NUserStatusChange\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {NUserStatusChange} NUserStatusChange\n     */\n    NUserStatusChange.fromObject = function fromObject(object) {\n        if (object instanceof $root.NUserStatusChange)\n            return object;\n        var message = new $root.NUserStatusChange();\n        if (object.userId != null)\n            message.userId = object.userId | 0;\n        if (object.status != null)\n            message.status = Boolean(object.status);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a NUserStatusChange message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof NUserStatusChange\n     * @static\n     * @param {NUserStatusChange} message NUserStatusChange\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    NUserStatusChange.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.userId = 0;\n            object.status = false;\n        }\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            object.userId = message.userId;\n        if (message.status != null && message.hasOwnProperty(\"status\"))\n            object.status = message.status;\n        return object;\n    };\n\n    /**\n     * Converts this NUserStatusChange to JSON.\n     * @function toJSON\n     * @memberof NUserStatusChange\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    NUserStatusChange.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return NUserStatusChange;\n})();\n\n$root.NAuctionItem = (function() {\n\n    /**\n     * Properties of a NAuctionItem.\n     * @exports INAuctionItem\n     * @interface INAuctionItem\n     * @property {number|null} [id] NAuctionItem id\n     * @property {number|null} [userId] NAuctionItem userId\n     * @property {number|null} [itemId] NAuctionItem itemId\n     * @property {number|null} [count] NAuctionItem count\n     * @property {number|Long|null} [biddingPrice] NAuctionItem biddingPrice\n     * @property {number|Long|null} [currentPrice] NAuctionItem currentPrice\n     * @property {number|null} [bidderUserId] NAuctionItem bidderUserId\n     * @property {string|null} [bidderNickName] NAuctionItem bidderNickName\n     * @property {number|Long|null} [remainingTime] NAuctionItem remainingTime\n     */\n\n    /**\n     * Constructs a new NAuctionItem.\n     * @exports NAuctionItem\n     * @classdesc Represents a NAuctionItem.\n     * @implements INAuctionItem\n     * @constructor\n     * @param {INAuctionItem=} [properties] Properties to set\n     */\n    function NAuctionItem(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * NAuctionItem id.\n     * @member {number} id\n     * @memberof NAuctionItem\n     * @instance\n     */\n    NAuctionItem.prototype.id = 0;\n\n    /**\n     * NAuctionItem userId.\n     * @member {number} userId\n     * @memberof NAuctionItem\n     * @instance\n     */\n    NAuctionItem.prototype.userId = 0;\n\n    /**\n     * NAuctionItem itemId.\n     * @member {number} itemId\n     * @memberof NAuctionItem\n     * @instance\n     */\n    NAuctionItem.prototype.itemId = 0;\n\n    /**\n     * NAuctionItem count.\n     * @member {number} count\n     * @memberof NAuctionItem\n     * @instance\n     */\n    NAuctionItem.prototype.count = 0;\n\n    /**\n     * NAuctionItem biddingPrice.\n     * @member {number|Long} biddingPrice\n     * @memberof NAuctionItem\n     * @instance\n     */\n    NAuctionItem.prototype.biddingPrice = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * NAuctionItem currentPrice.\n     * @member {number|Long} currentPrice\n     * @memberof NAuctionItem\n     * @instance\n     */\n    NAuctionItem.prototype.currentPrice = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * NAuctionItem bidderUserId.\n     * @member {number} bidderUserId\n     * @memberof NAuctionItem\n     * @instance\n     */\n    NAuctionItem.prototype.bidderUserId = 0;\n\n    /**\n     * NAuctionItem bidderNickName.\n     * @member {string} bidderNickName\n     * @memberof NAuctionItem\n     * @instance\n     */\n    NAuctionItem.prototype.bidderNickName = \"\";\n\n    /**\n     * NAuctionItem remainingTime.\n     * @member {number|Long} remainingTime\n     * @memberof NAuctionItem\n     * @instance\n     */\n    NAuctionItem.prototype.remainingTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * Creates a new NAuctionItem instance using the specified properties.\n     * @function create\n     * @memberof NAuctionItem\n     * @static\n     * @param {INAuctionItem=} [properties] Properties to set\n     * @returns {NAuctionItem} NAuctionItem instance\n     */\n    NAuctionItem.create = function create(properties) {\n        return new NAuctionItem(properties);\n    };\n\n    /**\n     * Encodes the specified NAuctionItem message. Does not implicitly {@link NAuctionItem.verify|verify} messages.\n     * @function encode\n     * @memberof NAuctionItem\n     * @static\n     * @param {INAuctionItem} message NAuctionItem message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NAuctionItem.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.userId);\n        if (message.itemId != null && message.hasOwnProperty(\"itemId\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.itemId);\n        if (message.count != null && message.hasOwnProperty(\"count\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.count);\n        if (message.biddingPrice != null && message.hasOwnProperty(\"biddingPrice\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).int64(message.biddingPrice);\n        if (message.currentPrice != null && message.hasOwnProperty(\"currentPrice\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).int64(message.currentPrice);\n        if (message.bidderUserId != null && message.hasOwnProperty(\"bidderUserId\"))\n            writer.uint32(/* id 7, wireType 0 =*/56).int32(message.bidderUserId);\n        if (message.bidderNickName != null && message.hasOwnProperty(\"bidderNickName\"))\n            writer.uint32(/* id 8, wireType 2 =*/66).string(message.bidderNickName);\n        if (message.remainingTime != null && message.hasOwnProperty(\"remainingTime\"))\n            writer.uint32(/* id 9, wireType 0 =*/72).int64(message.remainingTime);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified NAuctionItem message, length delimited. Does not implicitly {@link NAuctionItem.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof NAuctionItem\n     * @static\n     * @param {INAuctionItem} message NAuctionItem message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NAuctionItem.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a NAuctionItem message from the specified reader or buffer.\n     * @function decode\n     * @memberof NAuctionItem\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {NAuctionItem} NAuctionItem\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NAuctionItem.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NAuctionItem();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.id = reader.int32();\n                break;\n            case 2:\n                message.userId = reader.int32();\n                break;\n            case 3:\n                message.itemId = reader.int32();\n                break;\n            case 4:\n                message.count = reader.int32();\n                break;\n            case 5:\n                message.biddingPrice = reader.int64();\n                break;\n            case 6:\n                message.currentPrice = reader.int64();\n                break;\n            case 7:\n                message.bidderUserId = reader.int32();\n                break;\n            case 8:\n                message.bidderNickName = reader.string();\n                break;\n            case 9:\n                message.remainingTime = reader.int64();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a NAuctionItem message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof NAuctionItem\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {NAuctionItem} NAuctionItem\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NAuctionItem.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a NAuctionItem message.\n     * @function verify\n     * @memberof NAuctionItem\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    NAuctionItem.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (!$util.isInteger(message.id))\n                return \"id: integer expected\";\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            if (!$util.isInteger(message.userId))\n                return \"userId: integer expected\";\n        if (message.itemId != null && message.hasOwnProperty(\"itemId\"))\n            if (!$util.isInteger(message.itemId))\n                return \"itemId: integer expected\";\n        if (message.count != null && message.hasOwnProperty(\"count\"))\n            if (!$util.isInteger(message.count))\n                return \"count: integer expected\";\n        if (message.biddingPrice != null && message.hasOwnProperty(\"biddingPrice\"))\n            if (!$util.isInteger(message.biddingPrice) && !(message.biddingPrice && $util.isInteger(message.biddingPrice.low) && $util.isInteger(message.biddingPrice.high)))\n                return \"biddingPrice: integer|Long expected\";\n        if (message.currentPrice != null && message.hasOwnProperty(\"currentPrice\"))\n            if (!$util.isInteger(message.currentPrice) && !(message.currentPrice && $util.isInteger(message.currentPrice.low) && $util.isInteger(message.currentPrice.high)))\n                return \"currentPrice: integer|Long expected\";\n        if (message.bidderUserId != null && message.hasOwnProperty(\"bidderUserId\"))\n            if (!$util.isInteger(message.bidderUserId))\n                return \"bidderUserId: integer expected\";\n        if (message.bidderNickName != null && message.hasOwnProperty(\"bidderNickName\"))\n            if (!$util.isString(message.bidderNickName))\n                return \"bidderNickName: string expected\";\n        if (message.remainingTime != null && message.hasOwnProperty(\"remainingTime\"))\n            if (!$util.isInteger(message.remainingTime) && !(message.remainingTime && $util.isInteger(message.remainingTime.low) && $util.isInteger(message.remainingTime.high)))\n                return \"remainingTime: integer|Long expected\";\n        return null;\n    };\n\n    /**\n     * Creates a NAuctionItem message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof NAuctionItem\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {NAuctionItem} NAuctionItem\n     */\n    NAuctionItem.fromObject = function fromObject(object) {\n        if (object instanceof $root.NAuctionItem)\n            return object;\n        var message = new $root.NAuctionItem();\n        if (object.id != null)\n            message.id = object.id | 0;\n        if (object.userId != null)\n            message.userId = object.userId | 0;\n        if (object.itemId != null)\n            message.itemId = object.itemId | 0;\n        if (object.count != null)\n            message.count = object.count | 0;\n        if (object.biddingPrice != null)\n            if ($util.Long)\n                (message.biddingPrice = $util.Long.fromValue(object.biddingPrice)).unsigned = false;\n            else if (typeof object.biddingPrice === \"string\")\n                message.biddingPrice = parseInt(object.biddingPrice, 10);\n            else if (typeof object.biddingPrice === \"number\")\n                message.biddingPrice = object.biddingPrice;\n            else if (typeof object.biddingPrice === \"object\")\n                message.biddingPrice = new $util.LongBits(object.biddingPrice.low >>> 0, object.biddingPrice.high >>> 0).toNumber();\n        if (object.currentPrice != null)\n            if ($util.Long)\n                (message.currentPrice = $util.Long.fromValue(object.currentPrice)).unsigned = false;\n            else if (typeof object.currentPrice === \"string\")\n                message.currentPrice = parseInt(object.currentPrice, 10);\n            else if (typeof object.currentPrice === \"number\")\n                message.currentPrice = object.currentPrice;\n            else if (typeof object.currentPrice === \"object\")\n                message.currentPrice = new $util.LongBits(object.currentPrice.low >>> 0, object.currentPrice.high >>> 0).toNumber();\n        if (object.bidderUserId != null)\n            message.bidderUserId = object.bidderUserId | 0;\n        if (object.bidderNickName != null)\n            message.bidderNickName = String(object.bidderNickName);\n        if (object.remainingTime != null)\n            if ($util.Long)\n                (message.remainingTime = $util.Long.fromValue(object.remainingTime)).unsigned = false;\n            else if (typeof object.remainingTime === \"string\")\n                message.remainingTime = parseInt(object.remainingTime, 10);\n            else if (typeof object.remainingTime === \"number\")\n                message.remainingTime = object.remainingTime;\n            else if (typeof object.remainingTime === \"object\")\n                message.remainingTime = new $util.LongBits(object.remainingTime.low >>> 0, object.remainingTime.high >>> 0).toNumber();\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a NAuctionItem message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof NAuctionItem\n     * @static\n     * @param {NAuctionItem} message NAuctionItem\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    NAuctionItem.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.id = 0;\n            object.userId = 0;\n            object.itemId = 0;\n            object.count = 0;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.biddingPrice = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.biddingPrice = options.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.currentPrice = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.currentPrice = options.longs === String ? \"0\" : 0;\n            object.bidderUserId = 0;\n            object.bidderNickName = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.remainingTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.remainingTime = options.longs === String ? \"0\" : 0;\n        }\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            object.id = message.id;\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            object.userId = message.userId;\n        if (message.itemId != null && message.hasOwnProperty(\"itemId\"))\n            object.itemId = message.itemId;\n        if (message.count != null && message.hasOwnProperty(\"count\"))\n            object.count = message.count;\n        if (message.biddingPrice != null && message.hasOwnProperty(\"biddingPrice\"))\n            if (typeof message.biddingPrice === \"number\")\n                object.biddingPrice = options.longs === String ? String(message.biddingPrice) : message.biddingPrice;\n            else\n                object.biddingPrice = options.longs === String ? $util.Long.prototype.toString.call(message.biddingPrice) : options.longs === Number ? new $util.LongBits(message.biddingPrice.low >>> 0, message.biddingPrice.high >>> 0).toNumber() : message.biddingPrice;\n        if (message.currentPrice != null && message.hasOwnProperty(\"currentPrice\"))\n            if (typeof message.currentPrice === \"number\")\n                object.currentPrice = options.longs === String ? String(message.currentPrice) : message.currentPrice;\n            else\n                object.currentPrice = options.longs === String ? $util.Long.prototype.toString.call(message.currentPrice) : options.longs === Number ? new $util.LongBits(message.currentPrice.low >>> 0, message.currentPrice.high >>> 0).toNumber() : message.currentPrice;\n        if (message.bidderUserId != null && message.hasOwnProperty(\"bidderUserId\"))\n            object.bidderUserId = message.bidderUserId;\n        if (message.bidderNickName != null && message.hasOwnProperty(\"bidderNickName\"))\n            object.bidderNickName = message.bidderNickName;\n        if (message.remainingTime != null && message.hasOwnProperty(\"remainingTime\"))\n            if (typeof message.remainingTime === \"number\")\n                object.remainingTime = options.longs === String ? String(message.remainingTime) : message.remainingTime;\n            else\n                object.remainingTime = options.longs === String ? $util.Long.prototype.toString.call(message.remainingTime) : options.longs === Number ? new $util.LongBits(message.remainingTime.low >>> 0, message.remainingTime.high >>> 0).toNumber() : message.remainingTime;\n        return object;\n    };\n\n    /**\n     * Converts this NAuctionItem to JSON.\n     * @function toJSON\n     * @memberof NAuctionItem\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    NAuctionItem.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return NAuctionItem;\n})();\n\n/**\n * UserStatus enum.\n * @exports UserStatus\n * @enum {string}\n * @property {number} Normal=0 Normal value\n * @property {number} Game=1 Game value\n * @property {number} Room=2 Room value\n * @property {number} Live=3 Live value\n * @property {number} GameOver=4 GameOver value\n */\n$root.UserStatus = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = \"Normal\"] = 0;\n    values[valuesById[1] = \"Game\"] = 1;\n    values[valuesById[2] = \"Room\"] = 2;\n    values[valuesById[3] = \"Live\"] = 3;\n    values[valuesById[4] = \"GameOver\"] = 4;\n    return values;\n})();\n\n$root.NetMessage = (function() {\n\n    /**\n     * Properties of a NetMessage.\n     * @exports INetMessage\n     * @interface INetMessage\n     * @property {INetMessageRequest|null} [Request] NetMessage Request\n     * @property {INetMessageResponse|null} [Response] NetMessage Response\n     */\n\n    /**\n     * Constructs a new NetMessage.\n     * @exports NetMessage\n     * @classdesc Represents a NetMessage.\n     * @implements INetMessage\n     * @constructor\n     * @param {INetMessage=} [properties] Properties to set\n     */\n    function NetMessage(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * NetMessage Request.\n     * @member {INetMessageRequest|null|undefined} Request\n     * @memberof NetMessage\n     * @instance\n     */\n    NetMessage.prototype.Request = null;\n\n    /**\n     * NetMessage Response.\n     * @member {INetMessageResponse|null|undefined} Response\n     * @memberof NetMessage\n     * @instance\n     */\n    NetMessage.prototype.Response = null;\n\n    /**\n     * Creates a new NetMessage instance using the specified properties.\n     * @function create\n     * @memberof NetMessage\n     * @static\n     * @param {INetMessage=} [properties] Properties to set\n     * @returns {NetMessage} NetMessage instance\n     */\n    NetMessage.create = function create(properties) {\n        return new NetMessage(properties);\n    };\n\n    /**\n     * Encodes the specified NetMessage message. Does not implicitly {@link NetMessage.verify|verify} messages.\n     * @function encode\n     * @memberof NetMessage\n     * @static\n     * @param {INetMessage} message NetMessage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NetMessage.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.Request != null && message.hasOwnProperty(\"Request\"))\n            $root.NetMessageRequest.encode(message.Request, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.Response != null && message.hasOwnProperty(\"Response\"))\n            $root.NetMessageResponse.encode(message.Response, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified NetMessage message, length delimited. Does not implicitly {@link NetMessage.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof NetMessage\n     * @static\n     * @param {INetMessage} message NetMessage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NetMessage.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a NetMessage message from the specified reader or buffer.\n     * @function decode\n     * @memberof NetMessage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {NetMessage} NetMessage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NetMessage.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NetMessage();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.Request = $root.NetMessageRequest.decode(reader, reader.uint32());\n                break;\n            case 2:\n                message.Response = $root.NetMessageResponse.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a NetMessage message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof NetMessage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {NetMessage} NetMessage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NetMessage.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a NetMessage message.\n     * @function verify\n     * @memberof NetMessage\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    NetMessage.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.Request != null && message.hasOwnProperty(\"Request\")) {\n            var error = $root.NetMessageRequest.verify(message.Request);\n            if (error)\n                return \"Request.\" + error;\n        }\n        if (message.Response != null && message.hasOwnProperty(\"Response\")) {\n            var error = $root.NetMessageResponse.verify(message.Response);\n            if (error)\n                return \"Response.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a NetMessage message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof NetMessage\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {NetMessage} NetMessage\n     */\n    NetMessage.fromObject = function fromObject(object) {\n        if (object instanceof $root.NetMessage)\n            return object;\n        var message = new $root.NetMessage();\n        if (object.Request != null) {\n            if (typeof object.Request !== \"object\")\n                throw TypeError(\".NetMessage.Request: object expected\");\n            message.Request = $root.NetMessageRequest.fromObject(object.Request);\n        }\n        if (object.Response != null) {\n            if (typeof object.Response !== \"object\")\n                throw TypeError(\".NetMessage.Response: object expected\");\n            message.Response = $root.NetMessageResponse.fromObject(object.Response);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a NetMessage message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof NetMessage\n     * @static\n     * @param {NetMessage} message NetMessage\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    NetMessage.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.Request = null;\n            object.Response = null;\n        }\n        if (message.Request != null && message.hasOwnProperty(\"Request\"))\n            object.Request = $root.NetMessageRequest.toObject(message.Request, options);\n        if (message.Response != null && message.hasOwnProperty(\"Response\"))\n            object.Response = $root.NetMessageResponse.toObject(message.Response, options);\n        return object;\n    };\n\n    /**\n     * Converts this NetMessage to JSON.\n     * @function toJSON\n     * @memberof NetMessage\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    NetMessage.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return NetMessage;\n})();\n\n$root.NetMessageRequest = (function() {\n\n    /**\n     * Properties of a NetMessageRequest.\n     * @exports INetMessageRequest\n     * @interface INetMessageRequest\n     * @property {IUserRegisterRequest|null} [userRegister] NetMessageRequest userRegister\n     * @property {IUserLoginRequest|null} [userLogin] NetMessageRequest userLogin\n     * @property {ICharacterDetailRequest|null} [characterDetail] NetMessageRequest characterDetail\n     * @property {IUpdateNickNameRequest|null} [updateNickName] NetMessageRequest updateNickName\n     * @property {IAttrPromoteRequest|null} [attrPromote] NetMessageRequest attrPromote\n     * @property {ICombatPowerRankingRequest|null} [combatPowerRanking] NetMessageRequest combatPowerRanking\n     * @property {IItemBuyRequest|null} [itemBuy] NetMessageRequest itemBuy\n     * @property {IFollowRequest|null} [followReq] NetMessageRequest followReq\n     * @property {IUnLockRequest|null} [unLockReq] NetMessageRequest unLockReq\n     * @property {ISwitchCharacterRequest|null} [switchCharacterReq] NetMessageRequest switchCharacterReq\n     * @property {IBagHandleRequest|null} [bagHandleReq] NetMessageRequest bagHandleReq\n     * @property {IQueryTranRequest|null} [queryTranReq] NetMessageRequest queryTranReq\n     * @property {IBuyTranRequest|null} [buyTranReq] NetMessageRequest buyTranReq\n     * @property {IHeartBeatRequest|null} [heartBeatReq] NetMessageRequest heartBeatReq\n     * @property {IOfferPriceRequest|null} [offerPriceReq] NetMessageRequest offerPriceReq\n     * @property {IAuctionRequest|null} [auctionReq] NetMessageRequest auctionReq\n     * @property {IGetAuctionListRequest|null} [getAuctionListReq] NetMessageRequest getAuctionListReq\n     * @property {IMyRoomRequest|null} [myRoomReq] NetMessageRequest myRoomReq\n     * @property {IInviteRequest|null} [inviteReq] NetMessageRequest inviteReq\n     * @property {IInviteResponse|null} [inviteRes] NetMessageRequest inviteRes\n     * @property {IKickOutRequest|null} [kickOutReq] NetMessageRequest kickOutReq\n     * @property {IRoomStartGameRequest|null} [roomStartGameReq] NetMessageRequest roomStartGameReq\n     * @property {INickNameSearchRequest|null} [nickNameSearchReq] NetMessageRequest nickNameSearchReq\n     * @property {IAddRoomRequest|null} [addRoomReq] NetMessageRequest addRoomReq\n     * @property {IAddRoomResponse|null} [addRoomRes] NetMessageRequest addRoomRes\n     * @property {IOutRoomRequest|null} [outRoomReq] NetMessageRequest outRoomReq\n     * @property {IChatRequest|null} [chatReq] NetMessageRequest chatReq\n     * @property {IUserStatusQueryRequest|null} [userStatusQueryReq] NetMessageRequest userStatusQueryReq\n     * @property {IStartMatchRequest|null} [startMatchReq] NetMessageRequest startMatchReq\n     * @property {IGameOver2Request|null} [gameOver2Req] NetMessageRequest gameOver2Req\n     * @property {IAddLiveRequest|null} [addLiveReq] NetMessageRequest addLiveReq\n     * @property {IUploadBiFenRequest|null} [uploadBiFenReq] NetMessageRequest uploadBiFenReq\n     * @property {IFollowListRequest|null} [followListReq] NetMessageRequest followListReq\n     * @property {IValidateOpenRoomRequest|null} [validateOpenRoomReq] NetMessageRequest validateOpenRoomReq\n     */\n\n    /**\n     * Constructs a new NetMessageRequest.\n     * @exports NetMessageRequest\n     * @classdesc Represents a NetMessageRequest.\n     * @implements INetMessageRequest\n     * @constructor\n     * @param {INetMessageRequest=} [properties] Properties to set\n     */\n    function NetMessageRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * NetMessageRequest userRegister.\n     * @member {IUserRegisterRequest|null|undefined} userRegister\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.userRegister = null;\n\n    /**\n     * NetMessageRequest userLogin.\n     * @member {IUserLoginRequest|null|undefined} userLogin\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.userLogin = null;\n\n    /**\n     * NetMessageRequest characterDetail.\n     * @member {ICharacterDetailRequest|null|undefined} characterDetail\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.characterDetail = null;\n\n    /**\n     * NetMessageRequest updateNickName.\n     * @member {IUpdateNickNameRequest|null|undefined} updateNickName\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.updateNickName = null;\n\n    /**\n     * NetMessageRequest attrPromote.\n     * @member {IAttrPromoteRequest|null|undefined} attrPromote\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.attrPromote = null;\n\n    /**\n     * NetMessageRequest combatPowerRanking.\n     * @member {ICombatPowerRankingRequest|null|undefined} combatPowerRanking\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.combatPowerRanking = null;\n\n    /**\n     * NetMessageRequest itemBuy.\n     * @member {IItemBuyRequest|null|undefined} itemBuy\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.itemBuy = null;\n\n    /**\n     * NetMessageRequest followReq.\n     * @member {IFollowRequest|null|undefined} followReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.followReq = null;\n\n    /**\n     * NetMessageRequest unLockReq.\n     * @member {IUnLockRequest|null|undefined} unLockReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.unLockReq = null;\n\n    /**\n     * NetMessageRequest switchCharacterReq.\n     * @member {ISwitchCharacterRequest|null|undefined} switchCharacterReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.switchCharacterReq = null;\n\n    /**\n     * NetMessageRequest bagHandleReq.\n     * @member {IBagHandleRequest|null|undefined} bagHandleReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.bagHandleReq = null;\n\n    /**\n     * NetMessageRequest queryTranReq.\n     * @member {IQueryTranRequest|null|undefined} queryTranReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.queryTranReq = null;\n\n    /**\n     * NetMessageRequest buyTranReq.\n     * @member {IBuyTranRequest|null|undefined} buyTranReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.buyTranReq = null;\n\n    /**\n     * NetMessageRequest heartBeatReq.\n     * @member {IHeartBeatRequest|null|undefined} heartBeatReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.heartBeatReq = null;\n\n    /**\n     * NetMessageRequest offerPriceReq.\n     * @member {IOfferPriceRequest|null|undefined} offerPriceReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.offerPriceReq = null;\n\n    /**\n     * NetMessageRequest auctionReq.\n     * @member {IAuctionRequest|null|undefined} auctionReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.auctionReq = null;\n\n    /**\n     * NetMessageRequest getAuctionListReq.\n     * @member {IGetAuctionListRequest|null|undefined} getAuctionListReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.getAuctionListReq = null;\n\n    /**\n     * NetMessageRequest myRoomReq.\n     * @member {IMyRoomRequest|null|undefined} myRoomReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.myRoomReq = null;\n\n    /**\n     * NetMessageRequest inviteReq.\n     * @member {IInviteRequest|null|undefined} inviteReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.inviteReq = null;\n\n    /**\n     * NetMessageRequest inviteRes.\n     * @member {IInviteResponse|null|undefined} inviteRes\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.inviteRes = null;\n\n    /**\n     * NetMessageRequest kickOutReq.\n     * @member {IKickOutRequest|null|undefined} kickOutReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.kickOutReq = null;\n\n    /**\n     * NetMessageRequest roomStartGameReq.\n     * @member {IRoomStartGameRequest|null|undefined} roomStartGameReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.roomStartGameReq = null;\n\n    /**\n     * NetMessageRequest nickNameSearchReq.\n     * @member {INickNameSearchRequest|null|undefined} nickNameSearchReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.nickNameSearchReq = null;\n\n    /**\n     * NetMessageRequest addRoomReq.\n     * @member {IAddRoomRequest|null|undefined} addRoomReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.addRoomReq = null;\n\n    /**\n     * NetMessageRequest addRoomRes.\n     * @member {IAddRoomResponse|null|undefined} addRoomRes\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.addRoomRes = null;\n\n    /**\n     * NetMessageRequest outRoomReq.\n     * @member {IOutRoomRequest|null|undefined} outRoomReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.outRoomReq = null;\n\n    /**\n     * NetMessageRequest chatReq.\n     * @member {IChatRequest|null|undefined} chatReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.chatReq = null;\n\n    /**\n     * NetMessageRequest userStatusQueryReq.\n     * @member {IUserStatusQueryRequest|null|undefined} userStatusQueryReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.userStatusQueryReq = null;\n\n    /**\n     * NetMessageRequest startMatchReq.\n     * @member {IStartMatchRequest|null|undefined} startMatchReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.startMatchReq = null;\n\n    /**\n     * NetMessageRequest gameOver2Req.\n     * @member {IGameOver2Request|null|undefined} gameOver2Req\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.gameOver2Req = null;\n\n    /**\n     * NetMessageRequest addLiveReq.\n     * @member {IAddLiveRequest|null|undefined} addLiveReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.addLiveReq = null;\n\n    /**\n     * NetMessageRequest uploadBiFenReq.\n     * @member {IUploadBiFenRequest|null|undefined} uploadBiFenReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.uploadBiFenReq = null;\n\n    /**\n     * NetMessageRequest followListReq.\n     * @member {IFollowListRequest|null|undefined} followListReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.followListReq = null;\n\n    /**\n     * NetMessageRequest validateOpenRoomReq.\n     * @member {IValidateOpenRoomRequest|null|undefined} validateOpenRoomReq\n     * @memberof NetMessageRequest\n     * @instance\n     */\n    NetMessageRequest.prototype.validateOpenRoomReq = null;\n\n    /**\n     * Creates a new NetMessageRequest instance using the specified properties.\n     * @function create\n     * @memberof NetMessageRequest\n     * @static\n     * @param {INetMessageRequest=} [properties] Properties to set\n     * @returns {NetMessageRequest} NetMessageRequest instance\n     */\n    NetMessageRequest.create = function create(properties) {\n        return new NetMessageRequest(properties);\n    };\n\n    /**\n     * Encodes the specified NetMessageRequest message. Does not implicitly {@link NetMessageRequest.verify|verify} messages.\n     * @function encode\n     * @memberof NetMessageRequest\n     * @static\n     * @param {INetMessageRequest} message NetMessageRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NetMessageRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.userRegister != null && message.hasOwnProperty(\"userRegister\"))\n            $root.UserRegisterRequest.encode(message.userRegister, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.userLogin != null && message.hasOwnProperty(\"userLogin\"))\n            $root.UserLoginRequest.encode(message.userLogin, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.characterDetail != null && message.hasOwnProperty(\"characterDetail\"))\n            $root.CharacterDetailRequest.encode(message.characterDetail, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        if (message.updateNickName != null && message.hasOwnProperty(\"updateNickName\"))\n            $root.UpdateNickNameRequest.encode(message.updateNickName, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.attrPromote != null && message.hasOwnProperty(\"attrPromote\"))\n            $root.AttrPromoteRequest.encode(message.attrPromote, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n        if (message.combatPowerRanking != null && message.hasOwnProperty(\"combatPowerRanking\"))\n            $root.CombatPowerRankingRequest.encode(message.combatPowerRanking, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n        if (message.itemBuy != null && message.hasOwnProperty(\"itemBuy\"))\n            $root.ItemBuyRequest.encode(message.itemBuy, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n        if (message.followReq != null && message.hasOwnProperty(\"followReq\"))\n            $root.FollowRequest.encode(message.followReq, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n        if (message.unLockReq != null && message.hasOwnProperty(\"unLockReq\"))\n            $root.UnLockRequest.encode(message.unLockReq, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n        if (message.switchCharacterReq != null && message.hasOwnProperty(\"switchCharacterReq\"))\n            $root.SwitchCharacterRequest.encode(message.switchCharacterReq, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n        if (message.bagHandleReq != null && message.hasOwnProperty(\"bagHandleReq\"))\n            $root.BagHandleRequest.encode(message.bagHandleReq, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n        if (message.queryTranReq != null && message.hasOwnProperty(\"queryTranReq\"))\n            $root.QueryTranRequest.encode(message.queryTranReq, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n        if (message.buyTranReq != null && message.hasOwnProperty(\"buyTranReq\"))\n            $root.BuyTranRequest.encode(message.buyTranReq, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n        if (message.heartBeatReq != null && message.hasOwnProperty(\"heartBeatReq\"))\n            $root.HeartBeatRequest.encode(message.heartBeatReq, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n        if (message.offerPriceReq != null && message.hasOwnProperty(\"offerPriceReq\"))\n            $root.OfferPriceRequest.encode(message.offerPriceReq, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();\n        if (message.auctionReq != null && message.hasOwnProperty(\"auctionReq\"))\n            $root.AuctionRequest.encode(message.auctionReq, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();\n        if (message.getAuctionListReq != null && message.hasOwnProperty(\"getAuctionListReq\"))\n            $root.GetAuctionListRequest.encode(message.getAuctionListReq, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();\n        if (message.myRoomReq != null && message.hasOwnProperty(\"myRoomReq\"))\n            $root.MyRoomRequest.encode(message.myRoomReq, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();\n        if (message.inviteReq != null && message.hasOwnProperty(\"inviteReq\"))\n            $root.InviteRequest.encode(message.inviteReq, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();\n        if (message.inviteRes != null && message.hasOwnProperty(\"inviteRes\"))\n            $root.InviteResponse.encode(message.inviteRes, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();\n        if (message.kickOutReq != null && message.hasOwnProperty(\"kickOutReq\"))\n            $root.KickOutRequest.encode(message.kickOutReq, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();\n        if (message.roomStartGameReq != null && message.hasOwnProperty(\"roomStartGameReq\"))\n            $root.RoomStartGameRequest.encode(message.roomStartGameReq, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();\n        if (message.nickNameSearchReq != null && message.hasOwnProperty(\"nickNameSearchReq\"))\n            $root.NickNameSearchRequest.encode(message.nickNameSearchReq, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();\n        if (message.addRoomReq != null && message.hasOwnProperty(\"addRoomReq\"))\n            $root.AddRoomRequest.encode(message.addRoomReq, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();\n        if (message.addRoomRes != null && message.hasOwnProperty(\"addRoomRes\"))\n            $root.AddRoomResponse.encode(message.addRoomRes, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();\n        if (message.outRoomReq != null && message.hasOwnProperty(\"outRoomReq\"))\n            $root.OutRoomRequest.encode(message.outRoomReq, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();\n        if (message.chatReq != null && message.hasOwnProperty(\"chatReq\"))\n            $root.ChatRequest.encode(message.chatReq, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();\n        if (message.userStatusQueryReq != null && message.hasOwnProperty(\"userStatusQueryReq\"))\n            $root.UserStatusQueryRequest.encode(message.userStatusQueryReq, writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();\n        if (message.startMatchReq != null && message.hasOwnProperty(\"startMatchReq\"))\n            $root.StartMatchRequest.encode(message.startMatchReq, writer.uint32(/* id 29, wireType 2 =*/234).fork()).ldelim();\n        if (message.gameOver2Req != null && message.hasOwnProperty(\"gameOver2Req\"))\n            $root.GameOver2Request.encode(message.gameOver2Req, writer.uint32(/* id 30, wireType 2 =*/242).fork()).ldelim();\n        if (message.addLiveReq != null && message.hasOwnProperty(\"addLiveReq\"))\n            $root.AddLiveRequest.encode(message.addLiveReq, writer.uint32(/* id 31, wireType 2 =*/250).fork()).ldelim();\n        if (message.uploadBiFenReq != null && message.hasOwnProperty(\"uploadBiFenReq\"))\n            $root.UploadBiFenRequest.encode(message.uploadBiFenReq, writer.uint32(/* id 32, wireType 2 =*/258).fork()).ldelim();\n        if (message.followListReq != null && message.hasOwnProperty(\"followListReq\"))\n            $root.FollowListRequest.encode(message.followListReq, writer.uint32(/* id 33, wireType 2 =*/266).fork()).ldelim();\n        if (message.validateOpenRoomReq != null && message.hasOwnProperty(\"validateOpenRoomReq\"))\n            $root.ValidateOpenRoomRequest.encode(message.validateOpenRoomReq, writer.uint32(/* id 34, wireType 2 =*/274).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified NetMessageRequest message, length delimited. Does not implicitly {@link NetMessageRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof NetMessageRequest\n     * @static\n     * @param {INetMessageRequest} message NetMessageRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NetMessageRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a NetMessageRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof NetMessageRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {NetMessageRequest} NetMessageRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NetMessageRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NetMessageRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.userRegister = $root.UserRegisterRequest.decode(reader, reader.uint32());\n                break;\n            case 2:\n                message.userLogin = $root.UserLoginRequest.decode(reader, reader.uint32());\n                break;\n            case 3:\n                message.characterDetail = $root.CharacterDetailRequest.decode(reader, reader.uint32());\n                break;\n            case 4:\n                message.updateNickName = $root.UpdateNickNameRequest.decode(reader, reader.uint32());\n                break;\n            case 5:\n                message.attrPromote = $root.AttrPromoteRequest.decode(reader, reader.uint32());\n                break;\n            case 6:\n                message.combatPowerRanking = $root.CombatPowerRankingRequest.decode(reader, reader.uint32());\n                break;\n            case 7:\n                message.itemBuy = $root.ItemBuyRequest.decode(reader, reader.uint32());\n                break;\n            case 8:\n                message.followReq = $root.FollowRequest.decode(reader, reader.uint32());\n                break;\n            case 9:\n                message.unLockReq = $root.UnLockRequest.decode(reader, reader.uint32());\n                break;\n            case 10:\n                message.switchCharacterReq = $root.SwitchCharacterRequest.decode(reader, reader.uint32());\n                break;\n            case 11:\n                message.bagHandleReq = $root.BagHandleRequest.decode(reader, reader.uint32());\n                break;\n            case 12:\n                message.queryTranReq = $root.QueryTranRequest.decode(reader, reader.uint32());\n                break;\n            case 13:\n                message.buyTranReq = $root.BuyTranRequest.decode(reader, reader.uint32());\n                break;\n            case 14:\n                message.heartBeatReq = $root.HeartBeatRequest.decode(reader, reader.uint32());\n                break;\n            case 15:\n                message.offerPriceReq = $root.OfferPriceRequest.decode(reader, reader.uint32());\n                break;\n            case 16:\n                message.auctionReq = $root.AuctionRequest.decode(reader, reader.uint32());\n                break;\n            case 17:\n                message.getAuctionListReq = $root.GetAuctionListRequest.decode(reader, reader.uint32());\n                break;\n            case 18:\n                message.myRoomReq = $root.MyRoomRequest.decode(reader, reader.uint32());\n                break;\n            case 19:\n                message.inviteReq = $root.InviteRequest.decode(reader, reader.uint32());\n                break;\n            case 20:\n                message.inviteRes = $root.InviteResponse.decode(reader, reader.uint32());\n                break;\n            case 21:\n                message.kickOutReq = $root.KickOutRequest.decode(reader, reader.uint32());\n                break;\n            case 22:\n                message.roomStartGameReq = $root.RoomStartGameRequest.decode(reader, reader.uint32());\n                break;\n            case 23:\n                message.nickNameSearchReq = $root.NickNameSearchRequest.decode(reader, reader.uint32());\n                break;\n            case 24:\n                message.addRoomReq = $root.AddRoomRequest.decode(reader, reader.uint32());\n                break;\n            case 25:\n                message.addRoomRes = $root.AddRoomResponse.decode(reader, reader.uint32());\n                break;\n            case 26:\n                message.outRoomReq = $root.OutRoomRequest.decode(reader, reader.uint32());\n                break;\n            case 27:\n                message.chatReq = $root.ChatRequest.decode(reader, reader.uint32());\n                break;\n            case 28:\n                message.userStatusQueryReq = $root.UserStatusQueryRequest.decode(reader, reader.uint32());\n                break;\n            case 29:\n                message.startMatchReq = $root.StartMatchRequest.decode(reader, reader.uint32());\n                break;\n            case 30:\n                message.gameOver2Req = $root.GameOver2Request.decode(reader, reader.uint32());\n                break;\n            case 31:\n                message.addLiveReq = $root.AddLiveRequest.decode(reader, reader.uint32());\n                break;\n            case 32:\n                message.uploadBiFenReq = $root.UploadBiFenRequest.decode(reader, reader.uint32());\n                break;\n            case 33:\n                message.followListReq = $root.FollowListRequest.decode(reader, reader.uint32());\n                break;\n            case 34:\n                message.validateOpenRoomReq = $root.ValidateOpenRoomRequest.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a NetMessageRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof NetMessageRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {NetMessageRequest} NetMessageRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NetMessageRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a NetMessageRequest message.\n     * @function verify\n     * @memberof NetMessageRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    NetMessageRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.userRegister != null && message.hasOwnProperty(\"userRegister\")) {\n            var error = $root.UserRegisterRequest.verify(message.userRegister);\n            if (error)\n                return \"userRegister.\" + error;\n        }\n        if (message.userLogin != null && message.hasOwnProperty(\"userLogin\")) {\n            var error = $root.UserLoginRequest.verify(message.userLogin);\n            if (error)\n                return \"userLogin.\" + error;\n        }\n        if (message.characterDetail != null && message.hasOwnProperty(\"characterDetail\")) {\n            var error = $root.CharacterDetailRequest.verify(message.characterDetail);\n            if (error)\n                return \"characterDetail.\" + error;\n        }\n        if (message.updateNickName != null && message.hasOwnProperty(\"updateNickName\")) {\n            var error = $root.UpdateNickNameRequest.verify(message.updateNickName);\n            if (error)\n                return \"updateNickName.\" + error;\n        }\n        if (message.attrPromote != null && message.hasOwnProperty(\"attrPromote\")) {\n            var error = $root.AttrPromoteRequest.verify(message.attrPromote);\n            if (error)\n                return \"attrPromote.\" + error;\n        }\n        if (message.combatPowerRanking != null && message.hasOwnProperty(\"combatPowerRanking\")) {\n            var error = $root.CombatPowerRankingRequest.verify(message.combatPowerRanking);\n            if (error)\n                return \"combatPowerRanking.\" + error;\n        }\n        if (message.itemBuy != null && message.hasOwnProperty(\"itemBuy\")) {\n            var error = $root.ItemBuyRequest.verify(message.itemBuy);\n            if (error)\n                return \"itemBuy.\" + error;\n        }\n        if (message.followReq != null && message.hasOwnProperty(\"followReq\")) {\n            var error = $root.FollowRequest.verify(message.followReq);\n            if (error)\n                return \"followReq.\" + error;\n        }\n        if (message.unLockReq != null && message.hasOwnProperty(\"unLockReq\")) {\n            var error = $root.UnLockRequest.verify(message.unLockReq);\n            if (error)\n                return \"unLockReq.\" + error;\n        }\n        if (message.switchCharacterReq != null && message.hasOwnProperty(\"switchCharacterReq\")) {\n            var error = $root.SwitchCharacterRequest.verify(message.switchCharacterReq);\n            if (error)\n                return \"switchCharacterReq.\" + error;\n        }\n        if (message.bagHandleReq != null && message.hasOwnProperty(\"bagHandleReq\")) {\n            var error = $root.BagHandleRequest.verify(message.bagHandleReq);\n            if (error)\n                return \"bagHandleReq.\" + error;\n        }\n        if (message.queryTranReq != null && message.hasOwnProperty(\"queryTranReq\")) {\n            var error = $root.QueryTranRequest.verify(message.queryTranReq);\n            if (error)\n                return \"queryTranReq.\" + error;\n        }\n        if (message.buyTranReq != null && message.hasOwnProperty(\"buyTranReq\")) {\n            var error = $root.BuyTranRequest.verify(message.buyTranReq);\n            if (error)\n                return \"buyTranReq.\" + error;\n        }\n        if (message.heartBeatReq != null && message.hasOwnProperty(\"heartBeatReq\")) {\n            var error = $root.HeartBeatRequest.verify(message.heartBeatReq);\n            if (error)\n                return \"heartBeatReq.\" + error;\n        }\n        if (message.offerPriceReq != null && message.hasOwnProperty(\"offerPriceReq\")) {\n            var error = $root.OfferPriceRequest.verify(message.offerPriceReq);\n            if (error)\n                return \"offerPriceReq.\" + error;\n        }\n        if (message.auctionReq != null && message.hasOwnProperty(\"auctionReq\")) {\n            var error = $root.AuctionRequest.verify(message.auctionReq);\n            if (error)\n                return \"auctionReq.\" + error;\n        }\n        if (message.getAuctionListReq != null && message.hasOwnProperty(\"getAuctionListReq\")) {\n            var error = $root.GetAuctionListRequest.verify(message.getAuctionListReq);\n            if (error)\n                return \"getAuctionListReq.\" + error;\n        }\n        if (message.myRoomReq != null && message.hasOwnProperty(\"myRoomReq\")) {\n            var error = $root.MyRoomRequest.verify(message.myRoomReq);\n            if (error)\n                return \"myRoomReq.\" + error;\n        }\n        if (message.inviteReq != null && message.hasOwnProperty(\"inviteReq\")) {\n            var error = $root.InviteRequest.verify(message.inviteReq);\n            if (error)\n                return \"inviteReq.\" + error;\n        }\n        if (message.inviteRes != null && message.hasOwnProperty(\"inviteRes\")) {\n            var error = $root.InviteResponse.verify(message.inviteRes);\n            if (error)\n                return \"inviteRes.\" + error;\n        }\n        if (message.kickOutReq != null && message.hasOwnProperty(\"kickOutReq\")) {\n            var error = $root.KickOutRequest.verify(message.kickOutReq);\n            if (error)\n                return \"kickOutReq.\" + error;\n        }\n        if (message.roomStartGameReq != null && message.hasOwnProperty(\"roomStartGameReq\")) {\n            var error = $root.RoomStartGameRequest.verify(message.roomStartGameReq);\n            if (error)\n                return \"roomStartGameReq.\" + error;\n        }\n        if (message.nickNameSearchReq != null && message.hasOwnProperty(\"nickNameSearchReq\")) {\n            var error = $root.NickNameSearchRequest.verify(message.nickNameSearchReq);\n            if (error)\n                return \"nickNameSearchReq.\" + error;\n        }\n        if (message.addRoomReq != null && message.hasOwnProperty(\"addRoomReq\")) {\n            var error = $root.AddRoomRequest.verify(message.addRoomReq);\n            if (error)\n                return \"addRoomReq.\" + error;\n        }\n        if (message.addRoomRes != null && message.hasOwnProperty(\"addRoomRes\")) {\n            var error = $root.AddRoomResponse.verify(message.addRoomRes);\n            if (error)\n                return \"addRoomRes.\" + error;\n        }\n        if (message.outRoomReq != null && message.hasOwnProperty(\"outRoomReq\")) {\n            var error = $root.OutRoomRequest.verify(message.outRoomReq);\n            if (error)\n                return \"outRoomReq.\" + error;\n        }\n        if (message.chatReq != null && message.hasOwnProperty(\"chatReq\")) {\n            var error = $root.ChatRequest.verify(message.chatReq);\n            if (error)\n                return \"chatReq.\" + error;\n        }\n        if (message.userStatusQueryReq != null && message.hasOwnProperty(\"userStatusQueryReq\")) {\n            var error = $root.UserStatusQueryRequest.verify(message.userStatusQueryReq);\n            if (error)\n                return \"userStatusQueryReq.\" + error;\n        }\n        if (message.startMatchReq != null && message.hasOwnProperty(\"startMatchReq\")) {\n            var error = $root.StartMatchRequest.verify(message.startMatchReq);\n            if (error)\n                return \"startMatchReq.\" + error;\n        }\n        if (message.gameOver2Req != null && message.hasOwnProperty(\"gameOver2Req\")) {\n            var error = $root.GameOver2Request.verify(message.gameOver2Req);\n            if (error)\n                return \"gameOver2Req.\" + error;\n        }\n        if (message.addLiveReq != null && message.hasOwnProperty(\"addLiveReq\")) {\n            var error = $root.AddLiveRequest.verify(message.addLiveReq);\n            if (error)\n                return \"addLiveReq.\" + error;\n        }\n        if (message.uploadBiFenReq != null && message.hasOwnProperty(\"uploadBiFenReq\")) {\n            var error = $root.UploadBiFenRequest.verify(message.uploadBiFenReq);\n            if (error)\n                return \"uploadBiFenReq.\" + error;\n        }\n        if (message.followListReq != null && message.hasOwnProperty(\"followListReq\")) {\n            var error = $root.FollowListRequest.verify(message.followListReq);\n            if (error)\n                return \"followListReq.\" + error;\n        }\n        if (message.validateOpenRoomReq != null && message.hasOwnProperty(\"validateOpenRoomReq\")) {\n            var error = $root.ValidateOpenRoomRequest.verify(message.validateOpenRoomReq);\n            if (error)\n                return \"validateOpenRoomReq.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a NetMessageRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof NetMessageRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {NetMessageRequest} NetMessageRequest\n     */\n    NetMessageRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.NetMessageRequest)\n            return object;\n        var message = new $root.NetMessageRequest();\n        if (object.userRegister != null) {\n            if (typeof object.userRegister !== \"object\")\n                throw TypeError(\".NetMessageRequest.userRegister: object expected\");\n            message.userRegister = $root.UserRegisterRequest.fromObject(object.userRegister);\n        }\n        if (object.userLogin != null) {\n            if (typeof object.userLogin !== \"object\")\n                throw TypeError(\".NetMessageRequest.userLogin: object expected\");\n            message.userLogin = $root.UserLoginRequest.fromObject(object.userLogin);\n        }\n        if (object.characterDetail != null) {\n            if (typeof object.characterDetail !== \"object\")\n                throw TypeError(\".NetMessageRequest.characterDetail: object expected\");\n            message.characterDetail = $root.CharacterDetailRequest.fromObject(object.characterDetail);\n        }\n        if (object.updateNickName != null) {\n            if (typeof object.updateNickName !== \"object\")\n                throw TypeError(\".NetMessageRequest.updateNickName: object expected\");\n            message.updateNickName = $root.UpdateNickNameRequest.fromObject(object.updateNickName);\n        }\n        if (object.attrPromote != null) {\n            if (typeof object.attrPromote !== \"object\")\n                throw TypeError(\".NetMessageRequest.attrPromote: object expected\");\n            message.attrPromote = $root.AttrPromoteRequest.fromObject(object.attrPromote);\n        }\n        if (object.combatPowerRanking != null) {\n            if (typeof object.combatPowerRanking !== \"object\")\n                throw TypeError(\".NetMessageRequest.combatPowerRanking: object expected\");\n            message.combatPowerRanking = $root.CombatPowerRankingRequest.fromObject(object.combatPowerRanking);\n        }\n        if (object.itemBuy != null) {\n            if (typeof object.itemBuy !== \"object\")\n                throw TypeError(\".NetMessageRequest.itemBuy: object expected\");\n            message.itemBuy = $root.ItemBuyRequest.fromObject(object.itemBuy);\n        }\n        if (object.followReq != null) {\n            if (typeof object.followReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.followReq: object expected\");\n            message.followReq = $root.FollowRequest.fromObject(object.followReq);\n        }\n        if (object.unLockReq != null) {\n            if (typeof object.unLockReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.unLockReq: object expected\");\n            message.unLockReq = $root.UnLockRequest.fromObject(object.unLockReq);\n        }\n        if (object.switchCharacterReq != null) {\n            if (typeof object.switchCharacterReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.switchCharacterReq: object expected\");\n            message.switchCharacterReq = $root.SwitchCharacterRequest.fromObject(object.switchCharacterReq);\n        }\n        if (object.bagHandleReq != null) {\n            if (typeof object.bagHandleReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.bagHandleReq: object expected\");\n            message.bagHandleReq = $root.BagHandleRequest.fromObject(object.bagHandleReq);\n        }\n        if (object.queryTranReq != null) {\n            if (typeof object.queryTranReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.queryTranReq: object expected\");\n            message.queryTranReq = $root.QueryTranRequest.fromObject(object.queryTranReq);\n        }\n        if (object.buyTranReq != null) {\n            if (typeof object.buyTranReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.buyTranReq: object expected\");\n            message.buyTranReq = $root.BuyTranRequest.fromObject(object.buyTranReq);\n        }\n        if (object.heartBeatReq != null) {\n            if (typeof object.heartBeatReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.heartBeatReq: object expected\");\n            message.heartBeatReq = $root.HeartBeatRequest.fromObject(object.heartBeatReq);\n        }\n        if (object.offerPriceReq != null) {\n            if (typeof object.offerPriceReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.offerPriceReq: object expected\");\n            message.offerPriceReq = $root.OfferPriceRequest.fromObject(object.offerPriceReq);\n        }\n        if (object.auctionReq != null) {\n            if (typeof object.auctionReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.auctionReq: object expected\");\n            message.auctionReq = $root.AuctionRequest.fromObject(object.auctionReq);\n        }\n        if (object.getAuctionListReq != null) {\n            if (typeof object.getAuctionListReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.getAuctionListReq: object expected\");\n            message.getAuctionListReq = $root.GetAuctionListRequest.fromObject(object.getAuctionListReq);\n        }\n        if (object.myRoomReq != null) {\n            if (typeof object.myRoomReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.myRoomReq: object expected\");\n            message.myRoomReq = $root.MyRoomRequest.fromObject(object.myRoomReq);\n        }\n        if (object.inviteReq != null) {\n            if (typeof object.inviteReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.inviteReq: object expected\");\n            message.inviteReq = $root.InviteRequest.fromObject(object.inviteReq);\n        }\n        if (object.inviteRes != null) {\n            if (typeof object.inviteRes !== \"object\")\n                throw TypeError(\".NetMessageRequest.inviteRes: object expected\");\n            message.inviteRes = $root.InviteResponse.fromObject(object.inviteRes);\n        }\n        if (object.kickOutReq != null) {\n            if (typeof object.kickOutReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.kickOutReq: object expected\");\n            message.kickOutReq = $root.KickOutRequest.fromObject(object.kickOutReq);\n        }\n        if (object.roomStartGameReq != null) {\n            if (typeof object.roomStartGameReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.roomStartGameReq: object expected\");\n            message.roomStartGameReq = $root.RoomStartGameRequest.fromObject(object.roomStartGameReq);\n        }\n        if (object.nickNameSearchReq != null) {\n            if (typeof object.nickNameSearchReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.nickNameSearchReq: object expected\");\n            message.nickNameSearchReq = $root.NickNameSearchRequest.fromObject(object.nickNameSearchReq);\n        }\n        if (object.addRoomReq != null) {\n            if (typeof object.addRoomReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.addRoomReq: object expected\");\n            message.addRoomReq = $root.AddRoomRequest.fromObject(object.addRoomReq);\n        }\n        if (object.addRoomRes != null) {\n            if (typeof object.addRoomRes !== \"object\")\n                throw TypeError(\".NetMessageRequest.addRoomRes: object expected\");\n            message.addRoomRes = $root.AddRoomResponse.fromObject(object.addRoomRes);\n        }\n        if (object.outRoomReq != null) {\n            if (typeof object.outRoomReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.outRoomReq: object expected\");\n            message.outRoomReq = $root.OutRoomRequest.fromObject(object.outRoomReq);\n        }\n        if (object.chatReq != null) {\n            if (typeof object.chatReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.chatReq: object expected\");\n            message.chatReq = $root.ChatRequest.fromObject(object.chatReq);\n        }\n        if (object.userStatusQueryReq != null) {\n            if (typeof object.userStatusQueryReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.userStatusQueryReq: object expected\");\n            message.userStatusQueryReq = $root.UserStatusQueryRequest.fromObject(object.userStatusQueryReq);\n        }\n        if (object.startMatchReq != null) {\n            if (typeof object.startMatchReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.startMatchReq: object expected\");\n            message.startMatchReq = $root.StartMatchRequest.fromObject(object.startMatchReq);\n        }\n        if (object.gameOver2Req != null) {\n            if (typeof object.gameOver2Req !== \"object\")\n                throw TypeError(\".NetMessageRequest.gameOver2Req: object expected\");\n            message.gameOver2Req = $root.GameOver2Request.fromObject(object.gameOver2Req);\n        }\n        if (object.addLiveReq != null) {\n            if (typeof object.addLiveReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.addLiveReq: object expected\");\n            message.addLiveReq = $root.AddLiveRequest.fromObject(object.addLiveReq);\n        }\n        if (object.uploadBiFenReq != null) {\n            if (typeof object.uploadBiFenReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.uploadBiFenReq: object expected\");\n            message.uploadBiFenReq = $root.UploadBiFenRequest.fromObject(object.uploadBiFenReq);\n        }\n        if (object.followListReq != null) {\n            if (typeof object.followListReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.followListReq: object expected\");\n            message.followListReq = $root.FollowListRequest.fromObject(object.followListReq);\n        }\n        if (object.validateOpenRoomReq != null) {\n            if (typeof object.validateOpenRoomReq !== \"object\")\n                throw TypeError(\".NetMessageRequest.validateOpenRoomReq: object expected\");\n            message.validateOpenRoomReq = $root.ValidateOpenRoomRequest.fromObject(object.validateOpenRoomReq);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a NetMessageRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof NetMessageRequest\n     * @static\n     * @param {NetMessageRequest} message NetMessageRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    NetMessageRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.userRegister = null;\n            object.userLogin = null;\n            object.characterDetail = null;\n            object.updateNickName = null;\n            object.attrPromote = null;\n            object.combatPowerRanking = null;\n            object.itemBuy = null;\n            object.followReq = null;\n            object.unLockReq = null;\n            object.switchCharacterReq = null;\n            object.bagHandleReq = null;\n            object.queryTranReq = null;\n            object.buyTranReq = null;\n            object.heartBeatReq = null;\n            object.offerPriceReq = null;\n            object.auctionReq = null;\n            object.getAuctionListReq = null;\n            object.myRoomReq = null;\n            object.inviteReq = null;\n            object.inviteRes = null;\n            object.kickOutReq = null;\n            object.roomStartGameReq = null;\n            object.nickNameSearchReq = null;\n            object.addRoomReq = null;\n            object.addRoomRes = null;\n            object.outRoomReq = null;\n            object.chatReq = null;\n            object.userStatusQueryReq = null;\n            object.startMatchReq = null;\n            object.gameOver2Req = null;\n            object.addLiveReq = null;\n            object.uploadBiFenReq = null;\n            object.followListReq = null;\n            object.validateOpenRoomReq = null;\n        }\n        if (message.userRegister != null && message.hasOwnProperty(\"userRegister\"))\n            object.userRegister = $root.UserRegisterRequest.toObject(message.userRegister, options);\n        if (message.userLogin != null && message.hasOwnProperty(\"userLogin\"))\n            object.userLogin = $root.UserLoginRequest.toObject(message.userLogin, options);\n        if (message.characterDetail != null && message.hasOwnProperty(\"characterDetail\"))\n            object.characterDetail = $root.CharacterDetailRequest.toObject(message.characterDetail, options);\n        if (message.updateNickName != null && message.hasOwnProperty(\"updateNickName\"))\n            object.updateNickName = $root.UpdateNickNameRequest.toObject(message.updateNickName, options);\n        if (message.attrPromote != null && message.hasOwnProperty(\"attrPromote\"))\n            object.attrPromote = $root.AttrPromoteRequest.toObject(message.attrPromote, options);\n        if (message.combatPowerRanking != null && message.hasOwnProperty(\"combatPowerRanking\"))\n            object.combatPowerRanking = $root.CombatPowerRankingRequest.toObject(message.combatPowerRanking, options);\n        if (message.itemBuy != null && message.hasOwnProperty(\"itemBuy\"))\n            object.itemBuy = $root.ItemBuyRequest.toObject(message.itemBuy, options);\n        if (message.followReq != null && message.hasOwnProperty(\"followReq\"))\n            object.followReq = $root.FollowRequest.toObject(message.followReq, options);\n        if (message.unLockReq != null && message.hasOwnProperty(\"unLockReq\"))\n            object.unLockReq = $root.UnLockRequest.toObject(message.unLockReq, options);\n        if (message.switchCharacterReq != null && message.hasOwnProperty(\"switchCharacterReq\"))\n            object.switchCharacterReq = $root.SwitchCharacterRequest.toObject(message.switchCharacterReq, options);\n        if (message.bagHandleReq != null && message.hasOwnProperty(\"bagHandleReq\"))\n            object.bagHandleReq = $root.BagHandleRequest.toObject(message.bagHandleReq, options);\n        if (message.queryTranReq != null && message.hasOwnProperty(\"queryTranReq\"))\n            object.queryTranReq = $root.QueryTranRequest.toObject(message.queryTranReq, options);\n        if (message.buyTranReq != null && message.hasOwnProperty(\"buyTranReq\"))\n            object.buyTranReq = $root.BuyTranRequest.toObject(message.buyTranReq, options);\n        if (message.heartBeatReq != null && message.hasOwnProperty(\"heartBeatReq\"))\n            object.heartBeatReq = $root.HeartBeatRequest.toObject(message.heartBeatReq, options);\n        if (message.offerPriceReq != null && message.hasOwnProperty(\"offerPriceReq\"))\n            object.offerPriceReq = $root.OfferPriceRequest.toObject(message.offerPriceReq, options);\n        if (message.auctionReq != null && message.hasOwnProperty(\"auctionReq\"))\n            object.auctionReq = $root.AuctionRequest.toObject(message.auctionReq, options);\n        if (message.getAuctionListReq != null && message.hasOwnProperty(\"getAuctionListReq\"))\n            object.getAuctionListReq = $root.GetAuctionListRequest.toObject(message.getAuctionListReq, options);\n        if (message.myRoomReq != null && message.hasOwnProperty(\"myRoomReq\"))\n            object.myRoomReq = $root.MyRoomRequest.toObject(message.myRoomReq, options);\n        if (message.inviteReq != null && message.hasOwnProperty(\"inviteReq\"))\n            object.inviteReq = $root.InviteRequest.toObject(message.inviteReq, options);\n        if (message.inviteRes != null && message.hasOwnProperty(\"inviteRes\"))\n            object.inviteRes = $root.InviteResponse.toObject(message.inviteRes, options);\n        if (message.kickOutReq != null && message.hasOwnProperty(\"kickOutReq\"))\n            object.kickOutReq = $root.KickOutRequest.toObject(message.kickOutReq, options);\n        if (message.roomStartGameReq != null && message.hasOwnProperty(\"roomStartGameReq\"))\n            object.roomStartGameReq = $root.RoomStartGameRequest.toObject(message.roomStartGameReq, options);\n        if (message.nickNameSearchReq != null && message.hasOwnProperty(\"nickNameSearchReq\"))\n            object.nickNameSearchReq = $root.NickNameSearchRequest.toObject(message.nickNameSearchReq, options);\n        if (message.addRoomReq != null && message.hasOwnProperty(\"addRoomReq\"))\n            object.addRoomReq = $root.AddRoomRequest.toObject(message.addRoomReq, options);\n        if (message.addRoomRes != null && message.hasOwnProperty(\"addRoomRes\"))\n            object.addRoomRes = $root.AddRoomResponse.toObject(message.addRoomRes, options);\n        if (message.outRoomReq != null && message.hasOwnProperty(\"outRoomReq\"))\n            object.outRoomReq = $root.OutRoomRequest.toObject(message.outRoomReq, options);\n        if (message.chatReq != null && message.hasOwnProperty(\"chatReq\"))\n            object.chatReq = $root.ChatRequest.toObject(message.chatReq, options);\n        if (message.userStatusQueryReq != null && message.hasOwnProperty(\"userStatusQueryReq\"))\n            object.userStatusQueryReq = $root.UserStatusQueryRequest.toObject(message.userStatusQueryReq, options);\n        if (message.startMatchReq != null && message.hasOwnProperty(\"startMatchReq\"))\n            object.startMatchReq = $root.StartMatchRequest.toObject(message.startMatchReq, options);\n        if (message.gameOver2Req != null && message.hasOwnProperty(\"gameOver2Req\"))\n            object.gameOver2Req = $root.GameOver2Request.toObject(message.gameOver2Req, options);\n        if (message.addLiveReq != null && message.hasOwnProperty(\"addLiveReq\"))\n            object.addLiveReq = $root.AddLiveRequest.toObject(message.addLiveReq, options);\n        if (message.uploadBiFenReq != null && message.hasOwnProperty(\"uploadBiFenReq\"))\n            object.uploadBiFenReq = $root.UploadBiFenRequest.toObject(message.uploadBiFenReq, options);\n        if (message.followListReq != null && message.hasOwnProperty(\"followListReq\"))\n            object.followListReq = $root.FollowListRequest.toObject(message.followListReq, options);\n        if (message.validateOpenRoomReq != null && message.hasOwnProperty(\"validateOpenRoomReq\"))\n            object.validateOpenRoomReq = $root.ValidateOpenRoomRequest.toObject(message.validateOpenRoomReq, options);\n        return object;\n    };\n\n    /**\n     * Converts this NetMessageRequest to JSON.\n     * @function toJSON\n     * @memberof NetMessageRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    NetMessageRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return NetMessageRequest;\n})();\n\n$root.NetMessageResponse = (function() {\n\n    /**\n     * Properties of a NetMessageResponse.\n     * @exports INetMessageResponse\n     * @interface INetMessageResponse\n     * @property {IUserRegisterResponse|null} [userRegister] NetMessageResponse userRegister\n     * @property {IUserLoginResponse|null} [userLogin] NetMessageResponse userLogin\n     * @property {ICharacterDetailResponse|null} [characterDetail] NetMessageResponse characterDetail\n     * @property {IUpdateNickNameResponse|null} [updateNickName] NetMessageResponse updateNickName\n     * @property {IAttrPromoteInfoResponse|null} [attrPromote] NetMessageResponse attrPromote\n     * @property {ICombatPowerRankingResponse|null} [combatPowerRanking] NetMessageResponse combatPowerRanking\n     * @property {IItemBuyResponse|null} [itemBuy] NetMessageResponse itemBuy\n     * @property {IFollowResponse|null} [followRes] NetMessageResponse followRes\n     * @property {IUnLockResponse|null} [unLockRes] NetMessageResponse unLockRes\n     * @property {ISwitchCharacterResponse|null} [switchCharacterRes] NetMessageResponse switchCharacterRes\n     * @property {IBagHandleResponse|null} [bagHandleRes] NetMessageResponse bagHandleRes\n     * @property {IUserStatusChangeResponse|null} [userStatusChangeRes] NetMessageResponse userStatusChangeRes\n     * @property {IQueryTranResponse|null} [queryTranRes] NetMessageResponse queryTranRes\n     * @property {IBuyTranResponse|null} [buyTranRes] NetMessageResponse buyTranRes\n     * @property {IHeartBeatResponse|null} [heartBeatRes] NetMessageResponse heartBeatRes\n     * @property {IOfferPriceResponse|null} [offerPriceRes] NetMessageResponse offerPriceRes\n     * @property {IAuctionResponse|null} [auctionRes] NetMessageResponse auctionRes\n     * @property {IGetAuctionListResponse|null} [getAuctionListRes] NetMessageResponse getAuctionListRes\n     * @property {ITipsResponse|null} [tipsRes] NetMessageResponse tipsRes\n     * @property {IMyRoomResponse|null} [myRoomRes] NetMessageResponse myRoomRes\n     * @property {IInviteRequest|null} [inviteReq] NetMessageResponse inviteReq\n     * @property {IInviteResponse|null} [inviteRes] NetMessageResponse inviteRes\n     * @property {IKickOutResponse|null} [kickOutRes] NetMessageResponse kickOutRes\n     * @property {IRoomStartGameResponse|null} [roomStartGameRes] NetMessageResponse roomStartGameRes\n     * @property {INickNameSearchResponse|null} [nickNameSearchRes] NetMessageResponse nickNameSearchRes\n     * @property {IFollowListResponse|null} [followListRes] NetMessageResponse followListRes\n     * @property {IAddRoomRequest|null} [addRoomReq] NetMessageResponse addRoomReq\n     * @property {IAddRoomResponse|null} [addRoomRes] NetMessageResponse addRoomRes\n     * @property {IOutRoomResponse|null} [outRoomRes] NetMessageResponse outRoomRes\n     * @property {IChatResponse|null} [chatRes] NetMessageResponse chatRes\n     * @property {IUserStatusQueryResponse|null} [userStatusQueryRes] NetMessageResponse userStatusQueryRes\n     * @property {IStartMatchResponse|null} [startMatchRes] NetMessageResponse startMatchRes\n     * @property {IMatchResponse|null} [matchRes] NetMessageResponse matchRes\n     * @property {IAddLiveResponse|null} [addLiveRes] NetMessageResponse addLiveRes\n     * @property {IValidateOpenRoomResponse|null} [validateOpenRoomRes] NetMessageResponse validateOpenRoomRes\n     * @property {IStatusNotify|null} [statusNotify] NetMessageResponse statusNotify\n     */\n\n    /**\n     * Constructs a new NetMessageResponse.\n     * @exports NetMessageResponse\n     * @classdesc Represents a NetMessageResponse.\n     * @implements INetMessageResponse\n     * @constructor\n     * @param {INetMessageResponse=} [properties] Properties to set\n     */\n    function NetMessageResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * NetMessageResponse userRegister.\n     * @member {IUserRegisterResponse|null|undefined} userRegister\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.userRegister = null;\n\n    /**\n     * NetMessageResponse userLogin.\n     * @member {IUserLoginResponse|null|undefined} userLogin\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.userLogin = null;\n\n    /**\n     * NetMessageResponse characterDetail.\n     * @member {ICharacterDetailResponse|null|undefined} characterDetail\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.characterDetail = null;\n\n    /**\n     * NetMessageResponse updateNickName.\n     * @member {IUpdateNickNameResponse|null|undefined} updateNickName\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.updateNickName = null;\n\n    /**\n     * NetMessageResponse attrPromote.\n     * @member {IAttrPromoteInfoResponse|null|undefined} attrPromote\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.attrPromote = null;\n\n    /**\n     * NetMessageResponse combatPowerRanking.\n     * @member {ICombatPowerRankingResponse|null|undefined} combatPowerRanking\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.combatPowerRanking = null;\n\n    /**\n     * NetMessageResponse itemBuy.\n     * @member {IItemBuyResponse|null|undefined} itemBuy\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.itemBuy = null;\n\n    /**\n     * NetMessageResponse followRes.\n     * @member {IFollowResponse|null|undefined} followRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.followRes = null;\n\n    /**\n     * NetMessageResponse unLockRes.\n     * @member {IUnLockResponse|null|undefined} unLockRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.unLockRes = null;\n\n    /**\n     * NetMessageResponse switchCharacterRes.\n     * @member {ISwitchCharacterResponse|null|undefined} switchCharacterRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.switchCharacterRes = null;\n\n    /**\n     * NetMessageResponse bagHandleRes.\n     * @member {IBagHandleResponse|null|undefined} bagHandleRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.bagHandleRes = null;\n\n    /**\n     * NetMessageResponse userStatusChangeRes.\n     * @member {IUserStatusChangeResponse|null|undefined} userStatusChangeRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.userStatusChangeRes = null;\n\n    /**\n     * NetMessageResponse queryTranRes.\n     * @member {IQueryTranResponse|null|undefined} queryTranRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.queryTranRes = null;\n\n    /**\n     * NetMessageResponse buyTranRes.\n     * @member {IBuyTranResponse|null|undefined} buyTranRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.buyTranRes = null;\n\n    /**\n     * NetMessageResponse heartBeatRes.\n     * @member {IHeartBeatResponse|null|undefined} heartBeatRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.heartBeatRes = null;\n\n    /**\n     * NetMessageResponse offerPriceRes.\n     * @member {IOfferPriceResponse|null|undefined} offerPriceRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.offerPriceRes = null;\n\n    /**\n     * NetMessageResponse auctionRes.\n     * @member {IAuctionResponse|null|undefined} auctionRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.auctionRes = null;\n\n    /**\n     * NetMessageResponse getAuctionListRes.\n     * @member {IGetAuctionListResponse|null|undefined} getAuctionListRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.getAuctionListRes = null;\n\n    /**\n     * NetMessageResponse tipsRes.\n     * @member {ITipsResponse|null|undefined} tipsRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.tipsRes = null;\n\n    /**\n     * NetMessageResponse myRoomRes.\n     * @member {IMyRoomResponse|null|undefined} myRoomRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.myRoomRes = null;\n\n    /**\n     * NetMessageResponse inviteReq.\n     * @member {IInviteRequest|null|undefined} inviteReq\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.inviteReq = null;\n\n    /**\n     * NetMessageResponse inviteRes.\n     * @member {IInviteResponse|null|undefined} inviteRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.inviteRes = null;\n\n    /**\n     * NetMessageResponse kickOutRes.\n     * @member {IKickOutResponse|null|undefined} kickOutRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.kickOutRes = null;\n\n    /**\n     * NetMessageResponse roomStartGameRes.\n     * @member {IRoomStartGameResponse|null|undefined} roomStartGameRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.roomStartGameRes = null;\n\n    /**\n     * NetMessageResponse nickNameSearchRes.\n     * @member {INickNameSearchResponse|null|undefined} nickNameSearchRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.nickNameSearchRes = null;\n\n    /**\n     * NetMessageResponse followListRes.\n     * @member {IFollowListResponse|null|undefined} followListRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.followListRes = null;\n\n    /**\n     * NetMessageResponse addRoomReq.\n     * @member {IAddRoomRequest|null|undefined} addRoomReq\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.addRoomReq = null;\n\n    /**\n     * NetMessageResponse addRoomRes.\n     * @member {IAddRoomResponse|null|undefined} addRoomRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.addRoomRes = null;\n\n    /**\n     * NetMessageResponse outRoomRes.\n     * @member {IOutRoomResponse|null|undefined} outRoomRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.outRoomRes = null;\n\n    /**\n     * NetMessageResponse chatRes.\n     * @member {IChatResponse|null|undefined} chatRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.chatRes = null;\n\n    /**\n     * NetMessageResponse userStatusQueryRes.\n     * @member {IUserStatusQueryResponse|null|undefined} userStatusQueryRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.userStatusQueryRes = null;\n\n    /**\n     * NetMessageResponse startMatchRes.\n     * @member {IStartMatchResponse|null|undefined} startMatchRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.startMatchRes = null;\n\n    /**\n     * NetMessageResponse matchRes.\n     * @member {IMatchResponse|null|undefined} matchRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.matchRes = null;\n\n    /**\n     * NetMessageResponse addLiveRes.\n     * @member {IAddLiveResponse|null|undefined} addLiveRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.addLiveRes = null;\n\n    /**\n     * NetMessageResponse validateOpenRoomRes.\n     * @member {IValidateOpenRoomResponse|null|undefined} validateOpenRoomRes\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.validateOpenRoomRes = null;\n\n    /**\n     * NetMessageResponse statusNotify.\n     * @member {IStatusNotify|null|undefined} statusNotify\n     * @memberof NetMessageResponse\n     * @instance\n     */\n    NetMessageResponse.prototype.statusNotify = null;\n\n    /**\n     * Creates a new NetMessageResponse instance using the specified properties.\n     * @function create\n     * @memberof NetMessageResponse\n     * @static\n     * @param {INetMessageResponse=} [properties] Properties to set\n     * @returns {NetMessageResponse} NetMessageResponse instance\n     */\n    NetMessageResponse.create = function create(properties) {\n        return new NetMessageResponse(properties);\n    };\n\n    /**\n     * Encodes the specified NetMessageResponse message. Does not implicitly {@link NetMessageResponse.verify|verify} messages.\n     * @function encode\n     * @memberof NetMessageResponse\n     * @static\n     * @param {INetMessageResponse} message NetMessageResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NetMessageResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.userRegister != null && message.hasOwnProperty(\"userRegister\"))\n            $root.UserRegisterResponse.encode(message.userRegister, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.userLogin != null && message.hasOwnProperty(\"userLogin\"))\n            $root.UserLoginResponse.encode(message.userLogin, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.characterDetail != null && message.hasOwnProperty(\"characterDetail\"))\n            $root.CharacterDetailResponse.encode(message.characterDetail, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        if (message.updateNickName != null && message.hasOwnProperty(\"updateNickName\"))\n            $root.UpdateNickNameResponse.encode(message.updateNickName, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.attrPromote != null && message.hasOwnProperty(\"attrPromote\"))\n            $root.AttrPromoteInfoResponse.encode(message.attrPromote, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n        if (message.combatPowerRanking != null && message.hasOwnProperty(\"combatPowerRanking\"))\n            $root.CombatPowerRankingResponse.encode(message.combatPowerRanking, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n        if (message.itemBuy != null && message.hasOwnProperty(\"itemBuy\"))\n            $root.ItemBuyResponse.encode(message.itemBuy, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n        if (message.followRes != null && message.hasOwnProperty(\"followRes\"))\n            $root.FollowResponse.encode(message.followRes, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n        if (message.unLockRes != null && message.hasOwnProperty(\"unLockRes\"))\n            $root.UnLockResponse.encode(message.unLockRes, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n        if (message.switchCharacterRes != null && message.hasOwnProperty(\"switchCharacterRes\"))\n            $root.SwitchCharacterResponse.encode(message.switchCharacterRes, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n        if (message.bagHandleRes != null && message.hasOwnProperty(\"bagHandleRes\"))\n            $root.BagHandleResponse.encode(message.bagHandleRes, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n        if (message.userStatusChangeRes != null && message.hasOwnProperty(\"userStatusChangeRes\"))\n            $root.UserStatusChangeResponse.encode(message.userStatusChangeRes, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n        if (message.queryTranRes != null && message.hasOwnProperty(\"queryTranRes\"))\n            $root.QueryTranResponse.encode(message.queryTranRes, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n        if (message.buyTranRes != null && message.hasOwnProperty(\"buyTranRes\"))\n            $root.BuyTranResponse.encode(message.buyTranRes, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();\n        if (message.heartBeatRes != null && message.hasOwnProperty(\"heartBeatRes\"))\n            $root.HeartBeatResponse.encode(message.heartBeatRes, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();\n        if (message.offerPriceRes != null && message.hasOwnProperty(\"offerPriceRes\"))\n            $root.OfferPriceResponse.encode(message.offerPriceRes, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();\n        if (message.auctionRes != null && message.hasOwnProperty(\"auctionRes\"))\n            $root.AuctionResponse.encode(message.auctionRes, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();\n        if (message.getAuctionListRes != null && message.hasOwnProperty(\"getAuctionListRes\"))\n            $root.GetAuctionListResponse.encode(message.getAuctionListRes, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();\n        if (message.tipsRes != null && message.hasOwnProperty(\"tipsRes\"))\n            $root.TipsResponse.encode(message.tipsRes, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();\n        if (message.myRoomRes != null && message.hasOwnProperty(\"myRoomRes\"))\n            $root.MyRoomResponse.encode(message.myRoomRes, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();\n        if (message.inviteReq != null && message.hasOwnProperty(\"inviteReq\"))\n            $root.InviteRequest.encode(message.inviteReq, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();\n        if (message.inviteRes != null && message.hasOwnProperty(\"inviteRes\"))\n            $root.InviteResponse.encode(message.inviteRes, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();\n        if (message.kickOutRes != null && message.hasOwnProperty(\"kickOutRes\"))\n            $root.KickOutResponse.encode(message.kickOutRes, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();\n        if (message.roomStartGameRes != null && message.hasOwnProperty(\"roomStartGameRes\"))\n            $root.RoomStartGameResponse.encode(message.roomStartGameRes, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();\n        if (message.nickNameSearchRes != null && message.hasOwnProperty(\"nickNameSearchRes\"))\n            $root.NickNameSearchResponse.encode(message.nickNameSearchRes, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();\n        if (message.followListRes != null && message.hasOwnProperty(\"followListRes\"))\n            $root.FollowListResponse.encode(message.followListRes, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();\n        if (message.addRoomReq != null && message.hasOwnProperty(\"addRoomReq\"))\n            $root.AddRoomRequest.encode(message.addRoomReq, writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();\n        if (message.addRoomRes != null && message.hasOwnProperty(\"addRoomRes\"))\n            $root.AddRoomResponse.encode(message.addRoomRes, writer.uint32(/* id 29, wireType 2 =*/234).fork()).ldelim();\n        if (message.outRoomRes != null && message.hasOwnProperty(\"outRoomRes\"))\n            $root.OutRoomResponse.encode(message.outRoomRes, writer.uint32(/* id 30, wireType 2 =*/242).fork()).ldelim();\n        if (message.chatRes != null && message.hasOwnProperty(\"chatRes\"))\n            $root.ChatResponse.encode(message.chatRes, writer.uint32(/* id 31, wireType 2 =*/250).fork()).ldelim();\n        if (message.userStatusQueryRes != null && message.hasOwnProperty(\"userStatusQueryRes\"))\n            $root.UserStatusQueryResponse.encode(message.userStatusQueryRes, writer.uint32(/* id 32, wireType 2 =*/258).fork()).ldelim();\n        if (message.startMatchRes != null && message.hasOwnProperty(\"startMatchRes\"))\n            $root.StartMatchResponse.encode(message.startMatchRes, writer.uint32(/* id 33, wireType 2 =*/266).fork()).ldelim();\n        if (message.matchRes != null && message.hasOwnProperty(\"matchRes\"))\n            $root.MatchResponse.encode(message.matchRes, writer.uint32(/* id 34, wireType 2 =*/274).fork()).ldelim();\n        if (message.addLiveRes != null && message.hasOwnProperty(\"addLiveRes\"))\n            $root.AddLiveResponse.encode(message.addLiveRes, writer.uint32(/* id 35, wireType 2 =*/282).fork()).ldelim();\n        if (message.validateOpenRoomRes != null && message.hasOwnProperty(\"validateOpenRoomRes\"))\n            $root.ValidateOpenRoomResponse.encode(message.validateOpenRoomRes, writer.uint32(/* id 36, wireType 2 =*/290).fork()).ldelim();\n        if (message.statusNotify != null && message.hasOwnProperty(\"statusNotify\"))\n            $root.StatusNotify.encode(message.statusNotify, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified NetMessageResponse message, length delimited. Does not implicitly {@link NetMessageResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof NetMessageResponse\n     * @static\n     * @param {INetMessageResponse} message NetMessageResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NetMessageResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a NetMessageResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof NetMessageResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {NetMessageResponse} NetMessageResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NetMessageResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NetMessageResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.userRegister = $root.UserRegisterResponse.decode(reader, reader.uint32());\n                break;\n            case 2:\n                message.userLogin = $root.UserLoginResponse.decode(reader, reader.uint32());\n                break;\n            case 3:\n                message.characterDetail = $root.CharacterDetailResponse.decode(reader, reader.uint32());\n                break;\n            case 4:\n                message.updateNickName = $root.UpdateNickNameResponse.decode(reader, reader.uint32());\n                break;\n            case 5:\n                message.attrPromote = $root.AttrPromoteInfoResponse.decode(reader, reader.uint32());\n                break;\n            case 6:\n                message.combatPowerRanking = $root.CombatPowerRankingResponse.decode(reader, reader.uint32());\n                break;\n            case 7:\n                message.itemBuy = $root.ItemBuyResponse.decode(reader, reader.uint32());\n                break;\n            case 8:\n                message.followRes = $root.FollowResponse.decode(reader, reader.uint32());\n                break;\n            case 10:\n                message.unLockRes = $root.UnLockResponse.decode(reader, reader.uint32());\n                break;\n            case 11:\n                message.switchCharacterRes = $root.SwitchCharacterResponse.decode(reader, reader.uint32());\n                break;\n            case 12:\n                message.bagHandleRes = $root.BagHandleResponse.decode(reader, reader.uint32());\n                break;\n            case 13:\n                message.userStatusChangeRes = $root.UserStatusChangeResponse.decode(reader, reader.uint32());\n                break;\n            case 14:\n                message.queryTranRes = $root.QueryTranResponse.decode(reader, reader.uint32());\n                break;\n            case 15:\n                message.buyTranRes = $root.BuyTranResponse.decode(reader, reader.uint32());\n                break;\n            case 16:\n                message.heartBeatRes = $root.HeartBeatResponse.decode(reader, reader.uint32());\n                break;\n            case 17:\n                message.offerPriceRes = $root.OfferPriceResponse.decode(reader, reader.uint32());\n                break;\n            case 18:\n                message.auctionRes = $root.AuctionResponse.decode(reader, reader.uint32());\n                break;\n            case 19:\n                message.getAuctionListRes = $root.GetAuctionListResponse.decode(reader, reader.uint32());\n                break;\n            case 20:\n                message.tipsRes = $root.TipsResponse.decode(reader, reader.uint32());\n                break;\n            case 21:\n                message.myRoomRes = $root.MyRoomResponse.decode(reader, reader.uint32());\n                break;\n            case 22:\n                message.inviteReq = $root.InviteRequest.decode(reader, reader.uint32());\n                break;\n            case 23:\n                message.inviteRes = $root.InviteResponse.decode(reader, reader.uint32());\n                break;\n            case 24:\n                message.kickOutRes = $root.KickOutResponse.decode(reader, reader.uint32());\n                break;\n            case 25:\n                message.roomStartGameRes = $root.RoomStartGameResponse.decode(reader, reader.uint32());\n                break;\n            case 26:\n                message.nickNameSearchRes = $root.NickNameSearchResponse.decode(reader, reader.uint32());\n                break;\n            case 27:\n                message.followListRes = $root.FollowListResponse.decode(reader, reader.uint32());\n                break;\n            case 28:\n                message.addRoomReq = $root.AddRoomRequest.decode(reader, reader.uint32());\n                break;\n            case 29:\n                message.addRoomRes = $root.AddRoomResponse.decode(reader, reader.uint32());\n                break;\n            case 30:\n                message.outRoomRes = $root.OutRoomResponse.decode(reader, reader.uint32());\n                break;\n            case 31:\n                message.chatRes = $root.ChatResponse.decode(reader, reader.uint32());\n                break;\n            case 32:\n                message.userStatusQueryRes = $root.UserStatusQueryResponse.decode(reader, reader.uint32());\n                break;\n            case 33:\n                message.startMatchRes = $root.StartMatchResponse.decode(reader, reader.uint32());\n                break;\n            case 34:\n                message.matchRes = $root.MatchResponse.decode(reader, reader.uint32());\n                break;\n            case 35:\n                message.addLiveRes = $root.AddLiveResponse.decode(reader, reader.uint32());\n                break;\n            case 36:\n                message.validateOpenRoomRes = $root.ValidateOpenRoomResponse.decode(reader, reader.uint32());\n                break;\n            case 100:\n                message.statusNotify = $root.StatusNotify.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a NetMessageResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof NetMessageResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {NetMessageResponse} NetMessageResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NetMessageResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a NetMessageResponse message.\n     * @function verify\n     * @memberof NetMessageResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    NetMessageResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.userRegister != null && message.hasOwnProperty(\"userRegister\")) {\n            var error = $root.UserRegisterResponse.verify(message.userRegister);\n            if (error)\n                return \"userRegister.\" + error;\n        }\n        if (message.userLogin != null && message.hasOwnProperty(\"userLogin\")) {\n            var error = $root.UserLoginResponse.verify(message.userLogin);\n            if (error)\n                return \"userLogin.\" + error;\n        }\n        if (message.characterDetail != null && message.hasOwnProperty(\"characterDetail\")) {\n            var error = $root.CharacterDetailResponse.verify(message.characterDetail);\n            if (error)\n                return \"characterDetail.\" + error;\n        }\n        if (message.updateNickName != null && message.hasOwnProperty(\"updateNickName\")) {\n            var error = $root.UpdateNickNameResponse.verify(message.updateNickName);\n            if (error)\n                return \"updateNickName.\" + error;\n        }\n        if (message.attrPromote != null && message.hasOwnProperty(\"attrPromote\")) {\n            var error = $root.AttrPromoteInfoResponse.verify(message.attrPromote);\n            if (error)\n                return \"attrPromote.\" + error;\n        }\n        if (message.combatPowerRanking != null && message.hasOwnProperty(\"combatPowerRanking\")) {\n            var error = $root.CombatPowerRankingResponse.verify(message.combatPowerRanking);\n            if (error)\n                return \"combatPowerRanking.\" + error;\n        }\n        if (message.itemBuy != null && message.hasOwnProperty(\"itemBuy\")) {\n            var error = $root.ItemBuyResponse.verify(message.itemBuy);\n            if (error)\n                return \"itemBuy.\" + error;\n        }\n        if (message.followRes != null && message.hasOwnProperty(\"followRes\")) {\n            var error = $root.FollowResponse.verify(message.followRes);\n            if (error)\n                return \"followRes.\" + error;\n        }\n        if (message.unLockRes != null && message.hasOwnProperty(\"unLockRes\")) {\n            var error = $root.UnLockResponse.verify(message.unLockRes);\n            if (error)\n                return \"unLockRes.\" + error;\n        }\n        if (message.switchCharacterRes != null && message.hasOwnProperty(\"switchCharacterRes\")) {\n            var error = $root.SwitchCharacterResponse.verify(message.switchCharacterRes);\n            if (error)\n                return \"switchCharacterRes.\" + error;\n        }\n        if (message.bagHandleRes != null && message.hasOwnProperty(\"bagHandleRes\")) {\n            var error = $root.BagHandleResponse.verify(message.bagHandleRes);\n            if (error)\n                return \"bagHandleRes.\" + error;\n        }\n        if (message.userStatusChangeRes != null && message.hasOwnProperty(\"userStatusChangeRes\")) {\n            var error = $root.UserStatusChangeResponse.verify(message.userStatusChangeRes);\n            if (error)\n                return \"userStatusChangeRes.\" + error;\n        }\n        if (message.queryTranRes != null && message.hasOwnProperty(\"queryTranRes\")) {\n            var error = $root.QueryTranResponse.verify(message.queryTranRes);\n            if (error)\n                return \"queryTranRes.\" + error;\n        }\n        if (message.buyTranRes != null && message.hasOwnProperty(\"buyTranRes\")) {\n            var error = $root.BuyTranResponse.verify(message.buyTranRes);\n            if (error)\n                return \"buyTranRes.\" + error;\n        }\n        if (message.heartBeatRes != null && message.hasOwnProperty(\"heartBeatRes\")) {\n            var error = $root.HeartBeatResponse.verify(message.heartBeatRes);\n            if (error)\n                return \"heartBeatRes.\" + error;\n        }\n        if (message.offerPriceRes != null && message.hasOwnProperty(\"offerPriceRes\")) {\n            var error = $root.OfferPriceResponse.verify(message.offerPriceRes);\n            if (error)\n                return \"offerPriceRes.\" + error;\n        }\n        if (message.auctionRes != null && message.hasOwnProperty(\"auctionRes\")) {\n            var error = $root.AuctionResponse.verify(message.auctionRes);\n            if (error)\n                return \"auctionRes.\" + error;\n        }\n        if (message.getAuctionListRes != null && message.hasOwnProperty(\"getAuctionListRes\")) {\n            var error = $root.GetAuctionListResponse.verify(message.getAuctionListRes);\n            if (error)\n                return \"getAuctionListRes.\" + error;\n        }\n        if (message.tipsRes != null && message.hasOwnProperty(\"tipsRes\")) {\n            var error = $root.TipsResponse.verify(message.tipsRes);\n            if (error)\n                return \"tipsRes.\" + error;\n        }\n        if (message.myRoomRes != null && message.hasOwnProperty(\"myRoomRes\")) {\n            var error = $root.MyRoomResponse.verify(message.myRoomRes);\n            if (error)\n                return \"myRoomRes.\" + error;\n        }\n        if (message.inviteReq != null && message.hasOwnProperty(\"inviteReq\")) {\n            var error = $root.InviteRequest.verify(message.inviteReq);\n            if (error)\n                return \"inviteReq.\" + error;\n        }\n        if (message.inviteRes != null && message.hasOwnProperty(\"inviteRes\")) {\n            var error = $root.InviteResponse.verify(message.inviteRes);\n            if (error)\n                return \"inviteRes.\" + error;\n        }\n        if (message.kickOutRes != null && message.hasOwnProperty(\"kickOutRes\")) {\n            var error = $root.KickOutResponse.verify(message.kickOutRes);\n            if (error)\n                return \"kickOutRes.\" + error;\n        }\n        if (message.roomStartGameRes != null && message.hasOwnProperty(\"roomStartGameRes\")) {\n            var error = $root.RoomStartGameResponse.verify(message.roomStartGameRes);\n            if (error)\n                return \"roomStartGameRes.\" + error;\n        }\n        if (message.nickNameSearchRes != null && message.hasOwnProperty(\"nickNameSearchRes\")) {\n            var error = $root.NickNameSearchResponse.verify(message.nickNameSearchRes);\n            if (error)\n                return \"nickNameSearchRes.\" + error;\n        }\n        if (message.followListRes != null && message.hasOwnProperty(\"followListRes\")) {\n            var error = $root.FollowListResponse.verify(message.followListRes);\n            if (error)\n                return \"followListRes.\" + error;\n        }\n        if (message.addRoomReq != null && message.hasOwnProperty(\"addRoomReq\")) {\n            var error = $root.AddRoomRequest.verify(message.addRoomReq);\n            if (error)\n                return \"addRoomReq.\" + error;\n        }\n        if (message.addRoomRes != null && message.hasOwnProperty(\"addRoomRes\")) {\n            var error = $root.AddRoomResponse.verify(message.addRoomRes);\n            if (error)\n                return \"addRoomRes.\" + error;\n        }\n        if (message.outRoomRes != null && message.hasOwnProperty(\"outRoomRes\")) {\n            var error = $root.OutRoomResponse.verify(message.outRoomRes);\n            if (error)\n                return \"outRoomRes.\" + error;\n        }\n        if (message.chatRes != null && message.hasOwnProperty(\"chatRes\")) {\n            var error = $root.ChatResponse.verify(message.chatRes);\n            if (error)\n                return \"chatRes.\" + error;\n        }\n        if (message.userStatusQueryRes != null && message.hasOwnProperty(\"userStatusQueryRes\")) {\n            var error = $root.UserStatusQueryResponse.verify(message.userStatusQueryRes);\n            if (error)\n                return \"userStatusQueryRes.\" + error;\n        }\n        if (message.startMatchRes != null && message.hasOwnProperty(\"startMatchRes\")) {\n            var error = $root.StartMatchResponse.verify(message.startMatchRes);\n            if (error)\n                return \"startMatchRes.\" + error;\n        }\n        if (message.matchRes != null && message.hasOwnProperty(\"matchRes\")) {\n            var error = $root.MatchResponse.verify(message.matchRes);\n            if (error)\n                return \"matchRes.\" + error;\n        }\n        if (message.addLiveRes != null && message.hasOwnProperty(\"addLiveRes\")) {\n            var error = $root.AddLiveResponse.verify(message.addLiveRes);\n            if (error)\n                return \"addLiveRes.\" + error;\n        }\n        if (message.validateOpenRoomRes != null && message.hasOwnProperty(\"validateOpenRoomRes\")) {\n            var error = $root.ValidateOpenRoomResponse.verify(message.validateOpenRoomRes);\n            if (error)\n                return \"validateOpenRoomRes.\" + error;\n        }\n        if (message.statusNotify != null && message.hasOwnProperty(\"statusNotify\")) {\n            var error = $root.StatusNotify.verify(message.statusNotify);\n            if (error)\n                return \"statusNotify.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a NetMessageResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof NetMessageResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {NetMessageResponse} NetMessageResponse\n     */\n    NetMessageResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.NetMessageResponse)\n            return object;\n        var message = new $root.NetMessageResponse();\n        if (object.userRegister != null) {\n            if (typeof object.userRegister !== \"object\")\n                throw TypeError(\".NetMessageResponse.userRegister: object expected\");\n            message.userRegister = $root.UserRegisterResponse.fromObject(object.userRegister);\n        }\n        if (object.userLogin != null) {\n            if (typeof object.userLogin !== \"object\")\n                throw TypeError(\".NetMessageResponse.userLogin: object expected\");\n            message.userLogin = $root.UserLoginResponse.fromObject(object.userLogin);\n        }\n        if (object.characterDetail != null) {\n            if (typeof object.characterDetail !== \"object\")\n                throw TypeError(\".NetMessageResponse.characterDetail: object expected\");\n            message.characterDetail = $root.CharacterDetailResponse.fromObject(object.characterDetail);\n        }\n        if (object.updateNickName != null) {\n            if (typeof object.updateNickName !== \"object\")\n                throw TypeError(\".NetMessageResponse.updateNickName: object expected\");\n            message.updateNickName = $root.UpdateNickNameResponse.fromObject(object.updateNickName);\n        }\n        if (object.attrPromote != null) {\n            if (typeof object.attrPromote !== \"object\")\n                throw TypeError(\".NetMessageResponse.attrPromote: object expected\");\n            message.attrPromote = $root.AttrPromoteInfoResponse.fromObject(object.attrPromote);\n        }\n        if (object.combatPowerRanking != null) {\n            if (typeof object.combatPowerRanking !== \"object\")\n                throw TypeError(\".NetMessageResponse.combatPowerRanking: object expected\");\n            message.combatPowerRanking = $root.CombatPowerRankingResponse.fromObject(object.combatPowerRanking);\n        }\n        if (object.itemBuy != null) {\n            if (typeof object.itemBuy !== \"object\")\n                throw TypeError(\".NetMessageResponse.itemBuy: object expected\");\n            message.itemBuy = $root.ItemBuyResponse.fromObject(object.itemBuy);\n        }\n        if (object.followRes != null) {\n            if (typeof object.followRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.followRes: object expected\");\n            message.followRes = $root.FollowResponse.fromObject(object.followRes);\n        }\n        if (object.unLockRes != null) {\n            if (typeof object.unLockRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.unLockRes: object expected\");\n            message.unLockRes = $root.UnLockResponse.fromObject(object.unLockRes);\n        }\n        if (object.switchCharacterRes != null) {\n            if (typeof object.switchCharacterRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.switchCharacterRes: object expected\");\n            message.switchCharacterRes = $root.SwitchCharacterResponse.fromObject(object.switchCharacterRes);\n        }\n        if (object.bagHandleRes != null) {\n            if (typeof object.bagHandleRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.bagHandleRes: object expected\");\n            message.bagHandleRes = $root.BagHandleResponse.fromObject(object.bagHandleRes);\n        }\n        if (object.userStatusChangeRes != null) {\n            if (typeof object.userStatusChangeRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.userStatusChangeRes: object expected\");\n            message.userStatusChangeRes = $root.UserStatusChangeResponse.fromObject(object.userStatusChangeRes);\n        }\n        if (object.queryTranRes != null) {\n            if (typeof object.queryTranRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.queryTranRes: object expected\");\n            message.queryTranRes = $root.QueryTranResponse.fromObject(object.queryTranRes);\n        }\n        if (object.buyTranRes != null) {\n            if (typeof object.buyTranRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.buyTranRes: object expected\");\n            message.buyTranRes = $root.BuyTranResponse.fromObject(object.buyTranRes);\n        }\n        if (object.heartBeatRes != null) {\n            if (typeof object.heartBeatRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.heartBeatRes: object expected\");\n            message.heartBeatRes = $root.HeartBeatResponse.fromObject(object.heartBeatRes);\n        }\n        if (object.offerPriceRes != null) {\n            if (typeof object.offerPriceRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.offerPriceRes: object expected\");\n            message.offerPriceRes = $root.OfferPriceResponse.fromObject(object.offerPriceRes);\n        }\n        if (object.auctionRes != null) {\n            if (typeof object.auctionRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.auctionRes: object expected\");\n            message.auctionRes = $root.AuctionResponse.fromObject(object.auctionRes);\n        }\n        if (object.getAuctionListRes != null) {\n            if (typeof object.getAuctionListRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.getAuctionListRes: object expected\");\n            message.getAuctionListRes = $root.GetAuctionListResponse.fromObject(object.getAuctionListRes);\n        }\n        if (object.tipsRes != null) {\n            if (typeof object.tipsRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.tipsRes: object expected\");\n            message.tipsRes = $root.TipsResponse.fromObject(object.tipsRes);\n        }\n        if (object.myRoomRes != null) {\n            if (typeof object.myRoomRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.myRoomRes: object expected\");\n            message.myRoomRes = $root.MyRoomResponse.fromObject(object.myRoomRes);\n        }\n        if (object.inviteReq != null) {\n            if (typeof object.inviteReq !== \"object\")\n                throw TypeError(\".NetMessageResponse.inviteReq: object expected\");\n            message.inviteReq = $root.InviteRequest.fromObject(object.inviteReq);\n        }\n        if (object.inviteRes != null) {\n            if (typeof object.inviteRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.inviteRes: object expected\");\n            message.inviteRes = $root.InviteResponse.fromObject(object.inviteRes);\n        }\n        if (object.kickOutRes != null) {\n            if (typeof object.kickOutRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.kickOutRes: object expected\");\n            message.kickOutRes = $root.KickOutResponse.fromObject(object.kickOutRes);\n        }\n        if (object.roomStartGameRes != null) {\n            if (typeof object.roomStartGameRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.roomStartGameRes: object expected\");\n            message.roomStartGameRes = $root.RoomStartGameResponse.fromObject(object.roomStartGameRes);\n        }\n        if (object.nickNameSearchRes != null) {\n            if (typeof object.nickNameSearchRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.nickNameSearchRes: object expected\");\n            message.nickNameSearchRes = $root.NickNameSearchResponse.fromObject(object.nickNameSearchRes);\n        }\n        if (object.followListRes != null) {\n            if (typeof object.followListRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.followListRes: object expected\");\n            message.followListRes = $root.FollowListResponse.fromObject(object.followListRes);\n        }\n        if (object.addRoomReq != null) {\n            if (typeof object.addRoomReq !== \"object\")\n                throw TypeError(\".NetMessageResponse.addRoomReq: object expected\");\n            message.addRoomReq = $root.AddRoomRequest.fromObject(object.addRoomReq);\n        }\n        if (object.addRoomRes != null) {\n            if (typeof object.addRoomRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.addRoomRes: object expected\");\n            message.addRoomRes = $root.AddRoomResponse.fromObject(object.addRoomRes);\n        }\n        if (object.outRoomRes != null) {\n            if (typeof object.outRoomRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.outRoomRes: object expected\");\n            message.outRoomRes = $root.OutRoomResponse.fromObject(object.outRoomRes);\n        }\n        if (object.chatRes != null) {\n            if (typeof object.chatRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.chatRes: object expected\");\n            message.chatRes = $root.ChatResponse.fromObject(object.chatRes);\n        }\n        if (object.userStatusQueryRes != null) {\n            if (typeof object.userStatusQueryRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.userStatusQueryRes: object expected\");\n            message.userStatusQueryRes = $root.UserStatusQueryResponse.fromObject(object.userStatusQueryRes);\n        }\n        if (object.startMatchRes != null) {\n            if (typeof object.startMatchRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.startMatchRes: object expected\");\n            message.startMatchRes = $root.StartMatchResponse.fromObject(object.startMatchRes);\n        }\n        if (object.matchRes != null) {\n            if (typeof object.matchRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.matchRes: object expected\");\n            message.matchRes = $root.MatchResponse.fromObject(object.matchRes);\n        }\n        if (object.addLiveRes != null) {\n            if (typeof object.addLiveRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.addLiveRes: object expected\");\n            message.addLiveRes = $root.AddLiveResponse.fromObject(object.addLiveRes);\n        }\n        if (object.validateOpenRoomRes != null) {\n            if (typeof object.validateOpenRoomRes !== \"object\")\n                throw TypeError(\".NetMessageResponse.validateOpenRoomRes: object expected\");\n            message.validateOpenRoomRes = $root.ValidateOpenRoomResponse.fromObject(object.validateOpenRoomRes);\n        }\n        if (object.statusNotify != null) {\n            if (typeof object.statusNotify !== \"object\")\n                throw TypeError(\".NetMessageResponse.statusNotify: object expected\");\n            message.statusNotify = $root.StatusNotify.fromObject(object.statusNotify);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a NetMessageResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof NetMessageResponse\n     * @static\n     * @param {NetMessageResponse} message NetMessageResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    NetMessageResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.userRegister = null;\n            object.userLogin = null;\n            object.characterDetail = null;\n            object.updateNickName = null;\n            object.attrPromote = null;\n            object.combatPowerRanking = null;\n            object.itemBuy = null;\n            object.followRes = null;\n            object.unLockRes = null;\n            object.switchCharacterRes = null;\n            object.bagHandleRes = null;\n            object.userStatusChangeRes = null;\n            object.queryTranRes = null;\n            object.buyTranRes = null;\n            object.heartBeatRes = null;\n            object.offerPriceRes = null;\n            object.auctionRes = null;\n            object.getAuctionListRes = null;\n            object.tipsRes = null;\n            object.myRoomRes = null;\n            object.inviteReq = null;\n            object.inviteRes = null;\n            object.kickOutRes = null;\n            object.roomStartGameRes = null;\n            object.nickNameSearchRes = null;\n            object.followListRes = null;\n            object.addRoomReq = null;\n            object.addRoomRes = null;\n            object.outRoomRes = null;\n            object.chatRes = null;\n            object.userStatusQueryRes = null;\n            object.startMatchRes = null;\n            object.matchRes = null;\n            object.addLiveRes = null;\n            object.validateOpenRoomRes = null;\n            object.statusNotify = null;\n        }\n        if (message.userRegister != null && message.hasOwnProperty(\"userRegister\"))\n            object.userRegister = $root.UserRegisterResponse.toObject(message.userRegister, options);\n        if (message.userLogin != null && message.hasOwnProperty(\"userLogin\"))\n            object.userLogin = $root.UserLoginResponse.toObject(message.userLogin, options);\n        if (message.characterDetail != null && message.hasOwnProperty(\"characterDetail\"))\n            object.characterDetail = $root.CharacterDetailResponse.toObject(message.characterDetail, options);\n        if (message.updateNickName != null && message.hasOwnProperty(\"updateNickName\"))\n            object.updateNickName = $root.UpdateNickNameResponse.toObject(message.updateNickName, options);\n        if (message.attrPromote != null && message.hasOwnProperty(\"attrPromote\"))\n            object.attrPromote = $root.AttrPromoteInfoResponse.toObject(message.attrPromote, options);\n        if (message.combatPowerRanking != null && message.hasOwnProperty(\"combatPowerRanking\"))\n            object.combatPowerRanking = $root.CombatPowerRankingResponse.toObject(message.combatPowerRanking, options);\n        if (message.itemBuy != null && message.hasOwnProperty(\"itemBuy\"))\n            object.itemBuy = $root.ItemBuyResponse.toObject(message.itemBuy, options);\n        if (message.followRes != null && message.hasOwnProperty(\"followRes\"))\n            object.followRes = $root.FollowResponse.toObject(message.followRes, options);\n        if (message.unLockRes != null && message.hasOwnProperty(\"unLockRes\"))\n            object.unLockRes = $root.UnLockResponse.toObject(message.unLockRes, options);\n        if (message.switchCharacterRes != null && message.hasOwnProperty(\"switchCharacterRes\"))\n            object.switchCharacterRes = $root.SwitchCharacterResponse.toObject(message.switchCharacterRes, options);\n        if (message.bagHandleRes != null && message.hasOwnProperty(\"bagHandleRes\"))\n            object.bagHandleRes = $root.BagHandleResponse.toObject(message.bagHandleRes, options);\n        if (message.userStatusChangeRes != null && message.hasOwnProperty(\"userStatusChangeRes\"))\n            object.userStatusChangeRes = $root.UserStatusChangeResponse.toObject(message.userStatusChangeRes, options);\n        if (message.queryTranRes != null && message.hasOwnProperty(\"queryTranRes\"))\n            object.queryTranRes = $root.QueryTranResponse.toObject(message.queryTranRes, options);\n        if (message.buyTranRes != null && message.hasOwnProperty(\"buyTranRes\"))\n            object.buyTranRes = $root.BuyTranResponse.toObject(message.buyTranRes, options);\n        if (message.heartBeatRes != null && message.hasOwnProperty(\"heartBeatRes\"))\n            object.heartBeatRes = $root.HeartBeatResponse.toObject(message.heartBeatRes, options);\n        if (message.offerPriceRes != null && message.hasOwnProperty(\"offerPriceRes\"))\n            object.offerPriceRes = $root.OfferPriceResponse.toObject(message.offerPriceRes, options);\n        if (message.auctionRes != null && message.hasOwnProperty(\"auctionRes\"))\n            object.auctionRes = $root.AuctionResponse.toObject(message.auctionRes, options);\n        if (message.getAuctionListRes != null && message.hasOwnProperty(\"getAuctionListRes\"))\n            object.getAuctionListRes = $root.GetAuctionListResponse.toObject(message.getAuctionListRes, options);\n        if (message.tipsRes != null && message.hasOwnProperty(\"tipsRes\"))\n            object.tipsRes = $root.TipsResponse.toObject(message.tipsRes, options);\n        if (message.myRoomRes != null && message.hasOwnProperty(\"myRoomRes\"))\n            object.myRoomRes = $root.MyRoomResponse.toObject(message.myRoomRes, options);\n        if (message.inviteReq != null && message.hasOwnProperty(\"inviteReq\"))\n            object.inviteReq = $root.InviteRequest.toObject(message.inviteReq, options);\n        if (message.inviteRes != null && message.hasOwnProperty(\"inviteRes\"))\n            object.inviteRes = $root.InviteResponse.toObject(message.inviteRes, options);\n        if (message.kickOutRes != null && message.hasOwnProperty(\"kickOutRes\"))\n            object.kickOutRes = $root.KickOutResponse.toObject(message.kickOutRes, options);\n        if (message.roomStartGameRes != null && message.hasOwnProperty(\"roomStartGameRes\"))\n            object.roomStartGameRes = $root.RoomStartGameResponse.toObject(message.roomStartGameRes, options);\n        if (message.nickNameSearchRes != null && message.hasOwnProperty(\"nickNameSearchRes\"))\n            object.nickNameSearchRes = $root.NickNameSearchResponse.toObject(message.nickNameSearchRes, options);\n        if (message.followListRes != null && message.hasOwnProperty(\"followListRes\"))\n            object.followListRes = $root.FollowListResponse.toObject(message.followListRes, options);\n        if (message.addRoomReq != null && message.hasOwnProperty(\"addRoomReq\"))\n            object.addRoomReq = $root.AddRoomRequest.toObject(message.addRoomReq, options);\n        if (message.addRoomRes != null && message.hasOwnProperty(\"addRoomRes\"))\n            object.addRoomRes = $root.AddRoomResponse.toObject(message.addRoomRes, options);\n        if (message.outRoomRes != null && message.hasOwnProperty(\"outRoomRes\"))\n            object.outRoomRes = $root.OutRoomResponse.toObject(message.outRoomRes, options);\n        if (message.chatRes != null && message.hasOwnProperty(\"chatRes\"))\n            object.chatRes = $root.ChatResponse.toObject(message.chatRes, options);\n        if (message.userStatusQueryRes != null && message.hasOwnProperty(\"userStatusQueryRes\"))\n            object.userStatusQueryRes = $root.UserStatusQueryResponse.toObject(message.userStatusQueryRes, options);\n        if (message.startMatchRes != null && message.hasOwnProperty(\"startMatchRes\"))\n            object.startMatchRes = $root.StartMatchResponse.toObject(message.startMatchRes, options);\n        if (message.matchRes != null && message.hasOwnProperty(\"matchRes\"))\n            object.matchRes = $root.MatchResponse.toObject(message.matchRes, options);\n        if (message.addLiveRes != null && message.hasOwnProperty(\"addLiveRes\"))\n            object.addLiveRes = $root.AddLiveResponse.toObject(message.addLiveRes, options);\n        if (message.validateOpenRoomRes != null && message.hasOwnProperty(\"validateOpenRoomRes\"))\n            object.validateOpenRoomRes = $root.ValidateOpenRoomResponse.toObject(message.validateOpenRoomRes, options);\n        if (message.statusNotify != null && message.hasOwnProperty(\"statusNotify\"))\n            object.statusNotify = $root.StatusNotify.toObject(message.statusNotify, options);\n        return object;\n    };\n\n    /**\n     * Converts this NetMessageResponse to JSON.\n     * @function toJSON\n     * @memberof NetMessageResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    NetMessageResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return NetMessageResponse;\n})();\n\n$root.UserLoginRequest = (function() {\n\n    /**\n     * Properties of a UserLoginRequest.\n     * @exports IUserLoginRequest\n     * @interface IUserLoginRequest\n     * @property {string|null} [userName] UserLoginRequest userName\n     * @property {string|null} [passward] UserLoginRequest passward\n     */\n\n    /**\n     * Constructs a new UserLoginRequest.\n     * @exports UserLoginRequest\n     * @classdesc Represents a UserLoginRequest.\n     * @implements IUserLoginRequest\n     * @constructor\n     * @param {IUserLoginRequest=} [properties] Properties to set\n     */\n    function UserLoginRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * UserLoginRequest userName.\n     * @member {string} userName\n     * @memberof UserLoginRequest\n     * @instance\n     */\n    UserLoginRequest.prototype.userName = \"\";\n\n    /**\n     * UserLoginRequest passward.\n     * @member {string} passward\n     * @memberof UserLoginRequest\n     * @instance\n     */\n    UserLoginRequest.prototype.passward = \"\";\n\n    /**\n     * Creates a new UserLoginRequest instance using the specified properties.\n     * @function create\n     * @memberof UserLoginRequest\n     * @static\n     * @param {IUserLoginRequest=} [properties] Properties to set\n     * @returns {UserLoginRequest} UserLoginRequest instance\n     */\n    UserLoginRequest.create = function create(properties) {\n        return new UserLoginRequest(properties);\n    };\n\n    /**\n     * Encodes the specified UserLoginRequest message. Does not implicitly {@link UserLoginRequest.verify|verify} messages.\n     * @function encode\n     * @memberof UserLoginRequest\n     * @static\n     * @param {IUserLoginRequest} message UserLoginRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UserLoginRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.userName != null && message.hasOwnProperty(\"userName\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.userName);\n        if (message.passward != null && message.hasOwnProperty(\"passward\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.passward);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified UserLoginRequest message, length delimited. Does not implicitly {@link UserLoginRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof UserLoginRequest\n     * @static\n     * @param {IUserLoginRequest} message UserLoginRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UserLoginRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a UserLoginRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof UserLoginRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {UserLoginRequest} UserLoginRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UserLoginRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UserLoginRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.userName = reader.string();\n                break;\n            case 2:\n                message.passward = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a UserLoginRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof UserLoginRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {UserLoginRequest} UserLoginRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UserLoginRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a UserLoginRequest message.\n     * @function verify\n     * @memberof UserLoginRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    UserLoginRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.userName != null && message.hasOwnProperty(\"userName\"))\n            if (!$util.isString(message.userName))\n                return \"userName: string expected\";\n        if (message.passward != null && message.hasOwnProperty(\"passward\"))\n            if (!$util.isString(message.passward))\n                return \"passward: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a UserLoginRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UserLoginRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {UserLoginRequest} UserLoginRequest\n     */\n    UserLoginRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.UserLoginRequest)\n            return object;\n        var message = new $root.UserLoginRequest();\n        if (object.userName != null)\n            message.userName = String(object.userName);\n        if (object.passward != null)\n            message.passward = String(object.passward);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a UserLoginRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UserLoginRequest\n     * @static\n     * @param {UserLoginRequest} message UserLoginRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UserLoginRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.userName = \"\";\n            object.passward = \"\";\n        }\n        if (message.userName != null && message.hasOwnProperty(\"userName\"))\n            object.userName = message.userName;\n        if (message.passward != null && message.hasOwnProperty(\"passward\"))\n            object.passward = message.passward;\n        return object;\n    };\n\n    /**\n     * Converts this UserLoginRequest to JSON.\n     * @function toJSON\n     * @memberof UserLoginRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UserLoginRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UserLoginRequest;\n})();\n\n$root.UserLoginResponse = (function() {\n\n    /**\n     * Properties of a UserLoginResponse.\n     * @exports IUserLoginResponse\n     * @interface IUserLoginResponse\n     * @property {Result|null} [result] UserLoginResponse result\n     * @property {string|null} [errormsg] UserLoginResponse errormsg\n     * @property {INUser|null} [user] UserLoginResponse user\n     */\n\n    /**\n     * Constructs a new UserLoginResponse.\n     * @exports UserLoginResponse\n     * @classdesc Represents a UserLoginResponse.\n     * @implements IUserLoginResponse\n     * @constructor\n     * @param {IUserLoginResponse=} [properties] Properties to set\n     */\n    function UserLoginResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * UserLoginResponse result.\n     * @member {Result} result\n     * @memberof UserLoginResponse\n     * @instance\n     */\n    UserLoginResponse.prototype.result = 0;\n\n    /**\n     * UserLoginResponse errormsg.\n     * @member {string} errormsg\n     * @memberof UserLoginResponse\n     * @instance\n     */\n    UserLoginResponse.prototype.errormsg = \"\";\n\n    /**\n     * UserLoginResponse user.\n     * @member {INUser|null|undefined} user\n     * @memberof UserLoginResponse\n     * @instance\n     */\n    UserLoginResponse.prototype.user = null;\n\n    /**\n     * Creates a new UserLoginResponse instance using the specified properties.\n     * @function create\n     * @memberof UserLoginResponse\n     * @static\n     * @param {IUserLoginResponse=} [properties] Properties to set\n     * @returns {UserLoginResponse} UserLoginResponse instance\n     */\n    UserLoginResponse.create = function create(properties) {\n        return new UserLoginResponse(properties);\n    };\n\n    /**\n     * Encodes the specified UserLoginResponse message. Does not implicitly {@link UserLoginResponse.verify|verify} messages.\n     * @function encode\n     * @memberof UserLoginResponse\n     * @static\n     * @param {IUserLoginResponse} message UserLoginResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UserLoginResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        if (message.user != null && message.hasOwnProperty(\"user\"))\n            $root.NUser.encode(message.user, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified UserLoginResponse message, length delimited. Does not implicitly {@link UserLoginResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof UserLoginResponse\n     * @static\n     * @param {IUserLoginResponse} message UserLoginResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UserLoginResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a UserLoginResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof UserLoginResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {UserLoginResponse} UserLoginResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UserLoginResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UserLoginResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            case 3:\n                message.user = $root.NUser.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a UserLoginResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof UserLoginResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {UserLoginResponse} UserLoginResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UserLoginResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a UserLoginResponse message.\n     * @function verify\n     * @memberof UserLoginResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    UserLoginResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        if (message.user != null && message.hasOwnProperty(\"user\")) {\n            var error = $root.NUser.verify(message.user);\n            if (error)\n                return \"user.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a UserLoginResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UserLoginResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {UserLoginResponse} UserLoginResponse\n     */\n    UserLoginResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.UserLoginResponse)\n            return object;\n        var message = new $root.UserLoginResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        if (object.user != null) {\n            if (typeof object.user !== \"object\")\n                throw TypeError(\".UserLoginResponse.user: object expected\");\n            message.user = $root.NUser.fromObject(object.user);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a UserLoginResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UserLoginResponse\n     * @static\n     * @param {UserLoginResponse} message UserLoginResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UserLoginResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n            object.user = null;\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        if (message.user != null && message.hasOwnProperty(\"user\"))\n            object.user = $root.NUser.toObject(message.user, options);\n        return object;\n    };\n\n    /**\n     * Converts this UserLoginResponse to JSON.\n     * @function toJSON\n     * @memberof UserLoginResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UserLoginResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UserLoginResponse;\n})();\n\n$root.UserRegisterRequest = (function() {\n\n    /**\n     * Properties of a UserRegisterRequest.\n     * @exports IUserRegisterRequest\n     * @interface IUserRegisterRequest\n     * @property {string|null} [userName] UserRegisterRequest userName\n     * @property {string|null} [password] UserRegisterRequest password\n     */\n\n    /**\n     * Constructs a new UserRegisterRequest.\n     * @exports UserRegisterRequest\n     * @classdesc Represents a UserRegisterRequest.\n     * @implements IUserRegisterRequest\n     * @constructor\n     * @param {IUserRegisterRequest=} [properties] Properties to set\n     */\n    function UserRegisterRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * UserRegisterRequest userName.\n     * @member {string} userName\n     * @memberof UserRegisterRequest\n     * @instance\n     */\n    UserRegisterRequest.prototype.userName = \"\";\n\n    /**\n     * UserRegisterRequest password.\n     * @member {string} password\n     * @memberof UserRegisterRequest\n     * @instance\n     */\n    UserRegisterRequest.prototype.password = \"\";\n\n    /**\n     * Creates a new UserRegisterRequest instance using the specified properties.\n     * @function create\n     * @memberof UserRegisterRequest\n     * @static\n     * @param {IUserRegisterRequest=} [properties] Properties to set\n     * @returns {UserRegisterRequest} UserRegisterRequest instance\n     */\n    UserRegisterRequest.create = function create(properties) {\n        return new UserRegisterRequest(properties);\n    };\n\n    /**\n     * Encodes the specified UserRegisterRequest message. Does not implicitly {@link UserRegisterRequest.verify|verify} messages.\n     * @function encode\n     * @memberof UserRegisterRequest\n     * @static\n     * @param {IUserRegisterRequest} message UserRegisterRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UserRegisterRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.userName != null && message.hasOwnProperty(\"userName\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.userName);\n        if (message.password != null && message.hasOwnProperty(\"password\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.password);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified UserRegisterRequest message, length delimited. Does not implicitly {@link UserRegisterRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof UserRegisterRequest\n     * @static\n     * @param {IUserRegisterRequest} message UserRegisterRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UserRegisterRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a UserRegisterRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof UserRegisterRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {UserRegisterRequest} UserRegisterRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UserRegisterRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UserRegisterRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.userName = reader.string();\n                break;\n            case 2:\n                message.password = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a UserRegisterRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof UserRegisterRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {UserRegisterRequest} UserRegisterRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UserRegisterRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a UserRegisterRequest message.\n     * @function verify\n     * @memberof UserRegisterRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    UserRegisterRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.userName != null && message.hasOwnProperty(\"userName\"))\n            if (!$util.isString(message.userName))\n                return \"userName: string expected\";\n        if (message.password != null && message.hasOwnProperty(\"password\"))\n            if (!$util.isString(message.password))\n                return \"password: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a UserRegisterRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UserRegisterRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {UserRegisterRequest} UserRegisterRequest\n     */\n    UserRegisterRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.UserRegisterRequest)\n            return object;\n        var message = new $root.UserRegisterRequest();\n        if (object.userName != null)\n            message.userName = String(object.userName);\n        if (object.password != null)\n            message.password = String(object.password);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a UserRegisterRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UserRegisterRequest\n     * @static\n     * @param {UserRegisterRequest} message UserRegisterRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UserRegisterRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.userName = \"\";\n            object.password = \"\";\n        }\n        if (message.userName != null && message.hasOwnProperty(\"userName\"))\n            object.userName = message.userName;\n        if (message.password != null && message.hasOwnProperty(\"password\"))\n            object.password = message.password;\n        return object;\n    };\n\n    /**\n     * Converts this UserRegisterRequest to JSON.\n     * @function toJSON\n     * @memberof UserRegisterRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UserRegisterRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UserRegisterRequest;\n})();\n\n$root.UserRegisterResponse = (function() {\n\n    /**\n     * Properties of a UserRegisterResponse.\n     * @exports IUserRegisterResponse\n     * @interface IUserRegisterResponse\n     * @property {Result|null} [result] UserRegisterResponse result\n     * @property {string|null} [errormsg] UserRegisterResponse errormsg\n     */\n\n    /**\n     * Constructs a new UserRegisterResponse.\n     * @exports UserRegisterResponse\n     * @classdesc Represents a UserRegisterResponse.\n     * @implements IUserRegisterResponse\n     * @constructor\n     * @param {IUserRegisterResponse=} [properties] Properties to set\n     */\n    function UserRegisterResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * UserRegisterResponse result.\n     * @member {Result} result\n     * @memberof UserRegisterResponse\n     * @instance\n     */\n    UserRegisterResponse.prototype.result = 0;\n\n    /**\n     * UserRegisterResponse errormsg.\n     * @member {string} errormsg\n     * @memberof UserRegisterResponse\n     * @instance\n     */\n    UserRegisterResponse.prototype.errormsg = \"\";\n\n    /**\n     * Creates a new UserRegisterResponse instance using the specified properties.\n     * @function create\n     * @memberof UserRegisterResponse\n     * @static\n     * @param {IUserRegisterResponse=} [properties] Properties to set\n     * @returns {UserRegisterResponse} UserRegisterResponse instance\n     */\n    UserRegisterResponse.create = function create(properties) {\n        return new UserRegisterResponse(properties);\n    };\n\n    /**\n     * Encodes the specified UserRegisterResponse message. Does not implicitly {@link UserRegisterResponse.verify|verify} messages.\n     * @function encode\n     * @memberof UserRegisterResponse\n     * @static\n     * @param {IUserRegisterResponse} message UserRegisterResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UserRegisterResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified UserRegisterResponse message, length delimited. Does not implicitly {@link UserRegisterResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof UserRegisterResponse\n     * @static\n     * @param {IUserRegisterResponse} message UserRegisterResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UserRegisterResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a UserRegisterResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof UserRegisterResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {UserRegisterResponse} UserRegisterResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UserRegisterResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UserRegisterResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a UserRegisterResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof UserRegisterResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {UserRegisterResponse} UserRegisterResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UserRegisterResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a UserRegisterResponse message.\n     * @function verify\n     * @memberof UserRegisterResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    UserRegisterResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a UserRegisterResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UserRegisterResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {UserRegisterResponse} UserRegisterResponse\n     */\n    UserRegisterResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.UserRegisterResponse)\n            return object;\n        var message = new $root.UserRegisterResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a UserRegisterResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UserRegisterResponse\n     * @static\n     * @param {UserRegisterResponse} message UserRegisterResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UserRegisterResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        return object;\n    };\n\n    /**\n     * Converts this UserRegisterResponse to JSON.\n     * @function toJSON\n     * @memberof UserRegisterResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UserRegisterResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UserRegisterResponse;\n})();\n\n$root.CharacterDetailRequest = (function() {\n\n    /**\n     * Properties of a CharacterDetailRequest.\n     * @exports ICharacterDetailRequest\n     * @interface ICharacterDetailRequest\n     * @property {number|null} [userId] CharacterDetailRequest userId\n     * @property {number|null} [tCharacterId] CharacterDetailRequest tCharacterId\n     */\n\n    /**\n     * Constructs a new CharacterDetailRequest.\n     * @exports CharacterDetailRequest\n     * @classdesc Represents a CharacterDetailRequest.\n     * @implements ICharacterDetailRequest\n     * @constructor\n     * @param {ICharacterDetailRequest=} [properties] Properties to set\n     */\n    function CharacterDetailRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * CharacterDetailRequest userId.\n     * @member {number} userId\n     * @memberof CharacterDetailRequest\n     * @instance\n     */\n    CharacterDetailRequest.prototype.userId = 0;\n\n    /**\n     * CharacterDetailRequest tCharacterId.\n     * @member {number} tCharacterId\n     * @memberof CharacterDetailRequest\n     * @instance\n     */\n    CharacterDetailRequest.prototype.tCharacterId = 0;\n\n    /**\n     * Creates a new CharacterDetailRequest instance using the specified properties.\n     * @function create\n     * @memberof CharacterDetailRequest\n     * @static\n     * @param {ICharacterDetailRequest=} [properties] Properties to set\n     * @returns {CharacterDetailRequest} CharacterDetailRequest instance\n     */\n    CharacterDetailRequest.create = function create(properties) {\n        return new CharacterDetailRequest(properties);\n    };\n\n    /**\n     * Encodes the specified CharacterDetailRequest message. Does not implicitly {@link CharacterDetailRequest.verify|verify} messages.\n     * @function encode\n     * @memberof CharacterDetailRequest\n     * @static\n     * @param {ICharacterDetailRequest} message CharacterDetailRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    CharacterDetailRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.userId);\n        if (message.tCharacterId != null && message.hasOwnProperty(\"tCharacterId\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.tCharacterId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified CharacterDetailRequest message, length delimited. Does not implicitly {@link CharacterDetailRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof CharacterDetailRequest\n     * @static\n     * @param {ICharacterDetailRequest} message CharacterDetailRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    CharacterDetailRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a CharacterDetailRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof CharacterDetailRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {CharacterDetailRequest} CharacterDetailRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    CharacterDetailRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CharacterDetailRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.userId = reader.int32();\n                break;\n            case 2:\n                message.tCharacterId = reader.int32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a CharacterDetailRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof CharacterDetailRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {CharacterDetailRequest} CharacterDetailRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    CharacterDetailRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a CharacterDetailRequest message.\n     * @function verify\n     * @memberof CharacterDetailRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    CharacterDetailRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            if (!$util.isInteger(message.userId))\n                return \"userId: integer expected\";\n        if (message.tCharacterId != null && message.hasOwnProperty(\"tCharacterId\"))\n            if (!$util.isInteger(message.tCharacterId))\n                return \"tCharacterId: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a CharacterDetailRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof CharacterDetailRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {CharacterDetailRequest} CharacterDetailRequest\n     */\n    CharacterDetailRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.CharacterDetailRequest)\n            return object;\n        var message = new $root.CharacterDetailRequest();\n        if (object.userId != null)\n            message.userId = object.userId | 0;\n        if (object.tCharacterId != null)\n            message.tCharacterId = object.tCharacterId | 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a CharacterDetailRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof CharacterDetailRequest\n     * @static\n     * @param {CharacterDetailRequest} message CharacterDetailRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    CharacterDetailRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.userId = 0;\n            object.tCharacterId = 0;\n        }\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            object.userId = message.userId;\n        if (message.tCharacterId != null && message.hasOwnProperty(\"tCharacterId\"))\n            object.tCharacterId = message.tCharacterId;\n        return object;\n    };\n\n    /**\n     * Converts this CharacterDetailRequest to JSON.\n     * @function toJSON\n     * @memberof CharacterDetailRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    CharacterDetailRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return CharacterDetailRequest;\n})();\n\n$root.CharacterDetailResponse = (function() {\n\n    /**\n     * Properties of a CharacterDetailResponse.\n     * @exports ICharacterDetailResponse\n     * @interface ICharacterDetailResponse\n     * @property {Result|null} [result] CharacterDetailResponse result\n     * @property {string|null} [errormsg] CharacterDetailResponse errormsg\n     * @property {INUser|null} [user] CharacterDetailResponse user\n     */\n\n    /**\n     * Constructs a new CharacterDetailResponse.\n     * @exports CharacterDetailResponse\n     * @classdesc Represents a CharacterDetailResponse.\n     * @implements ICharacterDetailResponse\n     * @constructor\n     * @param {ICharacterDetailResponse=} [properties] Properties to set\n     */\n    function CharacterDetailResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * CharacterDetailResponse result.\n     * @member {Result} result\n     * @memberof CharacterDetailResponse\n     * @instance\n     */\n    CharacterDetailResponse.prototype.result = 0;\n\n    /**\n     * CharacterDetailResponse errormsg.\n     * @member {string} errormsg\n     * @memberof CharacterDetailResponse\n     * @instance\n     */\n    CharacterDetailResponse.prototype.errormsg = \"\";\n\n    /**\n     * CharacterDetailResponse user.\n     * @member {INUser|null|undefined} user\n     * @memberof CharacterDetailResponse\n     * @instance\n     */\n    CharacterDetailResponse.prototype.user = null;\n\n    /**\n     * Creates a new CharacterDetailResponse instance using the specified properties.\n     * @function create\n     * @memberof CharacterDetailResponse\n     * @static\n     * @param {ICharacterDetailResponse=} [properties] Properties to set\n     * @returns {CharacterDetailResponse} CharacterDetailResponse instance\n     */\n    CharacterDetailResponse.create = function create(properties) {\n        return new CharacterDetailResponse(properties);\n    };\n\n    /**\n     * Encodes the specified CharacterDetailResponse message. Does not implicitly {@link CharacterDetailResponse.verify|verify} messages.\n     * @function encode\n     * @memberof CharacterDetailResponse\n     * @static\n     * @param {ICharacterDetailResponse} message CharacterDetailResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    CharacterDetailResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        if (message.user != null && message.hasOwnProperty(\"user\"))\n            $root.NUser.encode(message.user, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified CharacterDetailResponse message, length delimited. Does not implicitly {@link CharacterDetailResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof CharacterDetailResponse\n     * @static\n     * @param {ICharacterDetailResponse} message CharacterDetailResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    CharacterDetailResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a CharacterDetailResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof CharacterDetailResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {CharacterDetailResponse} CharacterDetailResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    CharacterDetailResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CharacterDetailResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            case 3:\n                message.user = $root.NUser.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a CharacterDetailResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof CharacterDetailResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {CharacterDetailResponse} CharacterDetailResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    CharacterDetailResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a CharacterDetailResponse message.\n     * @function verify\n     * @memberof CharacterDetailResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    CharacterDetailResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        if (message.user != null && message.hasOwnProperty(\"user\")) {\n            var error = $root.NUser.verify(message.user);\n            if (error)\n                return \"user.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a CharacterDetailResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof CharacterDetailResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {CharacterDetailResponse} CharacterDetailResponse\n     */\n    CharacterDetailResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.CharacterDetailResponse)\n            return object;\n        var message = new $root.CharacterDetailResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        if (object.user != null) {\n            if (typeof object.user !== \"object\")\n                throw TypeError(\".CharacterDetailResponse.user: object expected\");\n            message.user = $root.NUser.fromObject(object.user);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a CharacterDetailResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof CharacterDetailResponse\n     * @static\n     * @param {CharacterDetailResponse} message CharacterDetailResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    CharacterDetailResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n            object.user = null;\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        if (message.user != null && message.hasOwnProperty(\"user\"))\n            object.user = $root.NUser.toObject(message.user, options);\n        return object;\n    };\n\n    /**\n     * Converts this CharacterDetailResponse to JSON.\n     * @function toJSON\n     * @memberof CharacterDetailResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    CharacterDetailResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return CharacterDetailResponse;\n})();\n\n$root.UpdateNickNameRequest = (function() {\n\n    /**\n     * Properties of an UpdateNickNameRequest.\n     * @exports IUpdateNickNameRequest\n     * @interface IUpdateNickNameRequest\n     * @property {string|null} [nickname] UpdateNickNameRequest nickname\n     */\n\n    /**\n     * Constructs a new UpdateNickNameRequest.\n     * @exports UpdateNickNameRequest\n     * @classdesc Represents an UpdateNickNameRequest.\n     * @implements IUpdateNickNameRequest\n     * @constructor\n     * @param {IUpdateNickNameRequest=} [properties] Properties to set\n     */\n    function UpdateNickNameRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * UpdateNickNameRequest nickname.\n     * @member {string} nickname\n     * @memberof UpdateNickNameRequest\n     * @instance\n     */\n    UpdateNickNameRequest.prototype.nickname = \"\";\n\n    /**\n     * Creates a new UpdateNickNameRequest instance using the specified properties.\n     * @function create\n     * @memberof UpdateNickNameRequest\n     * @static\n     * @param {IUpdateNickNameRequest=} [properties] Properties to set\n     * @returns {UpdateNickNameRequest} UpdateNickNameRequest instance\n     */\n    UpdateNickNameRequest.create = function create(properties) {\n        return new UpdateNickNameRequest(properties);\n    };\n\n    /**\n     * Encodes the specified UpdateNickNameRequest message. Does not implicitly {@link UpdateNickNameRequest.verify|verify} messages.\n     * @function encode\n     * @memberof UpdateNickNameRequest\n     * @static\n     * @param {IUpdateNickNameRequest} message UpdateNickNameRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UpdateNickNameRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.nickname != null && message.hasOwnProperty(\"nickname\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.nickname);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified UpdateNickNameRequest message, length delimited. Does not implicitly {@link UpdateNickNameRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof UpdateNickNameRequest\n     * @static\n     * @param {IUpdateNickNameRequest} message UpdateNickNameRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UpdateNickNameRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an UpdateNickNameRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof UpdateNickNameRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {UpdateNickNameRequest} UpdateNickNameRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UpdateNickNameRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UpdateNickNameRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.nickname = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an UpdateNickNameRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof UpdateNickNameRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {UpdateNickNameRequest} UpdateNickNameRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UpdateNickNameRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an UpdateNickNameRequest message.\n     * @function verify\n     * @memberof UpdateNickNameRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    UpdateNickNameRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.nickname != null && message.hasOwnProperty(\"nickname\"))\n            if (!$util.isString(message.nickname))\n                return \"nickname: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates an UpdateNickNameRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UpdateNickNameRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {UpdateNickNameRequest} UpdateNickNameRequest\n     */\n    UpdateNickNameRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.UpdateNickNameRequest)\n            return object;\n        var message = new $root.UpdateNickNameRequest();\n        if (object.nickname != null)\n            message.nickname = String(object.nickname);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an UpdateNickNameRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UpdateNickNameRequest\n     * @static\n     * @param {UpdateNickNameRequest} message UpdateNickNameRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UpdateNickNameRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.nickname = \"\";\n        if (message.nickname != null && message.hasOwnProperty(\"nickname\"))\n            object.nickname = message.nickname;\n        return object;\n    };\n\n    /**\n     * Converts this UpdateNickNameRequest to JSON.\n     * @function toJSON\n     * @memberof UpdateNickNameRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UpdateNickNameRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UpdateNickNameRequest;\n})();\n\n$root.UpdateNickNameResponse = (function() {\n\n    /**\n     * Properties of an UpdateNickNameResponse.\n     * @exports IUpdateNickNameResponse\n     * @interface IUpdateNickNameResponse\n     * @property {Result|null} [result] UpdateNickNameResponse result\n     * @property {string|null} [errormsg] UpdateNickNameResponse errormsg\n     */\n\n    /**\n     * Constructs a new UpdateNickNameResponse.\n     * @exports UpdateNickNameResponse\n     * @classdesc Represents an UpdateNickNameResponse.\n     * @implements IUpdateNickNameResponse\n     * @constructor\n     * @param {IUpdateNickNameResponse=} [properties] Properties to set\n     */\n    function UpdateNickNameResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * UpdateNickNameResponse result.\n     * @member {Result} result\n     * @memberof UpdateNickNameResponse\n     * @instance\n     */\n    UpdateNickNameResponse.prototype.result = 0;\n\n    /**\n     * UpdateNickNameResponse errormsg.\n     * @member {string} errormsg\n     * @memberof UpdateNickNameResponse\n     * @instance\n     */\n    UpdateNickNameResponse.prototype.errormsg = \"\";\n\n    /**\n     * Creates a new UpdateNickNameResponse instance using the specified properties.\n     * @function create\n     * @memberof UpdateNickNameResponse\n     * @static\n     * @param {IUpdateNickNameResponse=} [properties] Properties to set\n     * @returns {UpdateNickNameResponse} UpdateNickNameResponse instance\n     */\n    UpdateNickNameResponse.create = function create(properties) {\n        return new UpdateNickNameResponse(properties);\n    };\n\n    /**\n     * Encodes the specified UpdateNickNameResponse message. Does not implicitly {@link UpdateNickNameResponse.verify|verify} messages.\n     * @function encode\n     * @memberof UpdateNickNameResponse\n     * @static\n     * @param {IUpdateNickNameResponse} message UpdateNickNameResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UpdateNickNameResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified UpdateNickNameResponse message, length delimited. Does not implicitly {@link UpdateNickNameResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof UpdateNickNameResponse\n     * @static\n     * @param {IUpdateNickNameResponse} message UpdateNickNameResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UpdateNickNameResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an UpdateNickNameResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof UpdateNickNameResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {UpdateNickNameResponse} UpdateNickNameResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UpdateNickNameResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UpdateNickNameResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an UpdateNickNameResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof UpdateNickNameResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {UpdateNickNameResponse} UpdateNickNameResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UpdateNickNameResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an UpdateNickNameResponse message.\n     * @function verify\n     * @memberof UpdateNickNameResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    UpdateNickNameResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates an UpdateNickNameResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UpdateNickNameResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {UpdateNickNameResponse} UpdateNickNameResponse\n     */\n    UpdateNickNameResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.UpdateNickNameResponse)\n            return object;\n        var message = new $root.UpdateNickNameResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an UpdateNickNameResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UpdateNickNameResponse\n     * @static\n     * @param {UpdateNickNameResponse} message UpdateNickNameResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UpdateNickNameResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        return object;\n    };\n\n    /**\n     * Converts this UpdateNickNameResponse to JSON.\n     * @function toJSON\n     * @memberof UpdateNickNameResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UpdateNickNameResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UpdateNickNameResponse;\n})();\n\n$root.AttrPromoteInfoResponse = (function() {\n\n    /**\n     * Properties of an AttrPromoteInfoResponse.\n     * @exports IAttrPromoteInfoResponse\n     * @interface IAttrPromoteInfoResponse\n     * @property {Result|null} [result] AttrPromoteInfoResponse result\n     * @property {string|null} [errormsg] AttrPromoteInfoResponse errormsg\n     * @property {number|null} [spot] AttrPromoteInfoResponse spot\n     * @property {number|null} [attrValue] AttrPromoteInfoResponse attrValue\n     */\n\n    /**\n     * Constructs a new AttrPromoteInfoResponse.\n     * @exports AttrPromoteInfoResponse\n     * @classdesc Represents an AttrPromoteInfoResponse.\n     * @implements IAttrPromoteInfoResponse\n     * @constructor\n     * @param {IAttrPromoteInfoResponse=} [properties] Properties to set\n     */\n    function AttrPromoteInfoResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * AttrPromoteInfoResponse result.\n     * @member {Result} result\n     * @memberof AttrPromoteInfoResponse\n     * @instance\n     */\n    AttrPromoteInfoResponse.prototype.result = 0;\n\n    /**\n     * AttrPromoteInfoResponse errormsg.\n     * @member {string} errormsg\n     * @memberof AttrPromoteInfoResponse\n     * @instance\n     */\n    AttrPromoteInfoResponse.prototype.errormsg = \"\";\n\n    /**\n     * AttrPromoteInfoResponse spot.\n     * @member {number} spot\n     * @memberof AttrPromoteInfoResponse\n     * @instance\n     */\n    AttrPromoteInfoResponse.prototype.spot = 0;\n\n    /**\n     * AttrPromoteInfoResponse attrValue.\n     * @member {number} attrValue\n     * @memberof AttrPromoteInfoResponse\n     * @instance\n     */\n    AttrPromoteInfoResponse.prototype.attrValue = 0;\n\n    /**\n     * Creates a new AttrPromoteInfoResponse instance using the specified properties.\n     * @function create\n     * @memberof AttrPromoteInfoResponse\n     * @static\n     * @param {IAttrPromoteInfoResponse=} [properties] Properties to set\n     * @returns {AttrPromoteInfoResponse} AttrPromoteInfoResponse instance\n     */\n    AttrPromoteInfoResponse.create = function create(properties) {\n        return new AttrPromoteInfoResponse(properties);\n    };\n\n    /**\n     * Encodes the specified AttrPromoteInfoResponse message. Does not implicitly {@link AttrPromoteInfoResponse.verify|verify} messages.\n     * @function encode\n     * @memberof AttrPromoteInfoResponse\n     * @static\n     * @param {IAttrPromoteInfoResponse} message AttrPromoteInfoResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AttrPromoteInfoResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        if (message.spot != null && message.hasOwnProperty(\"spot\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.spot);\n        if (message.attrValue != null && message.hasOwnProperty(\"attrValue\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.attrValue);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified AttrPromoteInfoResponse message, length delimited. Does not implicitly {@link AttrPromoteInfoResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof AttrPromoteInfoResponse\n     * @static\n     * @param {IAttrPromoteInfoResponse} message AttrPromoteInfoResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AttrPromoteInfoResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an AttrPromoteInfoResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof AttrPromoteInfoResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {AttrPromoteInfoResponse} AttrPromoteInfoResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AttrPromoteInfoResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.AttrPromoteInfoResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            case 3:\n                message.spot = reader.int32();\n                break;\n            case 4:\n                message.attrValue = reader.int32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an AttrPromoteInfoResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof AttrPromoteInfoResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {AttrPromoteInfoResponse} AttrPromoteInfoResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AttrPromoteInfoResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an AttrPromoteInfoResponse message.\n     * @function verify\n     * @memberof AttrPromoteInfoResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    AttrPromoteInfoResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        if (message.spot != null && message.hasOwnProperty(\"spot\"))\n            if (!$util.isInteger(message.spot))\n                return \"spot: integer expected\";\n        if (message.attrValue != null && message.hasOwnProperty(\"attrValue\"))\n            if (!$util.isInteger(message.attrValue))\n                return \"attrValue: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates an AttrPromoteInfoResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof AttrPromoteInfoResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {AttrPromoteInfoResponse} AttrPromoteInfoResponse\n     */\n    AttrPromoteInfoResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.AttrPromoteInfoResponse)\n            return object;\n        var message = new $root.AttrPromoteInfoResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        if (object.spot != null)\n            message.spot = object.spot | 0;\n        if (object.attrValue != null)\n            message.attrValue = object.attrValue | 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an AttrPromoteInfoResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof AttrPromoteInfoResponse\n     * @static\n     * @param {AttrPromoteInfoResponse} message AttrPromoteInfoResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    AttrPromoteInfoResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n            object.spot = 0;\n            object.attrValue = 0;\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        if (message.spot != null && message.hasOwnProperty(\"spot\"))\n            object.spot = message.spot;\n        if (message.attrValue != null && message.hasOwnProperty(\"attrValue\"))\n            object.attrValue = message.attrValue;\n        return object;\n    };\n\n    /**\n     * Converts this AttrPromoteInfoResponse to JSON.\n     * @function toJSON\n     * @memberof AttrPromoteInfoResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    AttrPromoteInfoResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return AttrPromoteInfoResponse;\n})();\n\n$root.AttrPromoteRequest = (function() {\n\n    /**\n     * Properties of an AttrPromoteRequest.\n     * @exports IAttrPromoteRequest\n     * @interface IAttrPromoteRequest\n     * @property {number|null} [tCharacterId] AttrPromoteRequest tCharacterId\n     * @property {AttrPromoteType|null} [attrPromoteType] AttrPromoteRequest attrPromoteType\n     */\n\n    /**\n     * Constructs a new AttrPromoteRequest.\n     * @exports AttrPromoteRequest\n     * @classdesc Represents an AttrPromoteRequest.\n     * @implements IAttrPromoteRequest\n     * @constructor\n     * @param {IAttrPromoteRequest=} [properties] Properties to set\n     */\n    function AttrPromoteRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * AttrPromoteRequest tCharacterId.\n     * @member {number} tCharacterId\n     * @memberof AttrPromoteRequest\n     * @instance\n     */\n    AttrPromoteRequest.prototype.tCharacterId = 0;\n\n    /**\n     * AttrPromoteRequest attrPromoteType.\n     * @member {AttrPromoteType} attrPromoteType\n     * @memberof AttrPromoteRequest\n     * @instance\n     */\n    AttrPromoteRequest.prototype.attrPromoteType = 0;\n\n    /**\n     * Creates a new AttrPromoteRequest instance using the specified properties.\n     * @function create\n     * @memberof AttrPromoteRequest\n     * @static\n     * @param {IAttrPromoteRequest=} [properties] Properties to set\n     * @returns {AttrPromoteRequest} AttrPromoteRequest instance\n     */\n    AttrPromoteRequest.create = function create(properties) {\n        return new AttrPromoteRequest(properties);\n    };\n\n    /**\n     * Encodes the specified AttrPromoteRequest message. Does not implicitly {@link AttrPromoteRequest.verify|verify} messages.\n     * @function encode\n     * @memberof AttrPromoteRequest\n     * @static\n     * @param {IAttrPromoteRequest} message AttrPromoteRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AttrPromoteRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.tCharacterId != null && message.hasOwnProperty(\"tCharacterId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.tCharacterId);\n        if (message.attrPromoteType != null && message.hasOwnProperty(\"attrPromoteType\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.attrPromoteType);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified AttrPromoteRequest message, length delimited. Does not implicitly {@link AttrPromoteRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof AttrPromoteRequest\n     * @static\n     * @param {IAttrPromoteRequest} message AttrPromoteRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AttrPromoteRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an AttrPromoteRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof AttrPromoteRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {AttrPromoteRequest} AttrPromoteRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AttrPromoteRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.AttrPromoteRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.tCharacterId = reader.int32();\n                break;\n            case 2:\n                message.attrPromoteType = reader.int32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an AttrPromoteRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof AttrPromoteRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {AttrPromoteRequest} AttrPromoteRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AttrPromoteRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an AttrPromoteRequest message.\n     * @function verify\n     * @memberof AttrPromoteRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    AttrPromoteRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.tCharacterId != null && message.hasOwnProperty(\"tCharacterId\"))\n            if (!$util.isInteger(message.tCharacterId))\n                return \"tCharacterId: integer expected\";\n        if (message.attrPromoteType != null && message.hasOwnProperty(\"attrPromoteType\"))\n            switch (message.attrPromoteType) {\n            default:\n                return \"attrPromoteType: enum value expected\";\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n                break;\n            }\n        return null;\n    };\n\n    /**\n     * Creates an AttrPromoteRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof AttrPromoteRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {AttrPromoteRequest} AttrPromoteRequest\n     */\n    AttrPromoteRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.AttrPromoteRequest)\n            return object;\n        var message = new $root.AttrPromoteRequest();\n        if (object.tCharacterId != null)\n            message.tCharacterId = object.tCharacterId | 0;\n        switch (object.attrPromoteType) {\n        case \"Att\":\n        case 0:\n            message.attrPromoteType = 0;\n            break;\n        case \"Def\":\n        case 1:\n            message.attrPromoteType = 1;\n            break;\n        case \"Hp\":\n        case 2:\n            message.attrPromoteType = 2;\n            break;\n        case \"Cri\":\n        case 3:\n            message.attrPromoteType = 3;\n            break;\n        case \"Resu\":\n        case 4:\n            message.attrPromoteType = 4;\n            break;\n        case \"Speed\":\n        case 5:\n            message.attrPromoteType = 5;\n            break;\n        case \"Cd\":\n        case 6:\n            message.attrPromoteType = 6;\n            break;\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an AttrPromoteRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof AttrPromoteRequest\n     * @static\n     * @param {AttrPromoteRequest} message AttrPromoteRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    AttrPromoteRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.tCharacterId = 0;\n            object.attrPromoteType = options.enums === String ? \"Att\" : 0;\n        }\n        if (message.tCharacterId != null && message.hasOwnProperty(\"tCharacterId\"))\n            object.tCharacterId = message.tCharacterId;\n        if (message.attrPromoteType != null && message.hasOwnProperty(\"attrPromoteType\"))\n            object.attrPromoteType = options.enums === String ? $root.AttrPromoteType[message.attrPromoteType] : message.attrPromoteType;\n        return object;\n    };\n\n    /**\n     * Converts this AttrPromoteRequest to JSON.\n     * @function toJSON\n     * @memberof AttrPromoteRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    AttrPromoteRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return AttrPromoteRequest;\n})();\n\n/**\n * AttrPromoteType enum.\n * @exports AttrPromoteType\n * @enum {string}\n * @property {number} Att=0 Att value\n * @property {number} Def=1 Def value\n * @property {number} Hp=2 Hp value\n * @property {number} Cri=3 Cri value\n * @property {number} Resu=4 Resu value\n * @property {number} Speed=5 Speed value\n * @property {number} Cd=6 Cd value\n */\n$root.AttrPromoteType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = \"Att\"] = 0;\n    values[valuesById[1] = \"Def\"] = 1;\n    values[valuesById[2] = \"Hp\"] = 2;\n    values[valuesById[3] = \"Cri\"] = 3;\n    values[valuesById[4] = \"Resu\"] = 4;\n    values[valuesById[5] = \"Speed\"] = 5;\n    values[valuesById[6] = \"Cd\"] = 6;\n    return values;\n})();\n\n$root.CombatPowerRankingRequest = (function() {\n\n    /**\n     * Properties of a CombatPowerRankingRequest.\n     * @exports ICombatPowerRankingRequest\n     * @interface ICombatPowerRankingRequest\n     */\n\n    /**\n     * Constructs a new CombatPowerRankingRequest.\n     * @exports CombatPowerRankingRequest\n     * @classdesc Represents a CombatPowerRankingRequest.\n     * @implements ICombatPowerRankingRequest\n     * @constructor\n     * @param {ICombatPowerRankingRequest=} [properties] Properties to set\n     */\n    function CombatPowerRankingRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new CombatPowerRankingRequest instance using the specified properties.\n     * @function create\n     * @memberof CombatPowerRankingRequest\n     * @static\n     * @param {ICombatPowerRankingRequest=} [properties] Properties to set\n     * @returns {CombatPowerRankingRequest} CombatPowerRankingRequest instance\n     */\n    CombatPowerRankingRequest.create = function create(properties) {\n        return new CombatPowerRankingRequest(properties);\n    };\n\n    /**\n     * Encodes the specified CombatPowerRankingRequest message. Does not implicitly {@link CombatPowerRankingRequest.verify|verify} messages.\n     * @function encode\n     * @memberof CombatPowerRankingRequest\n     * @static\n     * @param {ICombatPowerRankingRequest} message CombatPowerRankingRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    CombatPowerRankingRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified CombatPowerRankingRequest message, length delimited. Does not implicitly {@link CombatPowerRankingRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof CombatPowerRankingRequest\n     * @static\n     * @param {ICombatPowerRankingRequest} message CombatPowerRankingRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    CombatPowerRankingRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a CombatPowerRankingRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof CombatPowerRankingRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {CombatPowerRankingRequest} CombatPowerRankingRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    CombatPowerRankingRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CombatPowerRankingRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a CombatPowerRankingRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof CombatPowerRankingRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {CombatPowerRankingRequest} CombatPowerRankingRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    CombatPowerRankingRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a CombatPowerRankingRequest message.\n     * @function verify\n     * @memberof CombatPowerRankingRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    CombatPowerRankingRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a CombatPowerRankingRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof CombatPowerRankingRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {CombatPowerRankingRequest} CombatPowerRankingRequest\n     */\n    CombatPowerRankingRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.CombatPowerRankingRequest)\n            return object;\n        return new $root.CombatPowerRankingRequest();\n    };\n\n    /**\n     * Creates a plain object from a CombatPowerRankingRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof CombatPowerRankingRequest\n     * @static\n     * @param {CombatPowerRankingRequest} message CombatPowerRankingRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    CombatPowerRankingRequest.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this CombatPowerRankingRequest to JSON.\n     * @function toJSON\n     * @memberof CombatPowerRankingRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    CombatPowerRankingRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return CombatPowerRankingRequest;\n})();\n\n$root.CombatPowerRankingResponse = (function() {\n\n    /**\n     * Properties of a CombatPowerRankingResponse.\n     * @exports ICombatPowerRankingResponse\n     * @interface ICombatPowerRankingResponse\n     * @property {Array.<INUser>|null} [users] CombatPowerRankingResponse users\n     * @property {number|null} [myRanking] CombatPowerRankingResponse myRanking\n     */\n\n    /**\n     * Constructs a new CombatPowerRankingResponse.\n     * @exports CombatPowerRankingResponse\n     * @classdesc Represents a CombatPowerRankingResponse.\n     * @implements ICombatPowerRankingResponse\n     * @constructor\n     * @param {ICombatPowerRankingResponse=} [properties] Properties to set\n     */\n    function CombatPowerRankingResponse(properties) {\n        this.users = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * CombatPowerRankingResponse users.\n     * @member {Array.<INUser>} users\n     * @memberof CombatPowerRankingResponse\n     * @instance\n     */\n    CombatPowerRankingResponse.prototype.users = $util.emptyArray;\n\n    /**\n     * CombatPowerRankingResponse myRanking.\n     * @member {number} myRanking\n     * @memberof CombatPowerRankingResponse\n     * @instance\n     */\n    CombatPowerRankingResponse.prototype.myRanking = 0;\n\n    /**\n     * Creates a new CombatPowerRankingResponse instance using the specified properties.\n     * @function create\n     * @memberof CombatPowerRankingResponse\n     * @static\n     * @param {ICombatPowerRankingResponse=} [properties] Properties to set\n     * @returns {CombatPowerRankingResponse} CombatPowerRankingResponse instance\n     */\n    CombatPowerRankingResponse.create = function create(properties) {\n        return new CombatPowerRankingResponse(properties);\n    };\n\n    /**\n     * Encodes the specified CombatPowerRankingResponse message. Does not implicitly {@link CombatPowerRankingResponse.verify|verify} messages.\n     * @function encode\n     * @memberof CombatPowerRankingResponse\n     * @static\n     * @param {ICombatPowerRankingResponse} message CombatPowerRankingResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    CombatPowerRankingResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.users != null && message.users.length)\n            for (var i = 0; i < message.users.length; ++i)\n                $root.NUser.encode(message.users[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.myRanking != null && message.hasOwnProperty(\"myRanking\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.myRanking);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified CombatPowerRankingResponse message, length delimited. Does not implicitly {@link CombatPowerRankingResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof CombatPowerRankingResponse\n     * @static\n     * @param {ICombatPowerRankingResponse} message CombatPowerRankingResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    CombatPowerRankingResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a CombatPowerRankingResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof CombatPowerRankingResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {CombatPowerRankingResponse} CombatPowerRankingResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    CombatPowerRankingResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CombatPowerRankingResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.users && message.users.length))\n                    message.users = [];\n                message.users.push($root.NUser.decode(reader, reader.uint32()));\n                break;\n            case 2:\n                message.myRanking = reader.int32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a CombatPowerRankingResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof CombatPowerRankingResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {CombatPowerRankingResponse} CombatPowerRankingResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    CombatPowerRankingResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a CombatPowerRankingResponse message.\n     * @function verify\n     * @memberof CombatPowerRankingResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    CombatPowerRankingResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.users != null && message.hasOwnProperty(\"users\")) {\n            if (!Array.isArray(message.users))\n                return \"users: array expected\";\n            for (var i = 0; i < message.users.length; ++i) {\n                var error = $root.NUser.verify(message.users[i]);\n                if (error)\n                    return \"users.\" + error;\n            }\n        }\n        if (message.myRanking != null && message.hasOwnProperty(\"myRanking\"))\n            if (!$util.isInteger(message.myRanking))\n                return \"myRanking: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a CombatPowerRankingResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof CombatPowerRankingResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {CombatPowerRankingResponse} CombatPowerRankingResponse\n     */\n    CombatPowerRankingResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.CombatPowerRankingResponse)\n            return object;\n        var message = new $root.CombatPowerRankingResponse();\n        if (object.users) {\n            if (!Array.isArray(object.users))\n                throw TypeError(\".CombatPowerRankingResponse.users: array expected\");\n            message.users = [];\n            for (var i = 0; i < object.users.length; ++i) {\n                if (typeof object.users[i] !== \"object\")\n                    throw TypeError(\".CombatPowerRankingResponse.users: object expected\");\n                message.users[i] = $root.NUser.fromObject(object.users[i]);\n            }\n        }\n        if (object.myRanking != null)\n            message.myRanking = object.myRanking | 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a CombatPowerRankingResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof CombatPowerRankingResponse\n     * @static\n     * @param {CombatPowerRankingResponse} message CombatPowerRankingResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    CombatPowerRankingResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.users = [];\n        if (options.defaults)\n            object.myRanking = 0;\n        if (message.users && message.users.length) {\n            object.users = [];\n            for (var j = 0; j < message.users.length; ++j)\n                object.users[j] = $root.NUser.toObject(message.users[j], options);\n        }\n        if (message.myRanking != null && message.hasOwnProperty(\"myRanking\"))\n            object.myRanking = message.myRanking;\n        return object;\n    };\n\n    /**\n     * Converts this CombatPowerRankingResponse to JSON.\n     * @function toJSON\n     * @memberof CombatPowerRankingResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    CombatPowerRankingResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return CombatPowerRankingResponse;\n})();\n\n$root.ItemBuyRequest = (function() {\n\n    /**\n     * Properties of an ItemBuyRequest.\n     * @exports IItemBuyRequest\n     * @interface IItemBuyRequest\n     * @property {number|null} [shopId] ItemBuyRequest shopId\n     * @property {number|null} [itemId] ItemBuyRequest itemId\n     * @property {number|null} [count] ItemBuyRequest count\n     */\n\n    /**\n     * Constructs a new ItemBuyRequest.\n     * @exports ItemBuyRequest\n     * @classdesc Represents an ItemBuyRequest.\n     * @implements IItemBuyRequest\n     * @constructor\n     * @param {IItemBuyRequest=} [properties] Properties to set\n     */\n    function ItemBuyRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ItemBuyRequest shopId.\n     * @member {number} shopId\n     * @memberof ItemBuyRequest\n     * @instance\n     */\n    ItemBuyRequest.prototype.shopId = 0;\n\n    /**\n     * ItemBuyRequest itemId.\n     * @member {number} itemId\n     * @memberof ItemBuyRequest\n     * @instance\n     */\n    ItemBuyRequest.prototype.itemId = 0;\n\n    /**\n     * ItemBuyRequest count.\n     * @member {number} count\n     * @memberof ItemBuyRequest\n     * @instance\n     */\n    ItemBuyRequest.prototype.count = 0;\n\n    /**\n     * Creates a new ItemBuyRequest instance using the specified properties.\n     * @function create\n     * @memberof ItemBuyRequest\n     * @static\n     * @param {IItemBuyRequest=} [properties] Properties to set\n     * @returns {ItemBuyRequest} ItemBuyRequest instance\n     */\n    ItemBuyRequest.create = function create(properties) {\n        return new ItemBuyRequest(properties);\n    };\n\n    /**\n     * Encodes the specified ItemBuyRequest message. Does not implicitly {@link ItemBuyRequest.verify|verify} messages.\n     * @function encode\n     * @memberof ItemBuyRequest\n     * @static\n     * @param {IItemBuyRequest} message ItemBuyRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ItemBuyRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.shopId != null && message.hasOwnProperty(\"shopId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.shopId);\n        if (message.itemId != null && message.hasOwnProperty(\"itemId\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.itemId);\n        if (message.count != null && message.hasOwnProperty(\"count\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.count);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ItemBuyRequest message, length delimited. Does not implicitly {@link ItemBuyRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ItemBuyRequest\n     * @static\n     * @param {IItemBuyRequest} message ItemBuyRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ItemBuyRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an ItemBuyRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof ItemBuyRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ItemBuyRequest} ItemBuyRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ItemBuyRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ItemBuyRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.shopId = reader.int32();\n                break;\n            case 2:\n                message.itemId = reader.int32();\n                break;\n            case 3:\n                message.count = reader.int32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an ItemBuyRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ItemBuyRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ItemBuyRequest} ItemBuyRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ItemBuyRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an ItemBuyRequest message.\n     * @function verify\n     * @memberof ItemBuyRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ItemBuyRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.shopId != null && message.hasOwnProperty(\"shopId\"))\n            if (!$util.isInteger(message.shopId))\n                return \"shopId: integer expected\";\n        if (message.itemId != null && message.hasOwnProperty(\"itemId\"))\n            if (!$util.isInteger(message.itemId))\n                return \"itemId: integer expected\";\n        if (message.count != null && message.hasOwnProperty(\"count\"))\n            if (!$util.isInteger(message.count))\n                return \"count: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates an ItemBuyRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ItemBuyRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ItemBuyRequest} ItemBuyRequest\n     */\n    ItemBuyRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.ItemBuyRequest)\n            return object;\n        var message = new $root.ItemBuyRequest();\n        if (object.shopId != null)\n            message.shopId = object.shopId | 0;\n        if (object.itemId != null)\n            message.itemId = object.itemId | 0;\n        if (object.count != null)\n            message.count = object.count | 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an ItemBuyRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ItemBuyRequest\n     * @static\n     * @param {ItemBuyRequest} message ItemBuyRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ItemBuyRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.shopId = 0;\n            object.itemId = 0;\n            object.count = 0;\n        }\n        if (message.shopId != null && message.hasOwnProperty(\"shopId\"))\n            object.shopId = message.shopId;\n        if (message.itemId != null && message.hasOwnProperty(\"itemId\"))\n            object.itemId = message.itemId;\n        if (message.count != null && message.hasOwnProperty(\"count\"))\n            object.count = message.count;\n        return object;\n    };\n\n    /**\n     * Converts this ItemBuyRequest to JSON.\n     * @function toJSON\n     * @memberof ItemBuyRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ItemBuyRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ItemBuyRequest;\n})();\n\n$root.ItemBuyResponse = (function() {\n\n    /**\n     * Properties of an ItemBuyResponse.\n     * @exports IItemBuyResponse\n     * @interface IItemBuyResponse\n     * @property {Result|null} [result] ItemBuyResponse result\n     * @property {string|null} [errormsg] ItemBuyResponse errormsg\n     */\n\n    /**\n     * Constructs a new ItemBuyResponse.\n     * @exports ItemBuyResponse\n     * @classdesc Represents an ItemBuyResponse.\n     * @implements IItemBuyResponse\n     * @constructor\n     * @param {IItemBuyResponse=} [properties] Properties to set\n     */\n    function ItemBuyResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ItemBuyResponse result.\n     * @member {Result} result\n     * @memberof ItemBuyResponse\n     * @instance\n     */\n    ItemBuyResponse.prototype.result = 0;\n\n    /**\n     * ItemBuyResponse errormsg.\n     * @member {string} errormsg\n     * @memberof ItemBuyResponse\n     * @instance\n     */\n    ItemBuyResponse.prototype.errormsg = \"\";\n\n    /**\n     * Creates a new ItemBuyResponse instance using the specified properties.\n     * @function create\n     * @memberof ItemBuyResponse\n     * @static\n     * @param {IItemBuyResponse=} [properties] Properties to set\n     * @returns {ItemBuyResponse} ItemBuyResponse instance\n     */\n    ItemBuyResponse.create = function create(properties) {\n        return new ItemBuyResponse(properties);\n    };\n\n    /**\n     * Encodes the specified ItemBuyResponse message. Does not implicitly {@link ItemBuyResponse.verify|verify} messages.\n     * @function encode\n     * @memberof ItemBuyResponse\n     * @static\n     * @param {IItemBuyResponse} message ItemBuyResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ItemBuyResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ItemBuyResponse message, length delimited. Does not implicitly {@link ItemBuyResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ItemBuyResponse\n     * @static\n     * @param {IItemBuyResponse} message ItemBuyResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ItemBuyResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an ItemBuyResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof ItemBuyResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ItemBuyResponse} ItemBuyResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ItemBuyResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ItemBuyResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an ItemBuyResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ItemBuyResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ItemBuyResponse} ItemBuyResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ItemBuyResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an ItemBuyResponse message.\n     * @function verify\n     * @memberof ItemBuyResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ItemBuyResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates an ItemBuyResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ItemBuyResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ItemBuyResponse} ItemBuyResponse\n     */\n    ItemBuyResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.ItemBuyResponse)\n            return object;\n        var message = new $root.ItemBuyResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an ItemBuyResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ItemBuyResponse\n     * @static\n     * @param {ItemBuyResponse} message ItemBuyResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ItemBuyResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        return object;\n    };\n\n    /**\n     * Converts this ItemBuyResponse to JSON.\n     * @function toJSON\n     * @memberof ItemBuyResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ItemBuyResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ItemBuyResponse;\n})();\n\n$root.FollowRequest = (function() {\n\n    /**\n     * Properties of a FollowRequest.\n     * @exports IFollowRequest\n     * @interface IFollowRequest\n     * @property {number|null} [userId] FollowRequest userId\n     * @property {boolean|null} [isFollow] FollowRequest isFollow\n     */\n\n    /**\n     * Constructs a new FollowRequest.\n     * @exports FollowRequest\n     * @classdesc Represents a FollowRequest.\n     * @implements IFollowRequest\n     * @constructor\n     * @param {IFollowRequest=} [properties] Properties to set\n     */\n    function FollowRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * FollowRequest userId.\n     * @member {number} userId\n     * @memberof FollowRequest\n     * @instance\n     */\n    FollowRequest.prototype.userId = 0;\n\n    /**\n     * FollowRequest isFollow.\n     * @member {boolean} isFollow\n     * @memberof FollowRequest\n     * @instance\n     */\n    FollowRequest.prototype.isFollow = false;\n\n    /**\n     * Creates a new FollowRequest instance using the specified properties.\n     * @function create\n     * @memberof FollowRequest\n     * @static\n     * @param {IFollowRequest=} [properties] Properties to set\n     * @returns {FollowRequest} FollowRequest instance\n     */\n    FollowRequest.create = function create(properties) {\n        return new FollowRequest(properties);\n    };\n\n    /**\n     * Encodes the specified FollowRequest message. Does not implicitly {@link FollowRequest.verify|verify} messages.\n     * @function encode\n     * @memberof FollowRequest\n     * @static\n     * @param {IFollowRequest} message FollowRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    FollowRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.userId);\n        if (message.isFollow != null && message.hasOwnProperty(\"isFollow\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isFollow);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified FollowRequest message, length delimited. Does not implicitly {@link FollowRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof FollowRequest\n     * @static\n     * @param {IFollowRequest} message FollowRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    FollowRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a FollowRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof FollowRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {FollowRequest} FollowRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    FollowRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.FollowRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.userId = reader.int32();\n                break;\n            case 2:\n                message.isFollow = reader.bool();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a FollowRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof FollowRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {FollowRequest} FollowRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    FollowRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a FollowRequest message.\n     * @function verify\n     * @memberof FollowRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    FollowRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            if (!$util.isInteger(message.userId))\n                return \"userId: integer expected\";\n        if (message.isFollow != null && message.hasOwnProperty(\"isFollow\"))\n            if (typeof message.isFollow !== \"boolean\")\n                return \"isFollow: boolean expected\";\n        return null;\n    };\n\n    /**\n     * Creates a FollowRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof FollowRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {FollowRequest} FollowRequest\n     */\n    FollowRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.FollowRequest)\n            return object;\n        var message = new $root.FollowRequest();\n        if (object.userId != null)\n            message.userId = object.userId | 0;\n        if (object.isFollow != null)\n            message.isFollow = Boolean(object.isFollow);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a FollowRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof FollowRequest\n     * @static\n     * @param {FollowRequest} message FollowRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    FollowRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.userId = 0;\n            object.isFollow = false;\n        }\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            object.userId = message.userId;\n        if (message.isFollow != null && message.hasOwnProperty(\"isFollow\"))\n            object.isFollow = message.isFollow;\n        return object;\n    };\n\n    /**\n     * Converts this FollowRequest to JSON.\n     * @function toJSON\n     * @memberof FollowRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    FollowRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return FollowRequest;\n})();\n\n$root.FollowResponse = (function() {\n\n    /**\n     * Properties of a FollowResponse.\n     * @exports IFollowResponse\n     * @interface IFollowResponse\n     * @property {Result|null} [result] FollowResponse result\n     * @property {string|null} [errormsg] FollowResponse errormsg\n     */\n\n    /**\n     * Constructs a new FollowResponse.\n     * @exports FollowResponse\n     * @classdesc Represents a FollowResponse.\n     * @implements IFollowResponse\n     * @constructor\n     * @param {IFollowResponse=} [properties] Properties to set\n     */\n    function FollowResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * FollowResponse result.\n     * @member {Result} result\n     * @memberof FollowResponse\n     * @instance\n     */\n    FollowResponse.prototype.result = 0;\n\n    /**\n     * FollowResponse errormsg.\n     * @member {string} errormsg\n     * @memberof FollowResponse\n     * @instance\n     */\n    FollowResponse.prototype.errormsg = \"\";\n\n    /**\n     * Creates a new FollowResponse instance using the specified properties.\n     * @function create\n     * @memberof FollowResponse\n     * @static\n     * @param {IFollowResponse=} [properties] Properties to set\n     * @returns {FollowResponse} FollowResponse instance\n     */\n    FollowResponse.create = function create(properties) {\n        return new FollowResponse(properties);\n    };\n\n    /**\n     * Encodes the specified FollowResponse message. Does not implicitly {@link FollowResponse.verify|verify} messages.\n     * @function encode\n     * @memberof FollowResponse\n     * @static\n     * @param {IFollowResponse} message FollowResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    FollowResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified FollowResponse message, length delimited. Does not implicitly {@link FollowResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof FollowResponse\n     * @static\n     * @param {IFollowResponse} message FollowResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    FollowResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a FollowResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof FollowResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {FollowResponse} FollowResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    FollowResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.FollowResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a FollowResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof FollowResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {FollowResponse} FollowResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    FollowResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a FollowResponse message.\n     * @function verify\n     * @memberof FollowResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    FollowResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a FollowResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof FollowResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {FollowResponse} FollowResponse\n     */\n    FollowResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.FollowResponse)\n            return object;\n        var message = new $root.FollowResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a FollowResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof FollowResponse\n     * @static\n     * @param {FollowResponse} message FollowResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    FollowResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        return object;\n    };\n\n    /**\n     * Converts this FollowResponse to JSON.\n     * @function toJSON\n     * @memberof FollowResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    FollowResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return FollowResponse;\n})();\n\n$root.UnLockRequest = (function() {\n\n    /**\n     * Properties of an UnLockRequest.\n     * @exports IUnLockRequest\n     * @interface IUnLockRequest\n     * @property {number|null} [cCharacterId] UnLockRequest cCharacterId\n     */\n\n    /**\n     * Constructs a new UnLockRequest.\n     * @exports UnLockRequest\n     * @classdesc Represents an UnLockRequest.\n     * @implements IUnLockRequest\n     * @constructor\n     * @param {IUnLockRequest=} [properties] Properties to set\n     */\n    function UnLockRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * UnLockRequest cCharacterId.\n     * @member {number} cCharacterId\n     * @memberof UnLockRequest\n     * @instance\n     */\n    UnLockRequest.prototype.cCharacterId = 0;\n\n    /**\n     * Creates a new UnLockRequest instance using the specified properties.\n     * @function create\n     * @memberof UnLockRequest\n     * @static\n     * @param {IUnLockRequest=} [properties] Properties to set\n     * @returns {UnLockRequest} UnLockRequest instance\n     */\n    UnLockRequest.create = function create(properties) {\n        return new UnLockRequest(properties);\n    };\n\n    /**\n     * Encodes the specified UnLockRequest message. Does not implicitly {@link UnLockRequest.verify|verify} messages.\n     * @function encode\n     * @memberof UnLockRequest\n     * @static\n     * @param {IUnLockRequest} message UnLockRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UnLockRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.cCharacterId != null && message.hasOwnProperty(\"cCharacterId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.cCharacterId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified UnLockRequest message, length delimited. Does not implicitly {@link UnLockRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof UnLockRequest\n     * @static\n     * @param {IUnLockRequest} message UnLockRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UnLockRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an UnLockRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof UnLockRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {UnLockRequest} UnLockRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UnLockRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UnLockRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.cCharacterId = reader.int32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an UnLockRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof UnLockRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {UnLockRequest} UnLockRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UnLockRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an UnLockRequest message.\n     * @function verify\n     * @memberof UnLockRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    UnLockRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.cCharacterId != null && message.hasOwnProperty(\"cCharacterId\"))\n            if (!$util.isInteger(message.cCharacterId))\n                return \"cCharacterId: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates an UnLockRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UnLockRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {UnLockRequest} UnLockRequest\n     */\n    UnLockRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.UnLockRequest)\n            return object;\n        var message = new $root.UnLockRequest();\n        if (object.cCharacterId != null)\n            message.cCharacterId = object.cCharacterId | 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an UnLockRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UnLockRequest\n     * @static\n     * @param {UnLockRequest} message UnLockRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UnLockRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.cCharacterId = 0;\n        if (message.cCharacterId != null && message.hasOwnProperty(\"cCharacterId\"))\n            object.cCharacterId = message.cCharacterId;\n        return object;\n    };\n\n    /**\n     * Converts this UnLockRequest to JSON.\n     * @function toJSON\n     * @memberof UnLockRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UnLockRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UnLockRequest;\n})();\n\n$root.UnLockResponse = (function() {\n\n    /**\n     * Properties of an UnLockResponse.\n     * @exports IUnLockResponse\n     * @interface IUnLockResponse\n     * @property {Result|null} [result] UnLockResponse result\n     * @property {string|null} [errormsg] UnLockResponse errormsg\n     * @property {IUnLockCharacter|null} [unLockCharacter] UnLockResponse unLockCharacter\n     */\n\n    /**\n     * Constructs a new UnLockResponse.\n     * @exports UnLockResponse\n     * @classdesc Represents an UnLockResponse.\n     * @implements IUnLockResponse\n     * @constructor\n     * @param {IUnLockResponse=} [properties] Properties to set\n     */\n    function UnLockResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * UnLockResponse result.\n     * @member {Result} result\n     * @memberof UnLockResponse\n     * @instance\n     */\n    UnLockResponse.prototype.result = 0;\n\n    /**\n     * UnLockResponse errormsg.\n     * @member {string} errormsg\n     * @memberof UnLockResponse\n     * @instance\n     */\n    UnLockResponse.prototype.errormsg = \"\";\n\n    /**\n     * UnLockResponse unLockCharacter.\n     * @member {IUnLockCharacter|null|undefined} unLockCharacter\n     * @memberof UnLockResponse\n     * @instance\n     */\n    UnLockResponse.prototype.unLockCharacter = null;\n\n    /**\n     * Creates a new UnLockResponse instance using the specified properties.\n     * @function create\n     * @memberof UnLockResponse\n     * @static\n     * @param {IUnLockResponse=} [properties] Properties to set\n     * @returns {UnLockResponse} UnLockResponse instance\n     */\n    UnLockResponse.create = function create(properties) {\n        return new UnLockResponse(properties);\n    };\n\n    /**\n     * Encodes the specified UnLockResponse message. Does not implicitly {@link UnLockResponse.verify|verify} messages.\n     * @function encode\n     * @memberof UnLockResponse\n     * @static\n     * @param {IUnLockResponse} message UnLockResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UnLockResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        if (message.unLockCharacter != null && message.hasOwnProperty(\"unLockCharacter\"))\n            $root.UnLockCharacter.encode(message.unLockCharacter, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified UnLockResponse message, length delimited. Does not implicitly {@link UnLockResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof UnLockResponse\n     * @static\n     * @param {IUnLockResponse} message UnLockResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UnLockResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an UnLockResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof UnLockResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {UnLockResponse} UnLockResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UnLockResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UnLockResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            case 3:\n                message.unLockCharacter = $root.UnLockCharacter.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an UnLockResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof UnLockResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {UnLockResponse} UnLockResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UnLockResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an UnLockResponse message.\n     * @function verify\n     * @memberof UnLockResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    UnLockResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        if (message.unLockCharacter != null && message.hasOwnProperty(\"unLockCharacter\")) {\n            var error = $root.UnLockCharacter.verify(message.unLockCharacter);\n            if (error)\n                return \"unLockCharacter.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates an UnLockResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UnLockResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {UnLockResponse} UnLockResponse\n     */\n    UnLockResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.UnLockResponse)\n            return object;\n        var message = new $root.UnLockResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        if (object.unLockCharacter != null) {\n            if (typeof object.unLockCharacter !== \"object\")\n                throw TypeError(\".UnLockResponse.unLockCharacter: object expected\");\n            message.unLockCharacter = $root.UnLockCharacter.fromObject(object.unLockCharacter);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an UnLockResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UnLockResponse\n     * @static\n     * @param {UnLockResponse} message UnLockResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UnLockResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n            object.unLockCharacter = null;\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        if (message.unLockCharacter != null && message.hasOwnProperty(\"unLockCharacter\"))\n            object.unLockCharacter = $root.UnLockCharacter.toObject(message.unLockCharacter, options);\n        return object;\n    };\n\n    /**\n     * Converts this UnLockResponse to JSON.\n     * @function toJSON\n     * @memberof UnLockResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UnLockResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UnLockResponse;\n})();\n\n$root.SwitchCharacterRequest = (function() {\n\n    /**\n     * Properties of a SwitchCharacterRequest.\n     * @exports ISwitchCharacterRequest\n     * @interface ISwitchCharacterRequest\n     * @property {number|null} [tCharacterId] SwitchCharacterRequest tCharacterId\n     */\n\n    /**\n     * Constructs a new SwitchCharacterRequest.\n     * @exports SwitchCharacterRequest\n     * @classdesc Represents a SwitchCharacterRequest.\n     * @implements ISwitchCharacterRequest\n     * @constructor\n     * @param {ISwitchCharacterRequest=} [properties] Properties to set\n     */\n    function SwitchCharacterRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SwitchCharacterRequest tCharacterId.\n     * @member {number} tCharacterId\n     * @memberof SwitchCharacterRequest\n     * @instance\n     */\n    SwitchCharacterRequest.prototype.tCharacterId = 0;\n\n    /**\n     * Creates a new SwitchCharacterRequest instance using the specified properties.\n     * @function create\n     * @memberof SwitchCharacterRequest\n     * @static\n     * @param {ISwitchCharacterRequest=} [properties] Properties to set\n     * @returns {SwitchCharacterRequest} SwitchCharacterRequest instance\n     */\n    SwitchCharacterRequest.create = function create(properties) {\n        return new SwitchCharacterRequest(properties);\n    };\n\n    /**\n     * Encodes the specified SwitchCharacterRequest message. Does not implicitly {@link SwitchCharacterRequest.verify|verify} messages.\n     * @function encode\n     * @memberof SwitchCharacterRequest\n     * @static\n     * @param {ISwitchCharacterRequest} message SwitchCharacterRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SwitchCharacterRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.tCharacterId != null && message.hasOwnProperty(\"tCharacterId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.tCharacterId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SwitchCharacterRequest message, length delimited. Does not implicitly {@link SwitchCharacterRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SwitchCharacterRequest\n     * @static\n     * @param {ISwitchCharacterRequest} message SwitchCharacterRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SwitchCharacterRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SwitchCharacterRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof SwitchCharacterRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SwitchCharacterRequest} SwitchCharacterRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SwitchCharacterRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SwitchCharacterRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.tCharacterId = reader.int32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SwitchCharacterRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SwitchCharacterRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SwitchCharacterRequest} SwitchCharacterRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SwitchCharacterRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SwitchCharacterRequest message.\n     * @function verify\n     * @memberof SwitchCharacterRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SwitchCharacterRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.tCharacterId != null && message.hasOwnProperty(\"tCharacterId\"))\n            if (!$util.isInteger(message.tCharacterId))\n                return \"tCharacterId: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SwitchCharacterRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SwitchCharacterRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SwitchCharacterRequest} SwitchCharacterRequest\n     */\n    SwitchCharacterRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.SwitchCharacterRequest)\n            return object;\n        var message = new $root.SwitchCharacterRequest();\n        if (object.tCharacterId != null)\n            message.tCharacterId = object.tCharacterId | 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SwitchCharacterRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SwitchCharacterRequest\n     * @static\n     * @param {SwitchCharacterRequest} message SwitchCharacterRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SwitchCharacterRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.tCharacterId = 0;\n        if (message.tCharacterId != null && message.hasOwnProperty(\"tCharacterId\"))\n            object.tCharacterId = message.tCharacterId;\n        return object;\n    };\n\n    /**\n     * Converts this SwitchCharacterRequest to JSON.\n     * @function toJSON\n     * @memberof SwitchCharacterRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SwitchCharacterRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SwitchCharacterRequest;\n})();\n\n$root.SwitchCharacterResponse = (function() {\n\n    /**\n     * Properties of a SwitchCharacterResponse.\n     * @exports ISwitchCharacterResponse\n     * @interface ISwitchCharacterResponse\n     * @property {Result|null} [result] SwitchCharacterResponse result\n     * @property {string|null} [errormsg] SwitchCharacterResponse errormsg\n     * @property {INCharacter|null} [character] SwitchCharacterResponse character\n     */\n\n    /**\n     * Constructs a new SwitchCharacterResponse.\n     * @exports SwitchCharacterResponse\n     * @classdesc Represents a SwitchCharacterResponse.\n     * @implements ISwitchCharacterResponse\n     * @constructor\n     * @param {ISwitchCharacterResponse=} [properties] Properties to set\n     */\n    function SwitchCharacterResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SwitchCharacterResponse result.\n     * @member {Result} result\n     * @memberof SwitchCharacterResponse\n     * @instance\n     */\n    SwitchCharacterResponse.prototype.result = 0;\n\n    /**\n     * SwitchCharacterResponse errormsg.\n     * @member {string} errormsg\n     * @memberof SwitchCharacterResponse\n     * @instance\n     */\n    SwitchCharacterResponse.prototype.errormsg = \"\";\n\n    /**\n     * SwitchCharacterResponse character.\n     * @member {INCharacter|null|undefined} character\n     * @memberof SwitchCharacterResponse\n     * @instance\n     */\n    SwitchCharacterResponse.prototype.character = null;\n\n    /**\n     * Creates a new SwitchCharacterResponse instance using the specified properties.\n     * @function create\n     * @memberof SwitchCharacterResponse\n     * @static\n     * @param {ISwitchCharacterResponse=} [properties] Properties to set\n     * @returns {SwitchCharacterResponse} SwitchCharacterResponse instance\n     */\n    SwitchCharacterResponse.create = function create(properties) {\n        return new SwitchCharacterResponse(properties);\n    };\n\n    /**\n     * Encodes the specified SwitchCharacterResponse message. Does not implicitly {@link SwitchCharacterResponse.verify|verify} messages.\n     * @function encode\n     * @memberof SwitchCharacterResponse\n     * @static\n     * @param {ISwitchCharacterResponse} message SwitchCharacterResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SwitchCharacterResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        if (message.character != null && message.hasOwnProperty(\"character\"))\n            $root.NCharacter.encode(message.character, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SwitchCharacterResponse message, length delimited. Does not implicitly {@link SwitchCharacterResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SwitchCharacterResponse\n     * @static\n     * @param {ISwitchCharacterResponse} message SwitchCharacterResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SwitchCharacterResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SwitchCharacterResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof SwitchCharacterResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SwitchCharacterResponse} SwitchCharacterResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SwitchCharacterResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SwitchCharacterResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            case 3:\n                message.character = $root.NCharacter.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SwitchCharacterResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SwitchCharacterResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SwitchCharacterResponse} SwitchCharacterResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SwitchCharacterResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SwitchCharacterResponse message.\n     * @function verify\n     * @memberof SwitchCharacterResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SwitchCharacterResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        if (message.character != null && message.hasOwnProperty(\"character\")) {\n            var error = $root.NCharacter.verify(message.character);\n            if (error)\n                return \"character.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SwitchCharacterResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SwitchCharacterResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SwitchCharacterResponse} SwitchCharacterResponse\n     */\n    SwitchCharacterResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.SwitchCharacterResponse)\n            return object;\n        var message = new $root.SwitchCharacterResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        if (object.character != null) {\n            if (typeof object.character !== \"object\")\n                throw TypeError(\".SwitchCharacterResponse.character: object expected\");\n            message.character = $root.NCharacter.fromObject(object.character);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SwitchCharacterResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SwitchCharacterResponse\n     * @static\n     * @param {SwitchCharacterResponse} message SwitchCharacterResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SwitchCharacterResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n            object.character = null;\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        if (message.character != null && message.hasOwnProperty(\"character\"))\n            object.character = $root.NCharacter.toObject(message.character, options);\n        return object;\n    };\n\n    /**\n     * Converts this SwitchCharacterResponse to JSON.\n     * @function toJSON\n     * @memberof SwitchCharacterResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SwitchCharacterResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SwitchCharacterResponse;\n})();\n\n$root.BagHandleRequest = (function() {\n\n    /**\n     * Properties of a BagHandleRequest.\n     * @exports IBagHandleRequest\n     * @interface IBagHandleRequest\n     * @property {number|null} [itemId] BagHandleRequest itemId\n     * @property {BagHandleType|null} [bagHandleType] BagHandleRequest bagHandleType\n     * @property {number|Long|null} [money] BagHandleRequest money\n     */\n\n    /**\n     * Constructs a new BagHandleRequest.\n     * @exports BagHandleRequest\n     * @classdesc Represents a BagHandleRequest.\n     * @implements IBagHandleRequest\n     * @constructor\n     * @param {IBagHandleRequest=} [properties] Properties to set\n     */\n    function BagHandleRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * BagHandleRequest itemId.\n     * @member {number} itemId\n     * @memberof BagHandleRequest\n     * @instance\n     */\n    BagHandleRequest.prototype.itemId = 0;\n\n    /**\n     * BagHandleRequest bagHandleType.\n     * @member {BagHandleType} bagHandleType\n     * @memberof BagHandleRequest\n     * @instance\n     */\n    BagHandleRequest.prototype.bagHandleType = 0;\n\n    /**\n     * BagHandleRequest money.\n     * @member {number|Long} money\n     * @memberof BagHandleRequest\n     * @instance\n     */\n    BagHandleRequest.prototype.money = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * Creates a new BagHandleRequest instance using the specified properties.\n     * @function create\n     * @memberof BagHandleRequest\n     * @static\n     * @param {IBagHandleRequest=} [properties] Properties to set\n     * @returns {BagHandleRequest} BagHandleRequest instance\n     */\n    BagHandleRequest.create = function create(properties) {\n        return new BagHandleRequest(properties);\n    };\n\n    /**\n     * Encodes the specified BagHandleRequest message. Does not implicitly {@link BagHandleRequest.verify|verify} messages.\n     * @function encode\n     * @memberof BagHandleRequest\n     * @static\n     * @param {IBagHandleRequest} message BagHandleRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    BagHandleRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.itemId != null && message.hasOwnProperty(\"itemId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.itemId);\n        if (message.bagHandleType != null && message.hasOwnProperty(\"bagHandleType\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.bagHandleType);\n        if (message.money != null && message.hasOwnProperty(\"money\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).int64(message.money);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified BagHandleRequest message, length delimited. Does not implicitly {@link BagHandleRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof BagHandleRequest\n     * @static\n     * @param {IBagHandleRequest} message BagHandleRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    BagHandleRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a BagHandleRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof BagHandleRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {BagHandleRequest} BagHandleRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    BagHandleRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.BagHandleRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.itemId = reader.int32();\n                break;\n            case 2:\n                message.bagHandleType = reader.int32();\n                break;\n            case 3:\n                message.money = reader.int64();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a BagHandleRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof BagHandleRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {BagHandleRequest} BagHandleRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    BagHandleRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a BagHandleRequest message.\n     * @function verify\n     * @memberof BagHandleRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    BagHandleRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.itemId != null && message.hasOwnProperty(\"itemId\"))\n            if (!$util.isInteger(message.itemId))\n                return \"itemId: integer expected\";\n        if (message.bagHandleType != null && message.hasOwnProperty(\"bagHandleType\"))\n            switch (message.bagHandleType) {\n            default:\n                return \"bagHandleType: enum value expected\";\n            case 0:\n            case 1:\n            case 2:\n                break;\n            }\n        if (message.money != null && message.hasOwnProperty(\"money\"))\n            if (!$util.isInteger(message.money) && !(message.money && $util.isInteger(message.money.low) && $util.isInteger(message.money.high)))\n                return \"money: integer|Long expected\";\n        return null;\n    };\n\n    /**\n     * Creates a BagHandleRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof BagHandleRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {BagHandleRequest} BagHandleRequest\n     */\n    BagHandleRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.BagHandleRequest)\n            return object;\n        var message = new $root.BagHandleRequest();\n        if (object.itemId != null)\n            message.itemId = object.itemId | 0;\n        switch (object.bagHandleType) {\n        case \"SELL\":\n        case 0:\n            message.bagHandleType = 0;\n            break;\n        case \"TRAN\":\n        case 1:\n            message.bagHandleType = 1;\n            break;\n        case \"CANCELTRAN\":\n        case 2:\n            message.bagHandleType = 2;\n            break;\n        }\n        if (object.money != null)\n            if ($util.Long)\n                (message.money = $util.Long.fromValue(object.money)).unsigned = false;\n            else if (typeof object.money === \"string\")\n                message.money = parseInt(object.money, 10);\n            else if (typeof object.money === \"number\")\n                message.money = object.money;\n            else if (typeof object.money === \"object\")\n                message.money = new $util.LongBits(object.money.low >>> 0, object.money.high >>> 0).toNumber();\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a BagHandleRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof BagHandleRequest\n     * @static\n     * @param {BagHandleRequest} message BagHandleRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    BagHandleRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.itemId = 0;\n            object.bagHandleType = options.enums === String ? \"SELL\" : 0;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.money = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.money = options.longs === String ? \"0\" : 0;\n        }\n        if (message.itemId != null && message.hasOwnProperty(\"itemId\"))\n            object.itemId = message.itemId;\n        if (message.bagHandleType != null && message.hasOwnProperty(\"bagHandleType\"))\n            object.bagHandleType = options.enums === String ? $root.BagHandleType[message.bagHandleType] : message.bagHandleType;\n        if (message.money != null && message.hasOwnProperty(\"money\"))\n            if (typeof message.money === \"number\")\n                object.money = options.longs === String ? String(message.money) : message.money;\n            else\n                object.money = options.longs === String ? $util.Long.prototype.toString.call(message.money) : options.longs === Number ? new $util.LongBits(message.money.low >>> 0, message.money.high >>> 0).toNumber() : message.money;\n        return object;\n    };\n\n    /**\n     * Converts this BagHandleRequest to JSON.\n     * @function toJSON\n     * @memberof BagHandleRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    BagHandleRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return BagHandleRequest;\n})();\n\n$root.BagHandleResponse = (function() {\n\n    /**\n     * Properties of a BagHandleResponse.\n     * @exports IBagHandleResponse\n     * @interface IBagHandleResponse\n     * @property {Result|null} [result] BagHandleResponse result\n     * @property {string|null} [errormsg] BagHandleResponse errormsg\n     */\n\n    /**\n     * Constructs a new BagHandleResponse.\n     * @exports BagHandleResponse\n     * @classdesc Represents a BagHandleResponse.\n     * @implements IBagHandleResponse\n     * @constructor\n     * @param {IBagHandleResponse=} [properties] Properties to set\n     */\n    function BagHandleResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * BagHandleResponse result.\n     * @member {Result} result\n     * @memberof BagHandleResponse\n     * @instance\n     */\n    BagHandleResponse.prototype.result = 0;\n\n    /**\n     * BagHandleResponse errormsg.\n     * @member {string} errormsg\n     * @memberof BagHandleResponse\n     * @instance\n     */\n    BagHandleResponse.prototype.errormsg = \"\";\n\n    /**\n     * Creates a new BagHandleResponse instance using the specified properties.\n     * @function create\n     * @memberof BagHandleResponse\n     * @static\n     * @param {IBagHandleResponse=} [properties] Properties to set\n     * @returns {BagHandleResponse} BagHandleResponse instance\n     */\n    BagHandleResponse.create = function create(properties) {\n        return new BagHandleResponse(properties);\n    };\n\n    /**\n     * Encodes the specified BagHandleResponse message. Does not implicitly {@link BagHandleResponse.verify|verify} messages.\n     * @function encode\n     * @memberof BagHandleResponse\n     * @static\n     * @param {IBagHandleResponse} message BagHandleResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    BagHandleResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified BagHandleResponse message, length delimited. Does not implicitly {@link BagHandleResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof BagHandleResponse\n     * @static\n     * @param {IBagHandleResponse} message BagHandleResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    BagHandleResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a BagHandleResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof BagHandleResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {BagHandleResponse} BagHandleResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    BagHandleResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.BagHandleResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a BagHandleResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof BagHandleResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {BagHandleResponse} BagHandleResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    BagHandleResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a BagHandleResponse message.\n     * @function verify\n     * @memberof BagHandleResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    BagHandleResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a BagHandleResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof BagHandleResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {BagHandleResponse} BagHandleResponse\n     */\n    BagHandleResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.BagHandleResponse)\n            return object;\n        var message = new $root.BagHandleResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a BagHandleResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof BagHandleResponse\n     * @static\n     * @param {BagHandleResponse} message BagHandleResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    BagHandleResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        return object;\n    };\n\n    /**\n     * Converts this BagHandleResponse to JSON.\n     * @function toJSON\n     * @memberof BagHandleResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    BagHandleResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return BagHandleResponse;\n})();\n\n$root.UserStatusChangeResponse = (function() {\n\n    /**\n     * Properties of a UserStatusChangeResponse.\n     * @exports IUserStatusChangeResponse\n     * @interface IUserStatusChangeResponse\n     * @property {Array.<INUserStatusChange>|null} [userStatusChanges] UserStatusChangeResponse userStatusChanges\n     */\n\n    /**\n     * Constructs a new UserStatusChangeResponse.\n     * @exports UserStatusChangeResponse\n     * @classdesc Represents a UserStatusChangeResponse.\n     * @implements IUserStatusChangeResponse\n     * @constructor\n     * @param {IUserStatusChangeResponse=} [properties] Properties to set\n     */\n    function UserStatusChangeResponse(properties) {\n        this.userStatusChanges = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * UserStatusChangeResponse userStatusChanges.\n     * @member {Array.<INUserStatusChange>} userStatusChanges\n     * @memberof UserStatusChangeResponse\n     * @instance\n     */\n    UserStatusChangeResponse.prototype.userStatusChanges = $util.emptyArray;\n\n    /**\n     * Creates a new UserStatusChangeResponse instance using the specified properties.\n     * @function create\n     * @memberof UserStatusChangeResponse\n     * @static\n     * @param {IUserStatusChangeResponse=} [properties] Properties to set\n     * @returns {UserStatusChangeResponse} UserStatusChangeResponse instance\n     */\n    UserStatusChangeResponse.create = function create(properties) {\n        return new UserStatusChangeResponse(properties);\n    };\n\n    /**\n     * Encodes the specified UserStatusChangeResponse message. Does not implicitly {@link UserStatusChangeResponse.verify|verify} messages.\n     * @function encode\n     * @memberof UserStatusChangeResponse\n     * @static\n     * @param {IUserStatusChangeResponse} message UserStatusChangeResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UserStatusChangeResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.userStatusChanges != null && message.userStatusChanges.length)\n            for (var i = 0; i < message.userStatusChanges.length; ++i)\n                $root.NUserStatusChange.encode(message.userStatusChanges[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified UserStatusChangeResponse message, length delimited. Does not implicitly {@link UserStatusChangeResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof UserStatusChangeResponse\n     * @static\n     * @param {IUserStatusChangeResponse} message UserStatusChangeResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UserStatusChangeResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a UserStatusChangeResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof UserStatusChangeResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {UserStatusChangeResponse} UserStatusChangeResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UserStatusChangeResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UserStatusChangeResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.userStatusChanges && message.userStatusChanges.length))\n                    message.userStatusChanges = [];\n                message.userStatusChanges.push($root.NUserStatusChange.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a UserStatusChangeResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof UserStatusChangeResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {UserStatusChangeResponse} UserStatusChangeResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UserStatusChangeResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a UserStatusChangeResponse message.\n     * @function verify\n     * @memberof UserStatusChangeResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    UserStatusChangeResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.userStatusChanges != null && message.hasOwnProperty(\"userStatusChanges\")) {\n            if (!Array.isArray(message.userStatusChanges))\n                return \"userStatusChanges: array expected\";\n            for (var i = 0; i < message.userStatusChanges.length; ++i) {\n                var error = $root.NUserStatusChange.verify(message.userStatusChanges[i]);\n                if (error)\n                    return \"userStatusChanges.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a UserStatusChangeResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UserStatusChangeResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {UserStatusChangeResponse} UserStatusChangeResponse\n     */\n    UserStatusChangeResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.UserStatusChangeResponse)\n            return object;\n        var message = new $root.UserStatusChangeResponse();\n        if (object.userStatusChanges) {\n            if (!Array.isArray(object.userStatusChanges))\n                throw TypeError(\".UserStatusChangeResponse.userStatusChanges: array expected\");\n            message.userStatusChanges = [];\n            for (var i = 0; i < object.userStatusChanges.length; ++i) {\n                if (typeof object.userStatusChanges[i] !== \"object\")\n                    throw TypeError(\".UserStatusChangeResponse.userStatusChanges: object expected\");\n                message.userStatusChanges[i] = $root.NUserStatusChange.fromObject(object.userStatusChanges[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a UserStatusChangeResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UserStatusChangeResponse\n     * @static\n     * @param {UserStatusChangeResponse} message UserStatusChangeResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UserStatusChangeResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.userStatusChanges = [];\n        if (message.userStatusChanges && message.userStatusChanges.length) {\n            object.userStatusChanges = [];\n            for (var j = 0; j < message.userStatusChanges.length; ++j)\n                object.userStatusChanges[j] = $root.NUserStatusChange.toObject(message.userStatusChanges[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this UserStatusChangeResponse to JSON.\n     * @function toJSON\n     * @memberof UserStatusChangeResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UserStatusChangeResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UserStatusChangeResponse;\n})();\n\n$root.QueryTranRequest = (function() {\n\n    /**\n     * Properties of a QueryTranRequest.\n     * @exports IQueryTranRequest\n     * @interface IQueryTranRequest\n     * @property {number|null} [userId] QueryTranRequest userId\n     */\n\n    /**\n     * Constructs a new QueryTranRequest.\n     * @exports QueryTranRequest\n     * @classdesc Represents a QueryTranRequest.\n     * @implements IQueryTranRequest\n     * @constructor\n     * @param {IQueryTranRequest=} [properties] Properties to set\n     */\n    function QueryTranRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * QueryTranRequest userId.\n     * @member {number} userId\n     * @memberof QueryTranRequest\n     * @instance\n     */\n    QueryTranRequest.prototype.userId = 0;\n\n    /**\n     * Creates a new QueryTranRequest instance using the specified properties.\n     * @function create\n     * @memberof QueryTranRequest\n     * @static\n     * @param {IQueryTranRequest=} [properties] Properties to set\n     * @returns {QueryTranRequest} QueryTranRequest instance\n     */\n    QueryTranRequest.create = function create(properties) {\n        return new QueryTranRequest(properties);\n    };\n\n    /**\n     * Encodes the specified QueryTranRequest message. Does not implicitly {@link QueryTranRequest.verify|verify} messages.\n     * @function encode\n     * @memberof QueryTranRequest\n     * @static\n     * @param {IQueryTranRequest} message QueryTranRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    QueryTranRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.userId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified QueryTranRequest message, length delimited. Does not implicitly {@link QueryTranRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof QueryTranRequest\n     * @static\n     * @param {IQueryTranRequest} message QueryTranRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    QueryTranRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a QueryTranRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof QueryTranRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {QueryTranRequest} QueryTranRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    QueryTranRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.QueryTranRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.userId = reader.int32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a QueryTranRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof QueryTranRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {QueryTranRequest} QueryTranRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    QueryTranRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a QueryTranRequest message.\n     * @function verify\n     * @memberof QueryTranRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    QueryTranRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            if (!$util.isInteger(message.userId))\n                return \"userId: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a QueryTranRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof QueryTranRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {QueryTranRequest} QueryTranRequest\n     */\n    QueryTranRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.QueryTranRequest)\n            return object;\n        var message = new $root.QueryTranRequest();\n        if (object.userId != null)\n            message.userId = object.userId | 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a QueryTranRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof QueryTranRequest\n     * @static\n     * @param {QueryTranRequest} message QueryTranRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    QueryTranRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.userId = 0;\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            object.userId = message.userId;\n        return object;\n    };\n\n    /**\n     * Converts this QueryTranRequest to JSON.\n     * @function toJSON\n     * @memberof QueryTranRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    QueryTranRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return QueryTranRequest;\n})();\n\n$root.QueryTranResponse = (function() {\n\n    /**\n     * Properties of a QueryTranResponse.\n     * @exports IQueryTranResponse\n     * @interface IQueryTranResponse\n     * @property {Array.<INItem>|null} [items] QueryTranResponse items\n     * @property {Result|null} [result] QueryTranResponse result\n     * @property {string|null} [errormsg] QueryTranResponse errormsg\n     */\n\n    /**\n     * Constructs a new QueryTranResponse.\n     * @exports QueryTranResponse\n     * @classdesc Represents a QueryTranResponse.\n     * @implements IQueryTranResponse\n     * @constructor\n     * @param {IQueryTranResponse=} [properties] Properties to set\n     */\n    function QueryTranResponse(properties) {\n        this.items = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * QueryTranResponse items.\n     * @member {Array.<INItem>} items\n     * @memberof QueryTranResponse\n     * @instance\n     */\n    QueryTranResponse.prototype.items = $util.emptyArray;\n\n    /**\n     * QueryTranResponse result.\n     * @member {Result} result\n     * @memberof QueryTranResponse\n     * @instance\n     */\n    QueryTranResponse.prototype.result = 0;\n\n    /**\n     * QueryTranResponse errormsg.\n     * @member {string} errormsg\n     * @memberof QueryTranResponse\n     * @instance\n     */\n    QueryTranResponse.prototype.errormsg = \"\";\n\n    /**\n     * Creates a new QueryTranResponse instance using the specified properties.\n     * @function create\n     * @memberof QueryTranResponse\n     * @static\n     * @param {IQueryTranResponse=} [properties] Properties to set\n     * @returns {QueryTranResponse} QueryTranResponse instance\n     */\n    QueryTranResponse.create = function create(properties) {\n        return new QueryTranResponse(properties);\n    };\n\n    /**\n     * Encodes the specified QueryTranResponse message. Does not implicitly {@link QueryTranResponse.verify|verify} messages.\n     * @function encode\n     * @memberof QueryTranResponse\n     * @static\n     * @param {IQueryTranResponse} message QueryTranResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    QueryTranResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.items != null && message.items.length)\n            for (var i = 0; i < message.items.length; ++i)\n                $root.NItem.encode(message.items[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.errormsg);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified QueryTranResponse message, length delimited. Does not implicitly {@link QueryTranResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof QueryTranResponse\n     * @static\n     * @param {IQueryTranResponse} message QueryTranResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    QueryTranResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a QueryTranResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof QueryTranResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {QueryTranResponse} QueryTranResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    QueryTranResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.QueryTranResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.items && message.items.length))\n                    message.items = [];\n                message.items.push($root.NItem.decode(reader, reader.uint32()));\n                break;\n            case 2:\n                message.result = reader.int32();\n                break;\n            case 3:\n                message.errormsg = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a QueryTranResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof QueryTranResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {QueryTranResponse} QueryTranResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    QueryTranResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a QueryTranResponse message.\n     * @function verify\n     * @memberof QueryTranResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    QueryTranResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.items != null && message.hasOwnProperty(\"items\")) {\n            if (!Array.isArray(message.items))\n                return \"items: array expected\";\n            for (var i = 0; i < message.items.length; ++i) {\n                var error = $root.NItem.verify(message.items[i]);\n                if (error)\n                    return \"items.\" + error;\n            }\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a QueryTranResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof QueryTranResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {QueryTranResponse} QueryTranResponse\n     */\n    QueryTranResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.QueryTranResponse)\n            return object;\n        var message = new $root.QueryTranResponse();\n        if (object.items) {\n            if (!Array.isArray(object.items))\n                throw TypeError(\".QueryTranResponse.items: array expected\");\n            message.items = [];\n            for (var i = 0; i < object.items.length; ++i) {\n                if (typeof object.items[i] !== \"object\")\n                    throw TypeError(\".QueryTranResponse.items: object expected\");\n                message.items[i] = $root.NItem.fromObject(object.items[i]);\n            }\n        }\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a QueryTranResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof QueryTranResponse\n     * @static\n     * @param {QueryTranResponse} message QueryTranResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    QueryTranResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.items = [];\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n        }\n        if (message.items && message.items.length) {\n            object.items = [];\n            for (var j = 0; j < message.items.length; ++j)\n                object.items[j] = $root.NItem.toObject(message.items[j], options);\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        return object;\n    };\n\n    /**\n     * Converts this QueryTranResponse to JSON.\n     * @function toJSON\n     * @memberof QueryTranResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    QueryTranResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return QueryTranResponse;\n})();\n\n$root.BuyTranRequest = (function() {\n\n    /**\n     * Properties of a BuyTranRequest.\n     * @exports IBuyTranRequest\n     * @interface IBuyTranRequest\n     * @property {number|null} [userId] BuyTranRequest userId\n     * @property {number|null} [itemId] BuyTranRequest itemId\n     */\n\n    /**\n     * Constructs a new BuyTranRequest.\n     * @exports BuyTranRequest\n     * @classdesc Represents a BuyTranRequest.\n     * @implements IBuyTranRequest\n     * @constructor\n     * @param {IBuyTranRequest=} [properties] Properties to set\n     */\n    function BuyTranRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * BuyTranRequest userId.\n     * @member {number} userId\n     * @memberof BuyTranRequest\n     * @instance\n     */\n    BuyTranRequest.prototype.userId = 0;\n\n    /**\n     * BuyTranRequest itemId.\n     * @member {number} itemId\n     * @memberof BuyTranRequest\n     * @instance\n     */\n    BuyTranRequest.prototype.itemId = 0;\n\n    /**\n     * Creates a new BuyTranRequest instance using the specified properties.\n     * @function create\n     * @memberof BuyTranRequest\n     * @static\n     * @param {IBuyTranRequest=} [properties] Properties to set\n     * @returns {BuyTranRequest} BuyTranRequest instance\n     */\n    BuyTranRequest.create = function create(properties) {\n        return new BuyTranRequest(properties);\n    };\n\n    /**\n     * Encodes the specified BuyTranRequest message. Does not implicitly {@link BuyTranRequest.verify|verify} messages.\n     * @function encode\n     * @memberof BuyTranRequest\n     * @static\n     * @param {IBuyTranRequest} message BuyTranRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    BuyTranRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.userId);\n        if (message.itemId != null && message.hasOwnProperty(\"itemId\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.itemId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified BuyTranRequest message, length delimited. Does not implicitly {@link BuyTranRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof BuyTranRequest\n     * @static\n     * @param {IBuyTranRequest} message BuyTranRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    BuyTranRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a BuyTranRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof BuyTranRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {BuyTranRequest} BuyTranRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    BuyTranRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.BuyTranRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.userId = reader.int32();\n                break;\n            case 2:\n                message.itemId = reader.int32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a BuyTranRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof BuyTranRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {BuyTranRequest} BuyTranRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    BuyTranRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a BuyTranRequest message.\n     * @function verify\n     * @memberof BuyTranRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    BuyTranRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            if (!$util.isInteger(message.userId))\n                return \"userId: integer expected\";\n        if (message.itemId != null && message.hasOwnProperty(\"itemId\"))\n            if (!$util.isInteger(message.itemId))\n                return \"itemId: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a BuyTranRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof BuyTranRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {BuyTranRequest} BuyTranRequest\n     */\n    BuyTranRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.BuyTranRequest)\n            return object;\n        var message = new $root.BuyTranRequest();\n        if (object.userId != null)\n            message.userId = object.userId | 0;\n        if (object.itemId != null)\n            message.itemId = object.itemId | 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a BuyTranRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof BuyTranRequest\n     * @static\n     * @param {BuyTranRequest} message BuyTranRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    BuyTranRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.userId = 0;\n            object.itemId = 0;\n        }\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            object.userId = message.userId;\n        if (message.itemId != null && message.hasOwnProperty(\"itemId\"))\n            object.itemId = message.itemId;\n        return object;\n    };\n\n    /**\n     * Converts this BuyTranRequest to JSON.\n     * @function toJSON\n     * @memberof BuyTranRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    BuyTranRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return BuyTranRequest;\n})();\n\n$root.BuyTranResponse = (function() {\n\n    /**\n     * Properties of a BuyTranResponse.\n     * @exports IBuyTranResponse\n     * @interface IBuyTranResponse\n     * @property {Result|null} [result] BuyTranResponse result\n     * @property {string|null} [errormsg] BuyTranResponse errormsg\n     */\n\n    /**\n     * Constructs a new BuyTranResponse.\n     * @exports BuyTranResponse\n     * @classdesc Represents a BuyTranResponse.\n     * @implements IBuyTranResponse\n     * @constructor\n     * @param {IBuyTranResponse=} [properties] Properties to set\n     */\n    function BuyTranResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * BuyTranResponse result.\n     * @member {Result} result\n     * @memberof BuyTranResponse\n     * @instance\n     */\n    BuyTranResponse.prototype.result = 0;\n\n    /**\n     * BuyTranResponse errormsg.\n     * @member {string} errormsg\n     * @memberof BuyTranResponse\n     * @instance\n     */\n    BuyTranResponse.prototype.errormsg = \"\";\n\n    /**\n     * Creates a new BuyTranResponse instance using the specified properties.\n     * @function create\n     * @memberof BuyTranResponse\n     * @static\n     * @param {IBuyTranResponse=} [properties] Properties to set\n     * @returns {BuyTranResponse} BuyTranResponse instance\n     */\n    BuyTranResponse.create = function create(properties) {\n        return new BuyTranResponse(properties);\n    };\n\n    /**\n     * Encodes the specified BuyTranResponse message. Does not implicitly {@link BuyTranResponse.verify|verify} messages.\n     * @function encode\n     * @memberof BuyTranResponse\n     * @static\n     * @param {IBuyTranResponse} message BuyTranResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    BuyTranResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified BuyTranResponse message, length delimited. Does not implicitly {@link BuyTranResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof BuyTranResponse\n     * @static\n     * @param {IBuyTranResponse} message BuyTranResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    BuyTranResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a BuyTranResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof BuyTranResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {BuyTranResponse} BuyTranResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    BuyTranResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.BuyTranResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a BuyTranResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof BuyTranResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {BuyTranResponse} BuyTranResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    BuyTranResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a BuyTranResponse message.\n     * @function verify\n     * @memberof BuyTranResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    BuyTranResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a BuyTranResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof BuyTranResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {BuyTranResponse} BuyTranResponse\n     */\n    BuyTranResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.BuyTranResponse)\n            return object;\n        var message = new $root.BuyTranResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a BuyTranResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof BuyTranResponse\n     * @static\n     * @param {BuyTranResponse} message BuyTranResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    BuyTranResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        return object;\n    };\n\n    /**\n     * Converts this BuyTranResponse to JSON.\n     * @function toJSON\n     * @memberof BuyTranResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    BuyTranResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return BuyTranResponse;\n})();\n\n$root.HeartBeatRequest = (function() {\n\n    /**\n     * Properties of a HeartBeatRequest.\n     * @exports IHeartBeatRequest\n     * @interface IHeartBeatRequest\n     */\n\n    /**\n     * Constructs a new HeartBeatRequest.\n     * @exports HeartBeatRequest\n     * @classdesc Represents a HeartBeatRequest.\n     * @implements IHeartBeatRequest\n     * @constructor\n     * @param {IHeartBeatRequest=} [properties] Properties to set\n     */\n    function HeartBeatRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new HeartBeatRequest instance using the specified properties.\n     * @function create\n     * @memberof HeartBeatRequest\n     * @static\n     * @param {IHeartBeatRequest=} [properties] Properties to set\n     * @returns {HeartBeatRequest} HeartBeatRequest instance\n     */\n    HeartBeatRequest.create = function create(properties) {\n        return new HeartBeatRequest(properties);\n    };\n\n    /**\n     * Encodes the specified HeartBeatRequest message. Does not implicitly {@link HeartBeatRequest.verify|verify} messages.\n     * @function encode\n     * @memberof HeartBeatRequest\n     * @static\n     * @param {IHeartBeatRequest} message HeartBeatRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    HeartBeatRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified HeartBeatRequest message, length delimited. Does not implicitly {@link HeartBeatRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof HeartBeatRequest\n     * @static\n     * @param {IHeartBeatRequest} message HeartBeatRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    HeartBeatRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a HeartBeatRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof HeartBeatRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {HeartBeatRequest} HeartBeatRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    HeartBeatRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.HeartBeatRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a HeartBeatRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof HeartBeatRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {HeartBeatRequest} HeartBeatRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    HeartBeatRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a HeartBeatRequest message.\n     * @function verify\n     * @memberof HeartBeatRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    HeartBeatRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a HeartBeatRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof HeartBeatRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {HeartBeatRequest} HeartBeatRequest\n     */\n    HeartBeatRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.HeartBeatRequest)\n            return object;\n        return new $root.HeartBeatRequest();\n    };\n\n    /**\n     * Creates a plain object from a HeartBeatRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof HeartBeatRequest\n     * @static\n     * @param {HeartBeatRequest} message HeartBeatRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    HeartBeatRequest.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this HeartBeatRequest to JSON.\n     * @function toJSON\n     * @memberof HeartBeatRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    HeartBeatRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return HeartBeatRequest;\n})();\n\n$root.HeartBeatResponse = (function() {\n\n    /**\n     * Properties of a HeartBeatResponse.\n     * @exports IHeartBeatResponse\n     * @interface IHeartBeatResponse\n     * @property {number|null} [liveFenSiCount] HeartBeatResponse liveFenSiCount\n     */\n\n    /**\n     * Constructs a new HeartBeatResponse.\n     * @exports HeartBeatResponse\n     * @classdesc Represents a HeartBeatResponse.\n     * @implements IHeartBeatResponse\n     * @constructor\n     * @param {IHeartBeatResponse=} [properties] Properties to set\n     */\n    function HeartBeatResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * HeartBeatResponse liveFenSiCount.\n     * @member {number} liveFenSiCount\n     * @memberof HeartBeatResponse\n     * @instance\n     */\n    HeartBeatResponse.prototype.liveFenSiCount = 0;\n\n    /**\n     * Creates a new HeartBeatResponse instance using the specified properties.\n     * @function create\n     * @memberof HeartBeatResponse\n     * @static\n     * @param {IHeartBeatResponse=} [properties] Properties to set\n     * @returns {HeartBeatResponse} HeartBeatResponse instance\n     */\n    HeartBeatResponse.create = function create(properties) {\n        return new HeartBeatResponse(properties);\n    };\n\n    /**\n     * Encodes the specified HeartBeatResponse message. Does not implicitly {@link HeartBeatResponse.verify|verify} messages.\n     * @function encode\n     * @memberof HeartBeatResponse\n     * @static\n     * @param {IHeartBeatResponse} message HeartBeatResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    HeartBeatResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.liveFenSiCount != null && message.hasOwnProperty(\"liveFenSiCount\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.liveFenSiCount);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified HeartBeatResponse message, length delimited. Does not implicitly {@link HeartBeatResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof HeartBeatResponse\n     * @static\n     * @param {IHeartBeatResponse} message HeartBeatResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    HeartBeatResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a HeartBeatResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof HeartBeatResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {HeartBeatResponse} HeartBeatResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    HeartBeatResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.HeartBeatResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.liveFenSiCount = reader.int32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a HeartBeatResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof HeartBeatResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {HeartBeatResponse} HeartBeatResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    HeartBeatResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a HeartBeatResponse message.\n     * @function verify\n     * @memberof HeartBeatResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    HeartBeatResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.liveFenSiCount != null && message.hasOwnProperty(\"liveFenSiCount\"))\n            if (!$util.isInteger(message.liveFenSiCount))\n                return \"liveFenSiCount: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a HeartBeatResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof HeartBeatResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {HeartBeatResponse} HeartBeatResponse\n     */\n    HeartBeatResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.HeartBeatResponse)\n            return object;\n        var message = new $root.HeartBeatResponse();\n        if (object.liveFenSiCount != null)\n            message.liveFenSiCount = object.liveFenSiCount | 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a HeartBeatResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof HeartBeatResponse\n     * @static\n     * @param {HeartBeatResponse} message HeartBeatResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    HeartBeatResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.liveFenSiCount = 0;\n        if (message.liveFenSiCount != null && message.hasOwnProperty(\"liveFenSiCount\"))\n            object.liveFenSiCount = message.liveFenSiCount;\n        return object;\n    };\n\n    /**\n     * Converts this HeartBeatResponse to JSON.\n     * @function toJSON\n     * @memberof HeartBeatResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    HeartBeatResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return HeartBeatResponse;\n})();\n\n$root.OfferPriceRequest = (function() {\n\n    /**\n     * Properties of an OfferPriceRequest.\n     * @exports IOfferPriceRequest\n     * @interface IOfferPriceRequest\n     * @property {number|null} [id] OfferPriceRequest id\n     * @property {number|Long|null} [money] OfferPriceRequest money\n     */\n\n    /**\n     * Constructs a new OfferPriceRequest.\n     * @exports OfferPriceRequest\n     * @classdesc Represents an OfferPriceRequest.\n     * @implements IOfferPriceRequest\n     * @constructor\n     * @param {IOfferPriceRequest=} [properties] Properties to set\n     */\n    function OfferPriceRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * OfferPriceRequest id.\n     * @member {number} id\n     * @memberof OfferPriceRequest\n     * @instance\n     */\n    OfferPriceRequest.prototype.id = 0;\n\n    /**\n     * OfferPriceRequest money.\n     * @member {number|Long} money\n     * @memberof OfferPriceRequest\n     * @instance\n     */\n    OfferPriceRequest.prototype.money = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * Creates a new OfferPriceRequest instance using the specified properties.\n     * @function create\n     * @memberof OfferPriceRequest\n     * @static\n     * @param {IOfferPriceRequest=} [properties] Properties to set\n     * @returns {OfferPriceRequest} OfferPriceRequest instance\n     */\n    OfferPriceRequest.create = function create(properties) {\n        return new OfferPriceRequest(properties);\n    };\n\n    /**\n     * Encodes the specified OfferPriceRequest message. Does not implicitly {@link OfferPriceRequest.verify|verify} messages.\n     * @function encode\n     * @memberof OfferPriceRequest\n     * @static\n     * @param {IOfferPriceRequest} message OfferPriceRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    OfferPriceRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n        if (message.money != null && message.hasOwnProperty(\"money\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.money);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified OfferPriceRequest message, length delimited. Does not implicitly {@link OfferPriceRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof OfferPriceRequest\n     * @static\n     * @param {IOfferPriceRequest} message OfferPriceRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    OfferPriceRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an OfferPriceRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof OfferPriceRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {OfferPriceRequest} OfferPriceRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    OfferPriceRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.OfferPriceRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.id = reader.int32();\n                break;\n            case 2:\n                message.money = reader.int64();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an OfferPriceRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof OfferPriceRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {OfferPriceRequest} OfferPriceRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    OfferPriceRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an OfferPriceRequest message.\n     * @function verify\n     * @memberof OfferPriceRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    OfferPriceRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (!$util.isInteger(message.id))\n                return \"id: integer expected\";\n        if (message.money != null && message.hasOwnProperty(\"money\"))\n            if (!$util.isInteger(message.money) && !(message.money && $util.isInteger(message.money.low) && $util.isInteger(message.money.high)))\n                return \"money: integer|Long expected\";\n        return null;\n    };\n\n    /**\n     * Creates an OfferPriceRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof OfferPriceRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {OfferPriceRequest} OfferPriceRequest\n     */\n    OfferPriceRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.OfferPriceRequest)\n            return object;\n        var message = new $root.OfferPriceRequest();\n        if (object.id != null)\n            message.id = object.id | 0;\n        if (object.money != null)\n            if ($util.Long)\n                (message.money = $util.Long.fromValue(object.money)).unsigned = false;\n            else if (typeof object.money === \"string\")\n                message.money = parseInt(object.money, 10);\n            else if (typeof object.money === \"number\")\n                message.money = object.money;\n            else if (typeof object.money === \"object\")\n                message.money = new $util.LongBits(object.money.low >>> 0, object.money.high >>> 0).toNumber();\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an OfferPriceRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof OfferPriceRequest\n     * @static\n     * @param {OfferPriceRequest} message OfferPriceRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    OfferPriceRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.id = 0;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.money = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.money = options.longs === String ? \"0\" : 0;\n        }\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            object.id = message.id;\n        if (message.money != null && message.hasOwnProperty(\"money\"))\n            if (typeof message.money === \"number\")\n                object.money = options.longs === String ? String(message.money) : message.money;\n            else\n                object.money = options.longs === String ? $util.Long.prototype.toString.call(message.money) : options.longs === Number ? new $util.LongBits(message.money.low >>> 0, message.money.high >>> 0).toNumber() : message.money;\n        return object;\n    };\n\n    /**\n     * Converts this OfferPriceRequest to JSON.\n     * @function toJSON\n     * @memberof OfferPriceRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    OfferPriceRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return OfferPriceRequest;\n})();\n\n$root.OfferPriceResponse = (function() {\n\n    /**\n     * Properties of an OfferPriceResponse.\n     * @exports IOfferPriceResponse\n     * @interface IOfferPriceResponse\n     * @property {Result|null} [result] OfferPriceResponse result\n     * @property {string|null} [errormsg] OfferPriceResponse errormsg\n     */\n\n    /**\n     * Constructs a new OfferPriceResponse.\n     * @exports OfferPriceResponse\n     * @classdesc Represents an OfferPriceResponse.\n     * @implements IOfferPriceResponse\n     * @constructor\n     * @param {IOfferPriceResponse=} [properties] Properties to set\n     */\n    function OfferPriceResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * OfferPriceResponse result.\n     * @member {Result} result\n     * @memberof OfferPriceResponse\n     * @instance\n     */\n    OfferPriceResponse.prototype.result = 0;\n\n    /**\n     * OfferPriceResponse errormsg.\n     * @member {string} errormsg\n     * @memberof OfferPriceResponse\n     * @instance\n     */\n    OfferPriceResponse.prototype.errormsg = \"\";\n\n    /**\n     * Creates a new OfferPriceResponse instance using the specified properties.\n     * @function create\n     * @memberof OfferPriceResponse\n     * @static\n     * @param {IOfferPriceResponse=} [properties] Properties to set\n     * @returns {OfferPriceResponse} OfferPriceResponse instance\n     */\n    OfferPriceResponse.create = function create(properties) {\n        return new OfferPriceResponse(properties);\n    };\n\n    /**\n     * Encodes the specified OfferPriceResponse message. Does not implicitly {@link OfferPriceResponse.verify|verify} messages.\n     * @function encode\n     * @memberof OfferPriceResponse\n     * @static\n     * @param {IOfferPriceResponse} message OfferPriceResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    OfferPriceResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified OfferPriceResponse message, length delimited. Does not implicitly {@link OfferPriceResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof OfferPriceResponse\n     * @static\n     * @param {IOfferPriceResponse} message OfferPriceResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    OfferPriceResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an OfferPriceResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof OfferPriceResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {OfferPriceResponse} OfferPriceResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    OfferPriceResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.OfferPriceResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an OfferPriceResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof OfferPriceResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {OfferPriceResponse} OfferPriceResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    OfferPriceResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an OfferPriceResponse message.\n     * @function verify\n     * @memberof OfferPriceResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    OfferPriceResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates an OfferPriceResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof OfferPriceResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {OfferPriceResponse} OfferPriceResponse\n     */\n    OfferPriceResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.OfferPriceResponse)\n            return object;\n        var message = new $root.OfferPriceResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an OfferPriceResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof OfferPriceResponse\n     * @static\n     * @param {OfferPriceResponse} message OfferPriceResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    OfferPriceResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        return object;\n    };\n\n    /**\n     * Converts this OfferPriceResponse to JSON.\n     * @function toJSON\n     * @memberof OfferPriceResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    OfferPriceResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return OfferPriceResponse;\n})();\n\n$root.AuctionRequest = (function() {\n\n    /**\n     * Properties of an AuctionRequest.\n     * @exports IAuctionRequest\n     * @interface IAuctionRequest\n     * @property {number|null} [itemId] AuctionRequest itemId\n     * @property {number|Long|null} [money] AuctionRequest money\n     */\n\n    /**\n     * Constructs a new AuctionRequest.\n     * @exports AuctionRequest\n     * @classdesc Represents an AuctionRequest.\n     * @implements IAuctionRequest\n     * @constructor\n     * @param {IAuctionRequest=} [properties] Properties to set\n     */\n    function AuctionRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * AuctionRequest itemId.\n     * @member {number} itemId\n     * @memberof AuctionRequest\n     * @instance\n     */\n    AuctionRequest.prototype.itemId = 0;\n\n    /**\n     * AuctionRequest money.\n     * @member {number|Long} money\n     * @memberof AuctionRequest\n     * @instance\n     */\n    AuctionRequest.prototype.money = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * Creates a new AuctionRequest instance using the specified properties.\n     * @function create\n     * @memberof AuctionRequest\n     * @static\n     * @param {IAuctionRequest=} [properties] Properties to set\n     * @returns {AuctionRequest} AuctionRequest instance\n     */\n    AuctionRequest.create = function create(properties) {\n        return new AuctionRequest(properties);\n    };\n\n    /**\n     * Encodes the specified AuctionRequest message. Does not implicitly {@link AuctionRequest.verify|verify} messages.\n     * @function encode\n     * @memberof AuctionRequest\n     * @static\n     * @param {IAuctionRequest} message AuctionRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AuctionRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.itemId != null && message.hasOwnProperty(\"itemId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.itemId);\n        if (message.money != null && message.hasOwnProperty(\"money\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.money);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified AuctionRequest message, length delimited. Does not implicitly {@link AuctionRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof AuctionRequest\n     * @static\n     * @param {IAuctionRequest} message AuctionRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AuctionRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an AuctionRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof AuctionRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {AuctionRequest} AuctionRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AuctionRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.AuctionRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.itemId = reader.int32();\n                break;\n            case 2:\n                message.money = reader.int64();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an AuctionRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof AuctionRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {AuctionRequest} AuctionRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AuctionRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an AuctionRequest message.\n     * @function verify\n     * @memberof AuctionRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    AuctionRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.itemId != null && message.hasOwnProperty(\"itemId\"))\n            if (!$util.isInteger(message.itemId))\n                return \"itemId: integer expected\";\n        if (message.money != null && message.hasOwnProperty(\"money\"))\n            if (!$util.isInteger(message.money) && !(message.money && $util.isInteger(message.money.low) && $util.isInteger(message.money.high)))\n                return \"money: integer|Long expected\";\n        return null;\n    };\n\n    /**\n     * Creates an AuctionRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof AuctionRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {AuctionRequest} AuctionRequest\n     */\n    AuctionRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.AuctionRequest)\n            return object;\n        var message = new $root.AuctionRequest();\n        if (object.itemId != null)\n            message.itemId = object.itemId | 0;\n        if (object.money != null)\n            if ($util.Long)\n                (message.money = $util.Long.fromValue(object.money)).unsigned = false;\n            else if (typeof object.money === \"string\")\n                message.money = parseInt(object.money, 10);\n            else if (typeof object.money === \"number\")\n                message.money = object.money;\n            else if (typeof object.money === \"object\")\n                message.money = new $util.LongBits(object.money.low >>> 0, object.money.high >>> 0).toNumber();\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an AuctionRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof AuctionRequest\n     * @static\n     * @param {AuctionRequest} message AuctionRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    AuctionRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.itemId = 0;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.money = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.money = options.longs === String ? \"0\" : 0;\n        }\n        if (message.itemId != null && message.hasOwnProperty(\"itemId\"))\n            object.itemId = message.itemId;\n        if (message.money != null && message.hasOwnProperty(\"money\"))\n            if (typeof message.money === \"number\")\n                object.money = options.longs === String ? String(message.money) : message.money;\n            else\n                object.money = options.longs === String ? $util.Long.prototype.toString.call(message.money) : options.longs === Number ? new $util.LongBits(message.money.low >>> 0, message.money.high >>> 0).toNumber() : message.money;\n        return object;\n    };\n\n    /**\n     * Converts this AuctionRequest to JSON.\n     * @function toJSON\n     * @memberof AuctionRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    AuctionRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return AuctionRequest;\n})();\n\n$root.AuctionResponse = (function() {\n\n    /**\n     * Properties of an AuctionResponse.\n     * @exports IAuctionResponse\n     * @interface IAuctionResponse\n     * @property {Result|null} [result] AuctionResponse result\n     * @property {string|null} [errormsg] AuctionResponse errormsg\n     */\n\n    /**\n     * Constructs a new AuctionResponse.\n     * @exports AuctionResponse\n     * @classdesc Represents an AuctionResponse.\n     * @implements IAuctionResponse\n     * @constructor\n     * @param {IAuctionResponse=} [properties] Properties to set\n     */\n    function AuctionResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * AuctionResponse result.\n     * @member {Result} result\n     * @memberof AuctionResponse\n     * @instance\n     */\n    AuctionResponse.prototype.result = 0;\n\n    /**\n     * AuctionResponse errormsg.\n     * @member {string} errormsg\n     * @memberof AuctionResponse\n     * @instance\n     */\n    AuctionResponse.prototype.errormsg = \"\";\n\n    /**\n     * Creates a new AuctionResponse instance using the specified properties.\n     * @function create\n     * @memberof AuctionResponse\n     * @static\n     * @param {IAuctionResponse=} [properties] Properties to set\n     * @returns {AuctionResponse} AuctionResponse instance\n     */\n    AuctionResponse.create = function create(properties) {\n        return new AuctionResponse(properties);\n    };\n\n    /**\n     * Encodes the specified AuctionResponse message. Does not implicitly {@link AuctionResponse.verify|verify} messages.\n     * @function encode\n     * @memberof AuctionResponse\n     * @static\n     * @param {IAuctionResponse} message AuctionResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AuctionResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified AuctionResponse message, length delimited. Does not implicitly {@link AuctionResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof AuctionResponse\n     * @static\n     * @param {IAuctionResponse} message AuctionResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AuctionResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an AuctionResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof AuctionResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {AuctionResponse} AuctionResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AuctionResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.AuctionResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an AuctionResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof AuctionResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {AuctionResponse} AuctionResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AuctionResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an AuctionResponse message.\n     * @function verify\n     * @memberof AuctionResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    AuctionResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates an AuctionResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof AuctionResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {AuctionResponse} AuctionResponse\n     */\n    AuctionResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.AuctionResponse)\n            return object;\n        var message = new $root.AuctionResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an AuctionResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof AuctionResponse\n     * @static\n     * @param {AuctionResponse} message AuctionResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    AuctionResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        return object;\n    };\n\n    /**\n     * Converts this AuctionResponse to JSON.\n     * @function toJSON\n     * @memberof AuctionResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    AuctionResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return AuctionResponse;\n})();\n\n$root.GetAuctionListRequest = (function() {\n\n    /**\n     * Properties of a GetAuctionListRequest.\n     * @exports IGetAuctionListRequest\n     * @interface IGetAuctionListRequest\n     */\n\n    /**\n     * Constructs a new GetAuctionListRequest.\n     * @exports GetAuctionListRequest\n     * @classdesc Represents a GetAuctionListRequest.\n     * @implements IGetAuctionListRequest\n     * @constructor\n     * @param {IGetAuctionListRequest=} [properties] Properties to set\n     */\n    function GetAuctionListRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new GetAuctionListRequest instance using the specified properties.\n     * @function create\n     * @memberof GetAuctionListRequest\n     * @static\n     * @param {IGetAuctionListRequest=} [properties] Properties to set\n     * @returns {GetAuctionListRequest} GetAuctionListRequest instance\n     */\n    GetAuctionListRequest.create = function create(properties) {\n        return new GetAuctionListRequest(properties);\n    };\n\n    /**\n     * Encodes the specified GetAuctionListRequest message. Does not implicitly {@link GetAuctionListRequest.verify|verify} messages.\n     * @function encode\n     * @memberof GetAuctionListRequest\n     * @static\n     * @param {IGetAuctionListRequest} message GetAuctionListRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    GetAuctionListRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified GetAuctionListRequest message, length delimited. Does not implicitly {@link GetAuctionListRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof GetAuctionListRequest\n     * @static\n     * @param {IGetAuctionListRequest} message GetAuctionListRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    GetAuctionListRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a GetAuctionListRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof GetAuctionListRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {GetAuctionListRequest} GetAuctionListRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    GetAuctionListRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.GetAuctionListRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a GetAuctionListRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof GetAuctionListRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {GetAuctionListRequest} GetAuctionListRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    GetAuctionListRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a GetAuctionListRequest message.\n     * @function verify\n     * @memberof GetAuctionListRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    GetAuctionListRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a GetAuctionListRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof GetAuctionListRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {GetAuctionListRequest} GetAuctionListRequest\n     */\n    GetAuctionListRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.GetAuctionListRequest)\n            return object;\n        return new $root.GetAuctionListRequest();\n    };\n\n    /**\n     * Creates a plain object from a GetAuctionListRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof GetAuctionListRequest\n     * @static\n     * @param {GetAuctionListRequest} message GetAuctionListRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    GetAuctionListRequest.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this GetAuctionListRequest to JSON.\n     * @function toJSON\n     * @memberof GetAuctionListRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    GetAuctionListRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return GetAuctionListRequest;\n})();\n\n$root.GetAuctionListResponse = (function() {\n\n    /**\n     * Properties of a GetAuctionListResponse.\n     * @exports IGetAuctionListResponse\n     * @interface IGetAuctionListResponse\n     * @property {Array.<INAuctionItem>|null} [auctionItems] GetAuctionListResponse auctionItems\n     */\n\n    /**\n     * Constructs a new GetAuctionListResponse.\n     * @exports GetAuctionListResponse\n     * @classdesc Represents a GetAuctionListResponse.\n     * @implements IGetAuctionListResponse\n     * @constructor\n     * @param {IGetAuctionListResponse=} [properties] Properties to set\n     */\n    function GetAuctionListResponse(properties) {\n        this.auctionItems = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * GetAuctionListResponse auctionItems.\n     * @member {Array.<INAuctionItem>} auctionItems\n     * @memberof GetAuctionListResponse\n     * @instance\n     */\n    GetAuctionListResponse.prototype.auctionItems = $util.emptyArray;\n\n    /**\n     * Creates a new GetAuctionListResponse instance using the specified properties.\n     * @function create\n     * @memberof GetAuctionListResponse\n     * @static\n     * @param {IGetAuctionListResponse=} [properties] Properties to set\n     * @returns {GetAuctionListResponse} GetAuctionListResponse instance\n     */\n    GetAuctionListResponse.create = function create(properties) {\n        return new GetAuctionListResponse(properties);\n    };\n\n    /**\n     * Encodes the specified GetAuctionListResponse message. Does not implicitly {@link GetAuctionListResponse.verify|verify} messages.\n     * @function encode\n     * @memberof GetAuctionListResponse\n     * @static\n     * @param {IGetAuctionListResponse} message GetAuctionListResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    GetAuctionListResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.auctionItems != null && message.auctionItems.length)\n            for (var i = 0; i < message.auctionItems.length; ++i)\n                $root.NAuctionItem.encode(message.auctionItems[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified GetAuctionListResponse message, length delimited. Does not implicitly {@link GetAuctionListResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof GetAuctionListResponse\n     * @static\n     * @param {IGetAuctionListResponse} message GetAuctionListResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    GetAuctionListResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a GetAuctionListResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof GetAuctionListResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {GetAuctionListResponse} GetAuctionListResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    GetAuctionListResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.GetAuctionListResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.auctionItems && message.auctionItems.length))\n                    message.auctionItems = [];\n                message.auctionItems.push($root.NAuctionItem.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a GetAuctionListResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof GetAuctionListResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {GetAuctionListResponse} GetAuctionListResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    GetAuctionListResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a GetAuctionListResponse message.\n     * @function verify\n     * @memberof GetAuctionListResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    GetAuctionListResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.auctionItems != null && message.hasOwnProperty(\"auctionItems\")) {\n            if (!Array.isArray(message.auctionItems))\n                return \"auctionItems: array expected\";\n            for (var i = 0; i < message.auctionItems.length; ++i) {\n                var error = $root.NAuctionItem.verify(message.auctionItems[i]);\n                if (error)\n                    return \"auctionItems.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a GetAuctionListResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof GetAuctionListResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {GetAuctionListResponse} GetAuctionListResponse\n     */\n    GetAuctionListResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.GetAuctionListResponse)\n            return object;\n        var message = new $root.GetAuctionListResponse();\n        if (object.auctionItems) {\n            if (!Array.isArray(object.auctionItems))\n                throw TypeError(\".GetAuctionListResponse.auctionItems: array expected\");\n            message.auctionItems = [];\n            for (var i = 0; i < object.auctionItems.length; ++i) {\n                if (typeof object.auctionItems[i] !== \"object\")\n                    throw TypeError(\".GetAuctionListResponse.auctionItems: object expected\");\n                message.auctionItems[i] = $root.NAuctionItem.fromObject(object.auctionItems[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a GetAuctionListResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof GetAuctionListResponse\n     * @static\n     * @param {GetAuctionListResponse} message GetAuctionListResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    GetAuctionListResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.auctionItems = [];\n        if (message.auctionItems && message.auctionItems.length) {\n            object.auctionItems = [];\n            for (var j = 0; j < message.auctionItems.length; ++j)\n                object.auctionItems[j] = $root.NAuctionItem.toObject(message.auctionItems[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this GetAuctionListResponse to JSON.\n     * @function toJSON\n     * @memberof GetAuctionListResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    GetAuctionListResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return GetAuctionListResponse;\n})();\n\n/**\n * TipsWorkType enum.\n * @exports TipsWorkType\n * @enum {string}\n * @property {number} None=0 None value\n * @property {number} AuctionResult=1 AuctionResult value\n * @property {number} DismissRoom=2 DismissRoom value\n * @property {number} KickOutRoom=3 KickOutRoom value\n * @property {number} OutRoom=4 OutRoom value\n */\n$root.TipsWorkType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = \"None\"] = 0;\n    values[valuesById[1] = \"AuctionResult\"] = 1;\n    values[valuesById[2] = \"DismissRoom\"] = 2;\n    values[valuesById[3] = \"KickOutRoom\"] = 3;\n    values[valuesById[4] = \"OutRoom\"] = 4;\n    return values;\n})();\n\n$root.TipsResponse = (function() {\n\n    /**\n     * Properties of a TipsResponse.\n     * @exports ITipsResponse\n     * @interface ITipsResponse\n     * @property {TipsType|null} [tipsType] TipsResponse tipsType\n     * @property {string|null} [content] TipsResponse content\n     * @property {TipsWorkType|null} [tipsWorkType] TipsResponse tipsWorkType\n     */\n\n    /**\n     * Constructs a new TipsResponse.\n     * @exports TipsResponse\n     * @classdesc Represents a TipsResponse.\n     * @implements ITipsResponse\n     * @constructor\n     * @param {ITipsResponse=} [properties] Properties to set\n     */\n    function TipsResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * TipsResponse tipsType.\n     * @member {TipsType} tipsType\n     * @memberof TipsResponse\n     * @instance\n     */\n    TipsResponse.prototype.tipsType = 0;\n\n    /**\n     * TipsResponse content.\n     * @member {string} content\n     * @memberof TipsResponse\n     * @instance\n     */\n    TipsResponse.prototype.content = \"\";\n\n    /**\n     * TipsResponse tipsWorkType.\n     * @member {TipsWorkType} tipsWorkType\n     * @memberof TipsResponse\n     * @instance\n     */\n    TipsResponse.prototype.tipsWorkType = 0;\n\n    /**\n     * Creates a new TipsResponse instance using the specified properties.\n     * @function create\n     * @memberof TipsResponse\n     * @static\n     * @param {ITipsResponse=} [properties] Properties to set\n     * @returns {TipsResponse} TipsResponse instance\n     */\n    TipsResponse.create = function create(properties) {\n        return new TipsResponse(properties);\n    };\n\n    /**\n     * Encodes the specified TipsResponse message. Does not implicitly {@link TipsResponse.verify|verify} messages.\n     * @function encode\n     * @memberof TipsResponse\n     * @static\n     * @param {ITipsResponse} message TipsResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    TipsResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.tipsType != null && message.hasOwnProperty(\"tipsType\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.tipsType);\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.content);\n        if (message.tipsWorkType != null && message.hasOwnProperty(\"tipsWorkType\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.tipsWorkType);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified TipsResponse message, length delimited. Does not implicitly {@link TipsResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof TipsResponse\n     * @static\n     * @param {ITipsResponse} message TipsResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    TipsResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a TipsResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof TipsResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {TipsResponse} TipsResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    TipsResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.TipsResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.tipsType = reader.int32();\n                break;\n            case 2:\n                message.content = reader.string();\n                break;\n            case 3:\n                message.tipsWorkType = reader.int32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a TipsResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof TipsResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {TipsResponse} TipsResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    TipsResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a TipsResponse message.\n     * @function verify\n     * @memberof TipsResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    TipsResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.tipsType != null && message.hasOwnProperty(\"tipsType\"))\n            switch (message.tipsType) {\n            default:\n                return \"tipsType: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            if (!$util.isString(message.content))\n                return \"content: string expected\";\n        if (message.tipsWorkType != null && message.hasOwnProperty(\"tipsWorkType\"))\n            switch (message.tipsWorkType) {\n            default:\n                return \"tipsWorkType: enum value expected\";\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n                break;\n            }\n        return null;\n    };\n\n    /**\n     * Creates a TipsResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof TipsResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {TipsResponse} TipsResponse\n     */\n    TipsResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.TipsResponse)\n            return object;\n        var message = new $root.TipsResponse();\n        switch (object.tipsType) {\n        case \"Tips\":\n        case 0:\n            message.tipsType = 0;\n            break;\n        case \"Popup\":\n        case 1:\n            message.tipsType = 1;\n            break;\n        }\n        if (object.content != null)\n            message.content = String(object.content);\n        switch (object.tipsWorkType) {\n        case \"None\":\n        case 0:\n            message.tipsWorkType = 0;\n            break;\n        case \"AuctionResult\":\n        case 1:\n            message.tipsWorkType = 1;\n            break;\n        case \"DismissRoom\":\n        case 2:\n            message.tipsWorkType = 2;\n            break;\n        case \"KickOutRoom\":\n        case 3:\n            message.tipsWorkType = 3;\n            break;\n        case \"OutRoom\":\n        case 4:\n            message.tipsWorkType = 4;\n            break;\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a TipsResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof TipsResponse\n     * @static\n     * @param {TipsResponse} message TipsResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    TipsResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.tipsType = options.enums === String ? \"Tips\" : 0;\n            object.content = \"\";\n            object.tipsWorkType = options.enums === String ? \"None\" : 0;\n        }\n        if (message.tipsType != null && message.hasOwnProperty(\"tipsType\"))\n            object.tipsType = options.enums === String ? $root.TipsType[message.tipsType] : message.tipsType;\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            object.content = message.content;\n        if (message.tipsWorkType != null && message.hasOwnProperty(\"tipsWorkType\"))\n            object.tipsWorkType = options.enums === String ? $root.TipsWorkType[message.tipsWorkType] : message.tipsWorkType;\n        return object;\n    };\n\n    /**\n     * Converts this TipsResponse to JSON.\n     * @function toJSON\n     * @memberof TipsResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    TipsResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return TipsResponse;\n})();\n\n$root.RoomUser = (function() {\n\n    /**\n     * Properties of a RoomUser.\n     * @exports IRoomUser\n     * @interface IRoomUser\n     * @property {number|null} [userId] RoomUser userId\n     * @property {string|null} [nickName] RoomUser nickName\n     * @property {number|null} [cCharacterId] RoomUser cCharacterId\n     * @property {INUser|null} [user] RoomUser user\n     */\n\n    /**\n     * Constructs a new RoomUser.\n     * @exports RoomUser\n     * @classdesc Represents a RoomUser.\n     * @implements IRoomUser\n     * @constructor\n     * @param {IRoomUser=} [properties] Properties to set\n     */\n    function RoomUser(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * RoomUser userId.\n     * @member {number} userId\n     * @memberof RoomUser\n     * @instance\n     */\n    RoomUser.prototype.userId = 0;\n\n    /**\n     * RoomUser nickName.\n     * @member {string} nickName\n     * @memberof RoomUser\n     * @instance\n     */\n    RoomUser.prototype.nickName = \"\";\n\n    /**\n     * RoomUser cCharacterId.\n     * @member {number} cCharacterId\n     * @memberof RoomUser\n     * @instance\n     */\n    RoomUser.prototype.cCharacterId = 0;\n\n    /**\n     * RoomUser user.\n     * @member {INUser|null|undefined} user\n     * @memberof RoomUser\n     * @instance\n     */\n    RoomUser.prototype.user = null;\n\n    /**\n     * Creates a new RoomUser instance using the specified properties.\n     * @function create\n     * @memberof RoomUser\n     * @static\n     * @param {IRoomUser=} [properties] Properties to set\n     * @returns {RoomUser} RoomUser instance\n     */\n    RoomUser.create = function create(properties) {\n        return new RoomUser(properties);\n    };\n\n    /**\n     * Encodes the specified RoomUser message. Does not implicitly {@link RoomUser.verify|verify} messages.\n     * @function encode\n     * @memberof RoomUser\n     * @static\n     * @param {IRoomUser} message RoomUser message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    RoomUser.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.userId);\n        if (message.nickName != null && message.hasOwnProperty(\"nickName\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.nickName);\n        if (message.cCharacterId != null && message.hasOwnProperty(\"cCharacterId\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.cCharacterId);\n        if (message.user != null && message.hasOwnProperty(\"user\"))\n            $root.NUser.encode(message.user, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified RoomUser message, length delimited. Does not implicitly {@link RoomUser.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof RoomUser\n     * @static\n     * @param {IRoomUser} message RoomUser message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    RoomUser.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a RoomUser message from the specified reader or buffer.\n     * @function decode\n     * @memberof RoomUser\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {RoomUser} RoomUser\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    RoomUser.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.RoomUser();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.userId = reader.int32();\n                break;\n            case 2:\n                message.nickName = reader.string();\n                break;\n            case 3:\n                message.cCharacterId = reader.int32();\n                break;\n            case 4:\n                message.user = $root.NUser.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a RoomUser message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof RoomUser\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {RoomUser} RoomUser\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    RoomUser.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a RoomUser message.\n     * @function verify\n     * @memberof RoomUser\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    RoomUser.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            if (!$util.isInteger(message.userId))\n                return \"userId: integer expected\";\n        if (message.nickName != null && message.hasOwnProperty(\"nickName\"))\n            if (!$util.isString(message.nickName))\n                return \"nickName: string expected\";\n        if (message.cCharacterId != null && message.hasOwnProperty(\"cCharacterId\"))\n            if (!$util.isInteger(message.cCharacterId))\n                return \"cCharacterId: integer expected\";\n        if (message.user != null && message.hasOwnProperty(\"user\")) {\n            var error = $root.NUser.verify(message.user);\n            if (error)\n                return \"user.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a RoomUser message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof RoomUser\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {RoomUser} RoomUser\n     */\n    RoomUser.fromObject = function fromObject(object) {\n        if (object instanceof $root.RoomUser)\n            return object;\n        var message = new $root.RoomUser();\n        if (object.userId != null)\n            message.userId = object.userId | 0;\n        if (object.nickName != null)\n            message.nickName = String(object.nickName);\n        if (object.cCharacterId != null)\n            message.cCharacterId = object.cCharacterId | 0;\n        if (object.user != null) {\n            if (typeof object.user !== \"object\")\n                throw TypeError(\".RoomUser.user: object expected\");\n            message.user = $root.NUser.fromObject(object.user);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a RoomUser message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof RoomUser\n     * @static\n     * @param {RoomUser} message RoomUser\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    RoomUser.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.userId = 0;\n            object.nickName = \"\";\n            object.cCharacterId = 0;\n            object.user = null;\n        }\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            object.userId = message.userId;\n        if (message.nickName != null && message.hasOwnProperty(\"nickName\"))\n            object.nickName = message.nickName;\n        if (message.cCharacterId != null && message.hasOwnProperty(\"cCharacterId\"))\n            object.cCharacterId = message.cCharacterId;\n        if (message.user != null && message.hasOwnProperty(\"user\"))\n            object.user = $root.NUser.toObject(message.user, options);\n        return object;\n    };\n\n    /**\n     * Converts this RoomUser to JSON.\n     * @function toJSON\n     * @memberof RoomUser\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    RoomUser.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return RoomUser;\n})();\n\n/**\n * TeamType enum.\n * @exports TeamType\n * @enum {string}\n * @property {number} My=0 My value\n * @property {number} Enemy=1 Enemy value\n */\n$root.TeamType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = \"My\"] = 0;\n    values[valuesById[1] = \"Enemy\"] = 1;\n    return values;\n})();\n\n/**\n * RoomStatus enum.\n * @exports RoomStatus\n * @enum {string}\n * @property {number} Normal_=0 Normal_ value\n * @property {number} GameIn=1 GameIn value\n */\n$root.RoomStatus = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = \"Normal_\"] = 0;\n    values[valuesById[1] = \"GameIn\"] = 1;\n    return values;\n})();\n\n$root.NRoom = (function() {\n\n    /**\n     * Properties of a NRoom.\n     * @exports INRoom\n     * @interface INRoom\n     * @property {number|null} [roomId] NRoom roomId\n     * @property {number|null} [userId] NRoom userId\n     * @property {Array.<IRoomUser>|null} [my] NRoom my\n     * @property {Array.<IRoomUser>|null} [enemy] NRoom enemy\n     * @property {RoomStatus|null} [roomStatus] NRoom roomStatus\n     * @property {string|null} [ipPortStr] NRoom ipPortStr\n     * @property {number|null} [randomSeed] NRoom randomSeed\n     * @property {string|null} [biFen] NRoom biFen\n     */\n\n    /**\n     * Constructs a new NRoom.\n     * @exports NRoom\n     * @classdesc Represents a NRoom.\n     * @implements INRoom\n     * @constructor\n     * @param {INRoom=} [properties] Properties to set\n     */\n    function NRoom(properties) {\n        this.my = [];\n        this.enemy = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * NRoom roomId.\n     * @member {number} roomId\n     * @memberof NRoom\n     * @instance\n     */\n    NRoom.prototype.roomId = 0;\n\n    /**\n     * NRoom userId.\n     * @member {number} userId\n     * @memberof NRoom\n     * @instance\n     */\n    NRoom.prototype.userId = 0;\n\n    /**\n     * NRoom my.\n     * @member {Array.<IRoomUser>} my\n     * @memberof NRoom\n     * @instance\n     */\n    NRoom.prototype.my = $util.emptyArray;\n\n    /**\n     * NRoom enemy.\n     * @member {Array.<IRoomUser>} enemy\n     * @memberof NRoom\n     * @instance\n     */\n    NRoom.prototype.enemy = $util.emptyArray;\n\n    /**\n     * NRoom roomStatus.\n     * @member {RoomStatus} roomStatus\n     * @memberof NRoom\n     * @instance\n     */\n    NRoom.prototype.roomStatus = 0;\n\n    /**\n     * NRoom ipPortStr.\n     * @member {string} ipPortStr\n     * @memberof NRoom\n     * @instance\n     */\n    NRoom.prototype.ipPortStr = \"\";\n\n    /**\n     * NRoom randomSeed.\n     * @member {number} randomSeed\n     * @memberof NRoom\n     * @instance\n     */\n    NRoom.prototype.randomSeed = 0;\n\n    /**\n     * NRoom biFen.\n     * @member {string} biFen\n     * @memberof NRoom\n     * @instance\n     */\n    NRoom.prototype.biFen = \"\";\n\n    /**\n     * Creates a new NRoom instance using the specified properties.\n     * @function create\n     * @memberof NRoom\n     * @static\n     * @param {INRoom=} [properties] Properties to set\n     * @returns {NRoom} NRoom instance\n     */\n    NRoom.create = function create(properties) {\n        return new NRoom(properties);\n    };\n\n    /**\n     * Encodes the specified NRoom message. Does not implicitly {@link NRoom.verify|verify} messages.\n     * @function encode\n     * @memberof NRoom\n     * @static\n     * @param {INRoom} message NRoom message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NRoom.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.roomId != null && message.hasOwnProperty(\"roomId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.roomId);\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.userId);\n        if (message.my != null && message.my.length)\n            for (var i = 0; i < message.my.length; ++i)\n                $root.RoomUser.encode(message.my[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        if (message.enemy != null && message.enemy.length)\n            for (var i = 0; i < message.enemy.length; ++i)\n                $root.RoomUser.encode(message.enemy[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.roomStatus != null && message.hasOwnProperty(\"roomStatus\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.roomStatus);\n        if (message.ipPortStr != null && message.hasOwnProperty(\"ipPortStr\"))\n            writer.uint32(/* id 6, wireType 2 =*/50).string(message.ipPortStr);\n        if (message.randomSeed != null && message.hasOwnProperty(\"randomSeed\"))\n            writer.uint32(/* id 7, wireType 0 =*/56).int32(message.randomSeed);\n        if (message.biFen != null && message.hasOwnProperty(\"biFen\"))\n            writer.uint32(/* id 8, wireType 2 =*/66).string(message.biFen);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified NRoom message, length delimited. Does not implicitly {@link NRoom.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof NRoom\n     * @static\n     * @param {INRoom} message NRoom message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NRoom.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a NRoom message from the specified reader or buffer.\n     * @function decode\n     * @memberof NRoom\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {NRoom} NRoom\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NRoom.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NRoom();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.roomId = reader.int32();\n                break;\n            case 2:\n                message.userId = reader.int32();\n                break;\n            case 3:\n                if (!(message.my && message.my.length))\n                    message.my = [];\n                message.my.push($root.RoomUser.decode(reader, reader.uint32()));\n                break;\n            case 4:\n                if (!(message.enemy && message.enemy.length))\n                    message.enemy = [];\n                message.enemy.push($root.RoomUser.decode(reader, reader.uint32()));\n                break;\n            case 5:\n                message.roomStatus = reader.int32();\n                break;\n            case 6:\n                message.ipPortStr = reader.string();\n                break;\n            case 7:\n                message.randomSeed = reader.int32();\n                break;\n            case 8:\n                message.biFen = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a NRoom message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof NRoom\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {NRoom} NRoom\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NRoom.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a NRoom message.\n     * @function verify\n     * @memberof NRoom\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    NRoom.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.roomId != null && message.hasOwnProperty(\"roomId\"))\n            if (!$util.isInteger(message.roomId))\n                return \"roomId: integer expected\";\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            if (!$util.isInteger(message.userId))\n                return \"userId: integer expected\";\n        if (message.my != null && message.hasOwnProperty(\"my\")) {\n            if (!Array.isArray(message.my))\n                return \"my: array expected\";\n            for (var i = 0; i < message.my.length; ++i) {\n                var error = $root.RoomUser.verify(message.my[i]);\n                if (error)\n                    return \"my.\" + error;\n            }\n        }\n        if (message.enemy != null && message.hasOwnProperty(\"enemy\")) {\n            if (!Array.isArray(message.enemy))\n                return \"enemy: array expected\";\n            for (var i = 0; i < message.enemy.length; ++i) {\n                var error = $root.RoomUser.verify(message.enemy[i]);\n                if (error)\n                    return \"enemy.\" + error;\n            }\n        }\n        if (message.roomStatus != null && message.hasOwnProperty(\"roomStatus\"))\n            switch (message.roomStatus) {\n            default:\n                return \"roomStatus: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.ipPortStr != null && message.hasOwnProperty(\"ipPortStr\"))\n            if (!$util.isString(message.ipPortStr))\n                return \"ipPortStr: string expected\";\n        if (message.randomSeed != null && message.hasOwnProperty(\"randomSeed\"))\n            if (!$util.isInteger(message.randomSeed))\n                return \"randomSeed: integer expected\";\n        if (message.biFen != null && message.hasOwnProperty(\"biFen\"))\n            if (!$util.isString(message.biFen))\n                return \"biFen: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a NRoom message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof NRoom\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {NRoom} NRoom\n     */\n    NRoom.fromObject = function fromObject(object) {\n        if (object instanceof $root.NRoom)\n            return object;\n        var message = new $root.NRoom();\n        if (object.roomId != null)\n            message.roomId = object.roomId | 0;\n        if (object.userId != null)\n            message.userId = object.userId | 0;\n        if (object.my) {\n            if (!Array.isArray(object.my))\n                throw TypeError(\".NRoom.my: array expected\");\n            message.my = [];\n            for (var i = 0; i < object.my.length; ++i) {\n                if (typeof object.my[i] !== \"object\")\n                    throw TypeError(\".NRoom.my: object expected\");\n                message.my[i] = $root.RoomUser.fromObject(object.my[i]);\n            }\n        }\n        if (object.enemy) {\n            if (!Array.isArray(object.enemy))\n                throw TypeError(\".NRoom.enemy: array expected\");\n            message.enemy = [];\n            for (var i = 0; i < object.enemy.length; ++i) {\n                if (typeof object.enemy[i] !== \"object\")\n                    throw TypeError(\".NRoom.enemy: object expected\");\n                message.enemy[i] = $root.RoomUser.fromObject(object.enemy[i]);\n            }\n        }\n        switch (object.roomStatus) {\n        case \"Normal_\":\n        case 0:\n            message.roomStatus = 0;\n            break;\n        case \"GameIn\":\n        case 1:\n            message.roomStatus = 1;\n            break;\n        }\n        if (object.ipPortStr != null)\n            message.ipPortStr = String(object.ipPortStr);\n        if (object.randomSeed != null)\n            message.randomSeed = object.randomSeed | 0;\n        if (object.biFen != null)\n            message.biFen = String(object.biFen);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a NRoom message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof NRoom\n     * @static\n     * @param {NRoom} message NRoom\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    NRoom.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.my = [];\n            object.enemy = [];\n        }\n        if (options.defaults) {\n            object.roomId = 0;\n            object.userId = 0;\n            object.roomStatus = options.enums === String ? \"Normal_\" : 0;\n            object.ipPortStr = \"\";\n            object.randomSeed = 0;\n            object.biFen = \"\";\n        }\n        if (message.roomId != null && message.hasOwnProperty(\"roomId\"))\n            object.roomId = message.roomId;\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            object.userId = message.userId;\n        if (message.my && message.my.length) {\n            object.my = [];\n            for (var j = 0; j < message.my.length; ++j)\n                object.my[j] = $root.RoomUser.toObject(message.my[j], options);\n        }\n        if (message.enemy && message.enemy.length) {\n            object.enemy = [];\n            for (var j = 0; j < message.enemy.length; ++j)\n                object.enemy[j] = $root.RoomUser.toObject(message.enemy[j], options);\n        }\n        if (message.roomStatus != null && message.hasOwnProperty(\"roomStatus\"))\n            object.roomStatus = options.enums === String ? $root.RoomStatus[message.roomStatus] : message.roomStatus;\n        if (message.ipPortStr != null && message.hasOwnProperty(\"ipPortStr\"))\n            object.ipPortStr = message.ipPortStr;\n        if (message.randomSeed != null && message.hasOwnProperty(\"randomSeed\"))\n            object.randomSeed = message.randomSeed;\n        if (message.biFen != null && message.hasOwnProperty(\"biFen\"))\n            object.biFen = message.biFen;\n        return object;\n    };\n\n    /**\n     * Converts this NRoom to JSON.\n     * @function toJSON\n     * @memberof NRoom\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    NRoom.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return NRoom;\n})();\n\n$root.MyRoomRequest = (function() {\n\n    /**\n     * Properties of a MyRoomRequest.\n     * @exports IMyRoomRequest\n     * @interface IMyRoomRequest\n     */\n\n    /**\n     * Constructs a new MyRoomRequest.\n     * @exports MyRoomRequest\n     * @classdesc Represents a MyRoomRequest.\n     * @implements IMyRoomRequest\n     * @constructor\n     * @param {IMyRoomRequest=} [properties] Properties to set\n     */\n    function MyRoomRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new MyRoomRequest instance using the specified properties.\n     * @function create\n     * @memberof MyRoomRequest\n     * @static\n     * @param {IMyRoomRequest=} [properties] Properties to set\n     * @returns {MyRoomRequest} MyRoomRequest instance\n     */\n    MyRoomRequest.create = function create(properties) {\n        return new MyRoomRequest(properties);\n    };\n\n    /**\n     * Encodes the specified MyRoomRequest message. Does not implicitly {@link MyRoomRequest.verify|verify} messages.\n     * @function encode\n     * @memberof MyRoomRequest\n     * @static\n     * @param {IMyRoomRequest} message MyRoomRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    MyRoomRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified MyRoomRequest message, length delimited. Does not implicitly {@link MyRoomRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof MyRoomRequest\n     * @static\n     * @param {IMyRoomRequest} message MyRoomRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    MyRoomRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a MyRoomRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof MyRoomRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {MyRoomRequest} MyRoomRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    MyRoomRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.MyRoomRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a MyRoomRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof MyRoomRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {MyRoomRequest} MyRoomRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    MyRoomRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a MyRoomRequest message.\n     * @function verify\n     * @memberof MyRoomRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    MyRoomRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a MyRoomRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof MyRoomRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {MyRoomRequest} MyRoomRequest\n     */\n    MyRoomRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.MyRoomRequest)\n            return object;\n        return new $root.MyRoomRequest();\n    };\n\n    /**\n     * Creates a plain object from a MyRoomRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof MyRoomRequest\n     * @static\n     * @param {MyRoomRequest} message MyRoomRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    MyRoomRequest.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this MyRoomRequest to JSON.\n     * @function toJSON\n     * @memberof MyRoomRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    MyRoomRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return MyRoomRequest;\n})();\n\n$root.MyRoomResponse = (function() {\n\n    /**\n     * Properties of a MyRoomResponse.\n     * @exports IMyRoomResponse\n     * @interface IMyRoomResponse\n     * @property {INRoom|null} [room] MyRoomResponse room\n     */\n\n    /**\n     * Constructs a new MyRoomResponse.\n     * @exports MyRoomResponse\n     * @classdesc Represents a MyRoomResponse.\n     * @implements IMyRoomResponse\n     * @constructor\n     * @param {IMyRoomResponse=} [properties] Properties to set\n     */\n    function MyRoomResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * MyRoomResponse room.\n     * @member {INRoom|null|undefined} room\n     * @memberof MyRoomResponse\n     * @instance\n     */\n    MyRoomResponse.prototype.room = null;\n\n    /**\n     * Creates a new MyRoomResponse instance using the specified properties.\n     * @function create\n     * @memberof MyRoomResponse\n     * @static\n     * @param {IMyRoomResponse=} [properties] Properties to set\n     * @returns {MyRoomResponse} MyRoomResponse instance\n     */\n    MyRoomResponse.create = function create(properties) {\n        return new MyRoomResponse(properties);\n    };\n\n    /**\n     * Encodes the specified MyRoomResponse message. Does not implicitly {@link MyRoomResponse.verify|verify} messages.\n     * @function encode\n     * @memberof MyRoomResponse\n     * @static\n     * @param {IMyRoomResponse} message MyRoomResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    MyRoomResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.room != null && message.hasOwnProperty(\"room\"))\n            $root.NRoom.encode(message.room, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified MyRoomResponse message, length delimited. Does not implicitly {@link MyRoomResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof MyRoomResponse\n     * @static\n     * @param {IMyRoomResponse} message MyRoomResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    MyRoomResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a MyRoomResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof MyRoomResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {MyRoomResponse} MyRoomResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    MyRoomResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.MyRoomResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.room = $root.NRoom.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a MyRoomResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof MyRoomResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {MyRoomResponse} MyRoomResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    MyRoomResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a MyRoomResponse message.\n     * @function verify\n     * @memberof MyRoomResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    MyRoomResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.room != null && message.hasOwnProperty(\"room\")) {\n            var error = $root.NRoom.verify(message.room);\n            if (error)\n                return \"room.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a MyRoomResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof MyRoomResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {MyRoomResponse} MyRoomResponse\n     */\n    MyRoomResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.MyRoomResponse)\n            return object;\n        var message = new $root.MyRoomResponse();\n        if (object.room != null) {\n            if (typeof object.room !== \"object\")\n                throw TypeError(\".MyRoomResponse.room: object expected\");\n            message.room = $root.NRoom.fromObject(object.room);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a MyRoomResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof MyRoomResponse\n     * @static\n     * @param {MyRoomResponse} message MyRoomResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    MyRoomResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.room = null;\n        if (message.room != null && message.hasOwnProperty(\"room\"))\n            object.room = $root.NRoom.toObject(message.room, options);\n        return object;\n    };\n\n    /**\n     * Converts this MyRoomResponse to JSON.\n     * @function toJSON\n     * @memberof MyRoomResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    MyRoomResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return MyRoomResponse;\n})();\n\n$root.InviteRequest = (function() {\n\n    /**\n     * Properties of an InviteRequest.\n     * @exports IInviteRequest\n     * @interface IInviteRequest\n     * @property {number|null} [fromUserId] InviteRequest fromUserId\n     * @property {string|null} [fromNickName] InviteRequest fromNickName\n     * @property {number|null} [toUserId] InviteRequest toUserId\n     * @property {string|null} [toNickName] InviteRequest toNickName\n     * @property {TeamType|null} [teamType] InviteRequest teamType\n     */\n\n    /**\n     * Constructs a new InviteRequest.\n     * @exports InviteRequest\n     * @classdesc Represents an InviteRequest.\n     * @implements IInviteRequest\n     * @constructor\n     * @param {IInviteRequest=} [properties] Properties to set\n     */\n    function InviteRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * InviteRequest fromUserId.\n     * @member {number} fromUserId\n     * @memberof InviteRequest\n     * @instance\n     */\n    InviteRequest.prototype.fromUserId = 0;\n\n    /**\n     * InviteRequest fromNickName.\n     * @member {string} fromNickName\n     * @memberof InviteRequest\n     * @instance\n     */\n    InviteRequest.prototype.fromNickName = \"\";\n\n    /**\n     * InviteRequest toUserId.\n     * @member {number} toUserId\n     * @memberof InviteRequest\n     * @instance\n     */\n    InviteRequest.prototype.toUserId = 0;\n\n    /**\n     * InviteRequest toNickName.\n     * @member {string} toNickName\n     * @memberof InviteRequest\n     * @instance\n     */\n    InviteRequest.prototype.toNickName = \"\";\n\n    /**\n     * InviteRequest teamType.\n     * @member {TeamType} teamType\n     * @memberof InviteRequest\n     * @instance\n     */\n    InviteRequest.prototype.teamType = 0;\n\n    /**\n     * Creates a new InviteRequest instance using the specified properties.\n     * @function create\n     * @memberof InviteRequest\n     * @static\n     * @param {IInviteRequest=} [properties] Properties to set\n     * @returns {InviteRequest} InviteRequest instance\n     */\n    InviteRequest.create = function create(properties) {\n        return new InviteRequest(properties);\n    };\n\n    /**\n     * Encodes the specified InviteRequest message. Does not implicitly {@link InviteRequest.verify|verify} messages.\n     * @function encode\n     * @memberof InviteRequest\n     * @static\n     * @param {IInviteRequest} message InviteRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    InviteRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.fromUserId != null && message.hasOwnProperty(\"fromUserId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.fromUserId);\n        if (message.fromNickName != null && message.hasOwnProperty(\"fromNickName\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.fromNickName);\n        if (message.toUserId != null && message.hasOwnProperty(\"toUserId\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.toUserId);\n        if (message.toNickName != null && message.hasOwnProperty(\"toNickName\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.toNickName);\n        if (message.teamType != null && message.hasOwnProperty(\"teamType\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.teamType);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified InviteRequest message, length delimited. Does not implicitly {@link InviteRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof InviteRequest\n     * @static\n     * @param {IInviteRequest} message InviteRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    InviteRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an InviteRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof InviteRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {InviteRequest} InviteRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    InviteRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.InviteRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.fromUserId = reader.int32();\n                break;\n            case 2:\n                message.fromNickName = reader.string();\n                break;\n            case 3:\n                message.toUserId = reader.int32();\n                break;\n            case 4:\n                message.toNickName = reader.string();\n                break;\n            case 5:\n                message.teamType = reader.int32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an InviteRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof InviteRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {InviteRequest} InviteRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    InviteRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an InviteRequest message.\n     * @function verify\n     * @memberof InviteRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    InviteRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.fromUserId != null && message.hasOwnProperty(\"fromUserId\"))\n            if (!$util.isInteger(message.fromUserId))\n                return \"fromUserId: integer expected\";\n        if (message.fromNickName != null && message.hasOwnProperty(\"fromNickName\"))\n            if (!$util.isString(message.fromNickName))\n                return \"fromNickName: string expected\";\n        if (message.toUserId != null && message.hasOwnProperty(\"toUserId\"))\n            if (!$util.isInteger(message.toUserId))\n                return \"toUserId: integer expected\";\n        if (message.toNickName != null && message.hasOwnProperty(\"toNickName\"))\n            if (!$util.isString(message.toNickName))\n                return \"toNickName: string expected\";\n        if (message.teamType != null && message.hasOwnProperty(\"teamType\"))\n            switch (message.teamType) {\n            default:\n                return \"teamType: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        return null;\n    };\n\n    /**\n     * Creates an InviteRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof InviteRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {InviteRequest} InviteRequest\n     */\n    InviteRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.InviteRequest)\n            return object;\n        var message = new $root.InviteRequest();\n        if (object.fromUserId != null)\n            message.fromUserId = object.fromUserId | 0;\n        if (object.fromNickName != null)\n            message.fromNickName = String(object.fromNickName);\n        if (object.toUserId != null)\n            message.toUserId = object.toUserId | 0;\n        if (object.toNickName != null)\n            message.toNickName = String(object.toNickName);\n        switch (object.teamType) {\n        case \"My\":\n        case 0:\n            message.teamType = 0;\n            break;\n        case \"Enemy\":\n        case 1:\n            message.teamType = 1;\n            break;\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an InviteRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof InviteRequest\n     * @static\n     * @param {InviteRequest} message InviteRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    InviteRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.fromUserId = 0;\n            object.fromNickName = \"\";\n            object.toUserId = 0;\n            object.toNickName = \"\";\n            object.teamType = options.enums === String ? \"My\" : 0;\n        }\n        if (message.fromUserId != null && message.hasOwnProperty(\"fromUserId\"))\n            object.fromUserId = message.fromUserId;\n        if (message.fromNickName != null && message.hasOwnProperty(\"fromNickName\"))\n            object.fromNickName = message.fromNickName;\n        if (message.toUserId != null && message.hasOwnProperty(\"toUserId\"))\n            object.toUserId = message.toUserId;\n        if (message.toNickName != null && message.hasOwnProperty(\"toNickName\"))\n            object.toNickName = message.toNickName;\n        if (message.teamType != null && message.hasOwnProperty(\"teamType\"))\n            object.teamType = options.enums === String ? $root.TeamType[message.teamType] : message.teamType;\n        return object;\n    };\n\n    /**\n     * Converts this InviteRequest to JSON.\n     * @function toJSON\n     * @memberof InviteRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    InviteRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return InviteRequest;\n})();\n\n$root.InviteResponse = (function() {\n\n    /**\n     * Properties of an InviteResponse.\n     * @exports IInviteResponse\n     * @interface IInviteResponse\n     * @property {Result|null} [result] InviteResponse result\n     * @property {string|null} [errormsg] InviteResponse errormsg\n     * @property {IInviteRequest|null} [inviteRequest] InviteResponse inviteRequest\n     */\n\n    /**\n     * Constructs a new InviteResponse.\n     * @exports InviteResponse\n     * @classdesc Represents an InviteResponse.\n     * @implements IInviteResponse\n     * @constructor\n     * @param {IInviteResponse=} [properties] Properties to set\n     */\n    function InviteResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * InviteResponse result.\n     * @member {Result} result\n     * @memberof InviteResponse\n     * @instance\n     */\n    InviteResponse.prototype.result = 0;\n\n    /**\n     * InviteResponse errormsg.\n     * @member {string} errormsg\n     * @memberof InviteResponse\n     * @instance\n     */\n    InviteResponse.prototype.errormsg = \"\";\n\n    /**\n     * InviteResponse inviteRequest.\n     * @member {IInviteRequest|null|undefined} inviteRequest\n     * @memberof InviteResponse\n     * @instance\n     */\n    InviteResponse.prototype.inviteRequest = null;\n\n    /**\n     * Creates a new InviteResponse instance using the specified properties.\n     * @function create\n     * @memberof InviteResponse\n     * @static\n     * @param {IInviteResponse=} [properties] Properties to set\n     * @returns {InviteResponse} InviteResponse instance\n     */\n    InviteResponse.create = function create(properties) {\n        return new InviteResponse(properties);\n    };\n\n    /**\n     * Encodes the specified InviteResponse message. Does not implicitly {@link InviteResponse.verify|verify} messages.\n     * @function encode\n     * @memberof InviteResponse\n     * @static\n     * @param {IInviteResponse} message InviteResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    InviteResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        if (message.inviteRequest != null && message.hasOwnProperty(\"inviteRequest\"))\n            $root.InviteRequest.encode(message.inviteRequest, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified InviteResponse message, length delimited. Does not implicitly {@link InviteResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof InviteResponse\n     * @static\n     * @param {IInviteResponse} message InviteResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    InviteResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an InviteResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof InviteResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {InviteResponse} InviteResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    InviteResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.InviteResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            case 3:\n                message.inviteRequest = $root.InviteRequest.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an InviteResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof InviteResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {InviteResponse} InviteResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    InviteResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an InviteResponse message.\n     * @function verify\n     * @memberof InviteResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    InviteResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        if (message.inviteRequest != null && message.hasOwnProperty(\"inviteRequest\")) {\n            var error = $root.InviteRequest.verify(message.inviteRequest);\n            if (error)\n                return \"inviteRequest.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates an InviteResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof InviteResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {InviteResponse} InviteResponse\n     */\n    InviteResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.InviteResponse)\n            return object;\n        var message = new $root.InviteResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        if (object.inviteRequest != null) {\n            if (typeof object.inviteRequest !== \"object\")\n                throw TypeError(\".InviteResponse.inviteRequest: object expected\");\n            message.inviteRequest = $root.InviteRequest.fromObject(object.inviteRequest);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an InviteResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof InviteResponse\n     * @static\n     * @param {InviteResponse} message InviteResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    InviteResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n            object.inviteRequest = null;\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        if (message.inviteRequest != null && message.hasOwnProperty(\"inviteRequest\"))\n            object.inviteRequest = $root.InviteRequest.toObject(message.inviteRequest, options);\n        return object;\n    };\n\n    /**\n     * Converts this InviteResponse to JSON.\n     * @function toJSON\n     * @memberof InviteResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    InviteResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return InviteResponse;\n})();\n\n$root.KickOutRequest = (function() {\n\n    /**\n     * Properties of a KickOutRequest.\n     * @exports IKickOutRequest\n     * @interface IKickOutRequest\n     * @property {number|null} [userId] KickOutRequest userId\n     */\n\n    /**\n     * Constructs a new KickOutRequest.\n     * @exports KickOutRequest\n     * @classdesc Represents a KickOutRequest.\n     * @implements IKickOutRequest\n     * @constructor\n     * @param {IKickOutRequest=} [properties] Properties to set\n     */\n    function KickOutRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * KickOutRequest userId.\n     * @member {number} userId\n     * @memberof KickOutRequest\n     * @instance\n     */\n    KickOutRequest.prototype.userId = 0;\n\n    /**\n     * Creates a new KickOutRequest instance using the specified properties.\n     * @function create\n     * @memberof KickOutRequest\n     * @static\n     * @param {IKickOutRequest=} [properties] Properties to set\n     * @returns {KickOutRequest} KickOutRequest instance\n     */\n    KickOutRequest.create = function create(properties) {\n        return new KickOutRequest(properties);\n    };\n\n    /**\n     * Encodes the specified KickOutRequest message. Does not implicitly {@link KickOutRequest.verify|verify} messages.\n     * @function encode\n     * @memberof KickOutRequest\n     * @static\n     * @param {IKickOutRequest} message KickOutRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    KickOutRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.userId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified KickOutRequest message, length delimited. Does not implicitly {@link KickOutRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof KickOutRequest\n     * @static\n     * @param {IKickOutRequest} message KickOutRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    KickOutRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a KickOutRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof KickOutRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {KickOutRequest} KickOutRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    KickOutRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.KickOutRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.userId = reader.int32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a KickOutRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof KickOutRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {KickOutRequest} KickOutRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    KickOutRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a KickOutRequest message.\n     * @function verify\n     * @memberof KickOutRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    KickOutRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            if (!$util.isInteger(message.userId))\n                return \"userId: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a KickOutRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof KickOutRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {KickOutRequest} KickOutRequest\n     */\n    KickOutRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.KickOutRequest)\n            return object;\n        var message = new $root.KickOutRequest();\n        if (object.userId != null)\n            message.userId = object.userId | 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a KickOutRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof KickOutRequest\n     * @static\n     * @param {KickOutRequest} message KickOutRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    KickOutRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.userId = 0;\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            object.userId = message.userId;\n        return object;\n    };\n\n    /**\n     * Converts this KickOutRequest to JSON.\n     * @function toJSON\n     * @memberof KickOutRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    KickOutRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return KickOutRequest;\n})();\n\n$root.KickOutResponse = (function() {\n\n    /**\n     * Properties of a KickOutResponse.\n     * @exports IKickOutResponse\n     * @interface IKickOutResponse\n     * @property {Result|null} [result] KickOutResponse result\n     * @property {string|null} [errormsg] KickOutResponse errormsg\n     */\n\n    /**\n     * Constructs a new KickOutResponse.\n     * @exports KickOutResponse\n     * @classdesc Represents a KickOutResponse.\n     * @implements IKickOutResponse\n     * @constructor\n     * @param {IKickOutResponse=} [properties] Properties to set\n     */\n    function KickOutResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * KickOutResponse result.\n     * @member {Result} result\n     * @memberof KickOutResponse\n     * @instance\n     */\n    KickOutResponse.prototype.result = 0;\n\n    /**\n     * KickOutResponse errormsg.\n     * @member {string} errormsg\n     * @memberof KickOutResponse\n     * @instance\n     */\n    KickOutResponse.prototype.errormsg = \"\";\n\n    /**\n     * Creates a new KickOutResponse instance using the specified properties.\n     * @function create\n     * @memberof KickOutResponse\n     * @static\n     * @param {IKickOutResponse=} [properties] Properties to set\n     * @returns {KickOutResponse} KickOutResponse instance\n     */\n    KickOutResponse.create = function create(properties) {\n        return new KickOutResponse(properties);\n    };\n\n    /**\n     * Encodes the specified KickOutResponse message. Does not implicitly {@link KickOutResponse.verify|verify} messages.\n     * @function encode\n     * @memberof KickOutResponse\n     * @static\n     * @param {IKickOutResponse} message KickOutResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    KickOutResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified KickOutResponse message, length delimited. Does not implicitly {@link KickOutResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof KickOutResponse\n     * @static\n     * @param {IKickOutResponse} message KickOutResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    KickOutResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a KickOutResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof KickOutResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {KickOutResponse} KickOutResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    KickOutResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.KickOutResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a KickOutResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof KickOutResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {KickOutResponse} KickOutResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    KickOutResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a KickOutResponse message.\n     * @function verify\n     * @memberof KickOutResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    KickOutResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a KickOutResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof KickOutResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {KickOutResponse} KickOutResponse\n     */\n    KickOutResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.KickOutResponse)\n            return object;\n        var message = new $root.KickOutResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a KickOutResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof KickOutResponse\n     * @static\n     * @param {KickOutResponse} message KickOutResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    KickOutResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        return object;\n    };\n\n    /**\n     * Converts this KickOutResponse to JSON.\n     * @function toJSON\n     * @memberof KickOutResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    KickOutResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return KickOutResponse;\n})();\n\n$root.RoomStartGameRequest = (function() {\n\n    /**\n     * Properties of a RoomStartGameRequest.\n     * @exports IRoomStartGameRequest\n     * @interface IRoomStartGameRequest\n     */\n\n    /**\n     * Constructs a new RoomStartGameRequest.\n     * @exports RoomStartGameRequest\n     * @classdesc Represents a RoomStartGameRequest.\n     * @implements IRoomStartGameRequest\n     * @constructor\n     * @param {IRoomStartGameRequest=} [properties] Properties to set\n     */\n    function RoomStartGameRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new RoomStartGameRequest instance using the specified properties.\n     * @function create\n     * @memberof RoomStartGameRequest\n     * @static\n     * @param {IRoomStartGameRequest=} [properties] Properties to set\n     * @returns {RoomStartGameRequest} RoomStartGameRequest instance\n     */\n    RoomStartGameRequest.create = function create(properties) {\n        return new RoomStartGameRequest(properties);\n    };\n\n    /**\n     * Encodes the specified RoomStartGameRequest message. Does not implicitly {@link RoomStartGameRequest.verify|verify} messages.\n     * @function encode\n     * @memberof RoomStartGameRequest\n     * @static\n     * @param {IRoomStartGameRequest} message RoomStartGameRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    RoomStartGameRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified RoomStartGameRequest message, length delimited. Does not implicitly {@link RoomStartGameRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof RoomStartGameRequest\n     * @static\n     * @param {IRoomStartGameRequest} message RoomStartGameRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    RoomStartGameRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a RoomStartGameRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof RoomStartGameRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {RoomStartGameRequest} RoomStartGameRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    RoomStartGameRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.RoomStartGameRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a RoomStartGameRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof RoomStartGameRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {RoomStartGameRequest} RoomStartGameRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    RoomStartGameRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a RoomStartGameRequest message.\n     * @function verify\n     * @memberof RoomStartGameRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    RoomStartGameRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a RoomStartGameRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof RoomStartGameRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {RoomStartGameRequest} RoomStartGameRequest\n     */\n    RoomStartGameRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.RoomStartGameRequest)\n            return object;\n        return new $root.RoomStartGameRequest();\n    };\n\n    /**\n     * Creates a plain object from a RoomStartGameRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof RoomStartGameRequest\n     * @static\n     * @param {RoomStartGameRequest} message RoomStartGameRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    RoomStartGameRequest.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this RoomStartGameRequest to JSON.\n     * @function toJSON\n     * @memberof RoomStartGameRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    RoomStartGameRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return RoomStartGameRequest;\n})();\n\n$root.RoomStartGameResponse = (function() {\n\n    /**\n     * Properties of a RoomStartGameResponse.\n     * @exports IRoomStartGameResponse\n     * @interface IRoomStartGameResponse\n     * @property {Result|null} [result] RoomStartGameResponse result\n     * @property {string|null} [errormsg] RoomStartGameResponse errormsg\n     */\n\n    /**\n     * Constructs a new RoomStartGameResponse.\n     * @exports RoomStartGameResponse\n     * @classdesc Represents a RoomStartGameResponse.\n     * @implements IRoomStartGameResponse\n     * @constructor\n     * @param {IRoomStartGameResponse=} [properties] Properties to set\n     */\n    function RoomStartGameResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * RoomStartGameResponse result.\n     * @member {Result} result\n     * @memberof RoomStartGameResponse\n     * @instance\n     */\n    RoomStartGameResponse.prototype.result = 0;\n\n    /**\n     * RoomStartGameResponse errormsg.\n     * @member {string} errormsg\n     * @memberof RoomStartGameResponse\n     * @instance\n     */\n    RoomStartGameResponse.prototype.errormsg = \"\";\n\n    /**\n     * Creates a new RoomStartGameResponse instance using the specified properties.\n     * @function create\n     * @memberof RoomStartGameResponse\n     * @static\n     * @param {IRoomStartGameResponse=} [properties] Properties to set\n     * @returns {RoomStartGameResponse} RoomStartGameResponse instance\n     */\n    RoomStartGameResponse.create = function create(properties) {\n        return new RoomStartGameResponse(properties);\n    };\n\n    /**\n     * Encodes the specified RoomStartGameResponse message. Does not implicitly {@link RoomStartGameResponse.verify|verify} messages.\n     * @function encode\n     * @memberof RoomStartGameResponse\n     * @static\n     * @param {IRoomStartGameResponse} message RoomStartGameResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    RoomStartGameResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified RoomStartGameResponse message, length delimited. Does not implicitly {@link RoomStartGameResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof RoomStartGameResponse\n     * @static\n     * @param {IRoomStartGameResponse} message RoomStartGameResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    RoomStartGameResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a RoomStartGameResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof RoomStartGameResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {RoomStartGameResponse} RoomStartGameResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    RoomStartGameResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.RoomStartGameResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a RoomStartGameResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof RoomStartGameResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {RoomStartGameResponse} RoomStartGameResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    RoomStartGameResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a RoomStartGameResponse message.\n     * @function verify\n     * @memberof RoomStartGameResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    RoomStartGameResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a RoomStartGameResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof RoomStartGameResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {RoomStartGameResponse} RoomStartGameResponse\n     */\n    RoomStartGameResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.RoomStartGameResponse)\n            return object;\n        var message = new $root.RoomStartGameResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a RoomStartGameResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof RoomStartGameResponse\n     * @static\n     * @param {RoomStartGameResponse} message RoomStartGameResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    RoomStartGameResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        return object;\n    };\n\n    /**\n     * Converts this RoomStartGameResponse to JSON.\n     * @function toJSON\n     * @memberof RoomStartGameResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    RoomStartGameResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return RoomStartGameResponse;\n})();\n\n$root.NickNameSearchRequest = (function() {\n\n    /**\n     * Properties of a NickNameSearchRequest.\n     * @exports INickNameSearchRequest\n     * @interface INickNameSearchRequest\n     * @property {string|null} [nickName] NickNameSearchRequest nickName\n     */\n\n    /**\n     * Constructs a new NickNameSearchRequest.\n     * @exports NickNameSearchRequest\n     * @classdesc Represents a NickNameSearchRequest.\n     * @implements INickNameSearchRequest\n     * @constructor\n     * @param {INickNameSearchRequest=} [properties] Properties to set\n     */\n    function NickNameSearchRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * NickNameSearchRequest nickName.\n     * @member {string} nickName\n     * @memberof NickNameSearchRequest\n     * @instance\n     */\n    NickNameSearchRequest.prototype.nickName = \"\";\n\n    /**\n     * Creates a new NickNameSearchRequest instance using the specified properties.\n     * @function create\n     * @memberof NickNameSearchRequest\n     * @static\n     * @param {INickNameSearchRequest=} [properties] Properties to set\n     * @returns {NickNameSearchRequest} NickNameSearchRequest instance\n     */\n    NickNameSearchRequest.create = function create(properties) {\n        return new NickNameSearchRequest(properties);\n    };\n\n    /**\n     * Encodes the specified NickNameSearchRequest message. Does not implicitly {@link NickNameSearchRequest.verify|verify} messages.\n     * @function encode\n     * @memberof NickNameSearchRequest\n     * @static\n     * @param {INickNameSearchRequest} message NickNameSearchRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NickNameSearchRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.nickName != null && message.hasOwnProperty(\"nickName\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.nickName);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified NickNameSearchRequest message, length delimited. Does not implicitly {@link NickNameSearchRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof NickNameSearchRequest\n     * @static\n     * @param {INickNameSearchRequest} message NickNameSearchRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NickNameSearchRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a NickNameSearchRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof NickNameSearchRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {NickNameSearchRequest} NickNameSearchRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NickNameSearchRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NickNameSearchRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.nickName = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a NickNameSearchRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof NickNameSearchRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {NickNameSearchRequest} NickNameSearchRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NickNameSearchRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a NickNameSearchRequest message.\n     * @function verify\n     * @memberof NickNameSearchRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    NickNameSearchRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.nickName != null && message.hasOwnProperty(\"nickName\"))\n            if (!$util.isString(message.nickName))\n                return \"nickName: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a NickNameSearchRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof NickNameSearchRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {NickNameSearchRequest} NickNameSearchRequest\n     */\n    NickNameSearchRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.NickNameSearchRequest)\n            return object;\n        var message = new $root.NickNameSearchRequest();\n        if (object.nickName != null)\n            message.nickName = String(object.nickName);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a NickNameSearchRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof NickNameSearchRequest\n     * @static\n     * @param {NickNameSearchRequest} message NickNameSearchRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    NickNameSearchRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.nickName = \"\";\n        if (message.nickName != null && message.hasOwnProperty(\"nickName\"))\n            object.nickName = message.nickName;\n        return object;\n    };\n\n    /**\n     * Converts this NickNameSearchRequest to JSON.\n     * @function toJSON\n     * @memberof NickNameSearchRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    NickNameSearchRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return NickNameSearchRequest;\n})();\n\n$root.NickNameSearchResponse = (function() {\n\n    /**\n     * Properties of a NickNameSearchResponse.\n     * @exports INickNameSearchResponse\n     * @interface INickNameSearchResponse\n     * @property {Array.<IRoomUser>|null} [roomUser] NickNameSearchResponse roomUser\n     */\n\n    /**\n     * Constructs a new NickNameSearchResponse.\n     * @exports NickNameSearchResponse\n     * @classdesc Represents a NickNameSearchResponse.\n     * @implements INickNameSearchResponse\n     * @constructor\n     * @param {INickNameSearchResponse=} [properties] Properties to set\n     */\n    function NickNameSearchResponse(properties) {\n        this.roomUser = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * NickNameSearchResponse roomUser.\n     * @member {Array.<IRoomUser>} roomUser\n     * @memberof NickNameSearchResponse\n     * @instance\n     */\n    NickNameSearchResponse.prototype.roomUser = $util.emptyArray;\n\n    /**\n     * Creates a new NickNameSearchResponse instance using the specified properties.\n     * @function create\n     * @memberof NickNameSearchResponse\n     * @static\n     * @param {INickNameSearchResponse=} [properties] Properties to set\n     * @returns {NickNameSearchResponse} NickNameSearchResponse instance\n     */\n    NickNameSearchResponse.create = function create(properties) {\n        return new NickNameSearchResponse(properties);\n    };\n\n    /**\n     * Encodes the specified NickNameSearchResponse message. Does not implicitly {@link NickNameSearchResponse.verify|verify} messages.\n     * @function encode\n     * @memberof NickNameSearchResponse\n     * @static\n     * @param {INickNameSearchResponse} message NickNameSearchResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NickNameSearchResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.roomUser != null && message.roomUser.length)\n            for (var i = 0; i < message.roomUser.length; ++i)\n                $root.RoomUser.encode(message.roomUser[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified NickNameSearchResponse message, length delimited. Does not implicitly {@link NickNameSearchResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof NickNameSearchResponse\n     * @static\n     * @param {INickNameSearchResponse} message NickNameSearchResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NickNameSearchResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a NickNameSearchResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof NickNameSearchResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {NickNameSearchResponse} NickNameSearchResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NickNameSearchResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NickNameSearchResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.roomUser && message.roomUser.length))\n                    message.roomUser = [];\n                message.roomUser.push($root.RoomUser.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a NickNameSearchResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof NickNameSearchResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {NickNameSearchResponse} NickNameSearchResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NickNameSearchResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a NickNameSearchResponse message.\n     * @function verify\n     * @memberof NickNameSearchResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    NickNameSearchResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.roomUser != null && message.hasOwnProperty(\"roomUser\")) {\n            if (!Array.isArray(message.roomUser))\n                return \"roomUser: array expected\";\n            for (var i = 0; i < message.roomUser.length; ++i) {\n                var error = $root.RoomUser.verify(message.roomUser[i]);\n                if (error)\n                    return \"roomUser.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a NickNameSearchResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof NickNameSearchResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {NickNameSearchResponse} NickNameSearchResponse\n     */\n    NickNameSearchResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.NickNameSearchResponse)\n            return object;\n        var message = new $root.NickNameSearchResponse();\n        if (object.roomUser) {\n            if (!Array.isArray(object.roomUser))\n                throw TypeError(\".NickNameSearchResponse.roomUser: array expected\");\n            message.roomUser = [];\n            for (var i = 0; i < object.roomUser.length; ++i) {\n                if (typeof object.roomUser[i] !== \"object\")\n                    throw TypeError(\".NickNameSearchResponse.roomUser: object expected\");\n                message.roomUser[i] = $root.RoomUser.fromObject(object.roomUser[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a NickNameSearchResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof NickNameSearchResponse\n     * @static\n     * @param {NickNameSearchResponse} message NickNameSearchResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    NickNameSearchResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.roomUser = [];\n        if (message.roomUser && message.roomUser.length) {\n            object.roomUser = [];\n            for (var j = 0; j < message.roomUser.length; ++j)\n                object.roomUser[j] = $root.RoomUser.toObject(message.roomUser[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this NickNameSearchResponse to JSON.\n     * @function toJSON\n     * @memberof NickNameSearchResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    NickNameSearchResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return NickNameSearchResponse;\n})();\n\n$root.AddRoomRequest = (function() {\n\n    /**\n     * Properties of an AddRoomRequest.\n     * @exports IAddRoomRequest\n     * @interface IAddRoomRequest\n     * @property {number|null} [roomId] AddRoomRequest roomId\n     * @property {number|null} [fromUserId] AddRoomRequest fromUserId\n     * @property {string|null} [fromNickName] AddRoomRequest fromNickName\n     */\n\n    /**\n     * Constructs a new AddRoomRequest.\n     * @exports AddRoomRequest\n     * @classdesc Represents an AddRoomRequest.\n     * @implements IAddRoomRequest\n     * @constructor\n     * @param {IAddRoomRequest=} [properties] Properties to set\n     */\n    function AddRoomRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * AddRoomRequest roomId.\n     * @member {number} roomId\n     * @memberof AddRoomRequest\n     * @instance\n     */\n    AddRoomRequest.prototype.roomId = 0;\n\n    /**\n     * AddRoomRequest fromUserId.\n     * @member {number} fromUserId\n     * @memberof AddRoomRequest\n     * @instance\n     */\n    AddRoomRequest.prototype.fromUserId = 0;\n\n    /**\n     * AddRoomRequest fromNickName.\n     * @member {string} fromNickName\n     * @memberof AddRoomRequest\n     * @instance\n     */\n    AddRoomRequest.prototype.fromNickName = \"\";\n\n    /**\n     * Creates a new AddRoomRequest instance using the specified properties.\n     * @function create\n     * @memberof AddRoomRequest\n     * @static\n     * @param {IAddRoomRequest=} [properties] Properties to set\n     * @returns {AddRoomRequest} AddRoomRequest instance\n     */\n    AddRoomRequest.create = function create(properties) {\n        return new AddRoomRequest(properties);\n    };\n\n    /**\n     * Encodes the specified AddRoomRequest message. Does not implicitly {@link AddRoomRequest.verify|verify} messages.\n     * @function encode\n     * @memberof AddRoomRequest\n     * @static\n     * @param {IAddRoomRequest} message AddRoomRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AddRoomRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.roomId != null && message.hasOwnProperty(\"roomId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.roomId);\n        if (message.fromUserId != null && message.hasOwnProperty(\"fromUserId\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.fromUserId);\n        if (message.fromNickName != null && message.hasOwnProperty(\"fromNickName\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.fromNickName);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified AddRoomRequest message, length delimited. Does not implicitly {@link AddRoomRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof AddRoomRequest\n     * @static\n     * @param {IAddRoomRequest} message AddRoomRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AddRoomRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an AddRoomRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof AddRoomRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {AddRoomRequest} AddRoomRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AddRoomRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.AddRoomRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.roomId = reader.int32();\n                break;\n            case 2:\n                message.fromUserId = reader.int32();\n                break;\n            case 3:\n                message.fromNickName = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an AddRoomRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof AddRoomRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {AddRoomRequest} AddRoomRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AddRoomRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an AddRoomRequest message.\n     * @function verify\n     * @memberof AddRoomRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    AddRoomRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.roomId != null && message.hasOwnProperty(\"roomId\"))\n            if (!$util.isInteger(message.roomId))\n                return \"roomId: integer expected\";\n        if (message.fromUserId != null && message.hasOwnProperty(\"fromUserId\"))\n            if (!$util.isInteger(message.fromUserId))\n                return \"fromUserId: integer expected\";\n        if (message.fromNickName != null && message.hasOwnProperty(\"fromNickName\"))\n            if (!$util.isString(message.fromNickName))\n                return \"fromNickName: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates an AddRoomRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof AddRoomRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {AddRoomRequest} AddRoomRequest\n     */\n    AddRoomRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.AddRoomRequest)\n            return object;\n        var message = new $root.AddRoomRequest();\n        if (object.roomId != null)\n            message.roomId = object.roomId | 0;\n        if (object.fromUserId != null)\n            message.fromUserId = object.fromUserId | 0;\n        if (object.fromNickName != null)\n            message.fromNickName = String(object.fromNickName);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an AddRoomRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof AddRoomRequest\n     * @static\n     * @param {AddRoomRequest} message AddRoomRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    AddRoomRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.roomId = 0;\n            object.fromUserId = 0;\n            object.fromNickName = \"\";\n        }\n        if (message.roomId != null && message.hasOwnProperty(\"roomId\"))\n            object.roomId = message.roomId;\n        if (message.fromUserId != null && message.hasOwnProperty(\"fromUserId\"))\n            object.fromUserId = message.fromUserId;\n        if (message.fromNickName != null && message.hasOwnProperty(\"fromNickName\"))\n            object.fromNickName = message.fromNickName;\n        return object;\n    };\n\n    /**\n     * Converts this AddRoomRequest to JSON.\n     * @function toJSON\n     * @memberof AddRoomRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    AddRoomRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return AddRoomRequest;\n})();\n\n$root.AddRoomResponse = (function() {\n\n    /**\n     * Properties of an AddRoomResponse.\n     * @exports IAddRoomResponse\n     * @interface IAddRoomResponse\n     * @property {Result|null} [result] AddRoomResponse result\n     * @property {string|null} [errormsg] AddRoomResponse errormsg\n     * @property {IAddRoomRequest|null} [addRoomRequest] AddRoomResponse addRoomRequest\n     * @property {TeamType|null} [teamType] AddRoomResponse teamType\n     */\n\n    /**\n     * Constructs a new AddRoomResponse.\n     * @exports AddRoomResponse\n     * @classdesc Represents an AddRoomResponse.\n     * @implements IAddRoomResponse\n     * @constructor\n     * @param {IAddRoomResponse=} [properties] Properties to set\n     */\n    function AddRoomResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * AddRoomResponse result.\n     * @member {Result} result\n     * @memberof AddRoomResponse\n     * @instance\n     */\n    AddRoomResponse.prototype.result = 0;\n\n    /**\n     * AddRoomResponse errormsg.\n     * @member {string} errormsg\n     * @memberof AddRoomResponse\n     * @instance\n     */\n    AddRoomResponse.prototype.errormsg = \"\";\n\n    /**\n     * AddRoomResponse addRoomRequest.\n     * @member {IAddRoomRequest|null|undefined} addRoomRequest\n     * @memberof AddRoomResponse\n     * @instance\n     */\n    AddRoomResponse.prototype.addRoomRequest = null;\n\n    /**\n     * AddRoomResponse teamType.\n     * @member {TeamType} teamType\n     * @memberof AddRoomResponse\n     * @instance\n     */\n    AddRoomResponse.prototype.teamType = 0;\n\n    /**\n     * Creates a new AddRoomResponse instance using the specified properties.\n     * @function create\n     * @memberof AddRoomResponse\n     * @static\n     * @param {IAddRoomResponse=} [properties] Properties to set\n     * @returns {AddRoomResponse} AddRoomResponse instance\n     */\n    AddRoomResponse.create = function create(properties) {\n        return new AddRoomResponse(properties);\n    };\n\n    /**\n     * Encodes the specified AddRoomResponse message. Does not implicitly {@link AddRoomResponse.verify|verify} messages.\n     * @function encode\n     * @memberof AddRoomResponse\n     * @static\n     * @param {IAddRoomResponse} message AddRoomResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AddRoomResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        if (message.addRoomRequest != null && message.hasOwnProperty(\"addRoomRequest\"))\n            $root.AddRoomRequest.encode(message.addRoomRequest, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        if (message.teamType != null && message.hasOwnProperty(\"teamType\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.teamType);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified AddRoomResponse message, length delimited. Does not implicitly {@link AddRoomResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof AddRoomResponse\n     * @static\n     * @param {IAddRoomResponse} message AddRoomResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AddRoomResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an AddRoomResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof AddRoomResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {AddRoomResponse} AddRoomResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AddRoomResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.AddRoomResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            case 3:\n                message.addRoomRequest = $root.AddRoomRequest.decode(reader, reader.uint32());\n                break;\n            case 4:\n                message.teamType = reader.int32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an AddRoomResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof AddRoomResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {AddRoomResponse} AddRoomResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AddRoomResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an AddRoomResponse message.\n     * @function verify\n     * @memberof AddRoomResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    AddRoomResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        if (message.addRoomRequest != null && message.hasOwnProperty(\"addRoomRequest\")) {\n            var error = $root.AddRoomRequest.verify(message.addRoomRequest);\n            if (error)\n                return \"addRoomRequest.\" + error;\n        }\n        if (message.teamType != null && message.hasOwnProperty(\"teamType\"))\n            switch (message.teamType) {\n            default:\n                return \"teamType: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        return null;\n    };\n\n    /**\n     * Creates an AddRoomResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof AddRoomResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {AddRoomResponse} AddRoomResponse\n     */\n    AddRoomResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.AddRoomResponse)\n            return object;\n        var message = new $root.AddRoomResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        if (object.addRoomRequest != null) {\n            if (typeof object.addRoomRequest !== \"object\")\n                throw TypeError(\".AddRoomResponse.addRoomRequest: object expected\");\n            message.addRoomRequest = $root.AddRoomRequest.fromObject(object.addRoomRequest);\n        }\n        switch (object.teamType) {\n        case \"My\":\n        case 0:\n            message.teamType = 0;\n            break;\n        case \"Enemy\":\n        case 1:\n            message.teamType = 1;\n            break;\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an AddRoomResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof AddRoomResponse\n     * @static\n     * @param {AddRoomResponse} message AddRoomResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    AddRoomResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n            object.addRoomRequest = null;\n            object.teamType = options.enums === String ? \"My\" : 0;\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        if (message.addRoomRequest != null && message.hasOwnProperty(\"addRoomRequest\"))\n            object.addRoomRequest = $root.AddRoomRequest.toObject(message.addRoomRequest, options);\n        if (message.teamType != null && message.hasOwnProperty(\"teamType\"))\n            object.teamType = options.enums === String ? $root.TeamType[message.teamType] : message.teamType;\n        return object;\n    };\n\n    /**\n     * Converts this AddRoomResponse to JSON.\n     * @function toJSON\n     * @memberof AddRoomResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    AddRoomResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return AddRoomResponse;\n})();\n\n$root.OutRoomRequest = (function() {\n\n    /**\n     * Properties of an OutRoomRequest.\n     * @exports IOutRoomRequest\n     * @interface IOutRoomRequest\n     */\n\n    /**\n     * Constructs a new OutRoomRequest.\n     * @exports OutRoomRequest\n     * @classdesc Represents an OutRoomRequest.\n     * @implements IOutRoomRequest\n     * @constructor\n     * @param {IOutRoomRequest=} [properties] Properties to set\n     */\n    function OutRoomRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new OutRoomRequest instance using the specified properties.\n     * @function create\n     * @memberof OutRoomRequest\n     * @static\n     * @param {IOutRoomRequest=} [properties] Properties to set\n     * @returns {OutRoomRequest} OutRoomRequest instance\n     */\n    OutRoomRequest.create = function create(properties) {\n        return new OutRoomRequest(properties);\n    };\n\n    /**\n     * Encodes the specified OutRoomRequest message. Does not implicitly {@link OutRoomRequest.verify|verify} messages.\n     * @function encode\n     * @memberof OutRoomRequest\n     * @static\n     * @param {IOutRoomRequest} message OutRoomRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    OutRoomRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified OutRoomRequest message, length delimited. Does not implicitly {@link OutRoomRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof OutRoomRequest\n     * @static\n     * @param {IOutRoomRequest} message OutRoomRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    OutRoomRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an OutRoomRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof OutRoomRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {OutRoomRequest} OutRoomRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    OutRoomRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.OutRoomRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an OutRoomRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof OutRoomRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {OutRoomRequest} OutRoomRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    OutRoomRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an OutRoomRequest message.\n     * @function verify\n     * @memberof OutRoomRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    OutRoomRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates an OutRoomRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof OutRoomRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {OutRoomRequest} OutRoomRequest\n     */\n    OutRoomRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.OutRoomRequest)\n            return object;\n        return new $root.OutRoomRequest();\n    };\n\n    /**\n     * Creates a plain object from an OutRoomRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof OutRoomRequest\n     * @static\n     * @param {OutRoomRequest} message OutRoomRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    OutRoomRequest.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this OutRoomRequest to JSON.\n     * @function toJSON\n     * @memberof OutRoomRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    OutRoomRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return OutRoomRequest;\n})();\n\n$root.OutRoomResponse = (function() {\n\n    /**\n     * Properties of an OutRoomResponse.\n     * @exports IOutRoomResponse\n     * @interface IOutRoomResponse\n     * @property {Result|null} [result] OutRoomResponse result\n     * @property {string|null} [errormsg] OutRoomResponse errormsg\n     */\n\n    /**\n     * Constructs a new OutRoomResponse.\n     * @exports OutRoomResponse\n     * @classdesc Represents an OutRoomResponse.\n     * @implements IOutRoomResponse\n     * @constructor\n     * @param {IOutRoomResponse=} [properties] Properties to set\n     */\n    function OutRoomResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * OutRoomResponse result.\n     * @member {Result} result\n     * @memberof OutRoomResponse\n     * @instance\n     */\n    OutRoomResponse.prototype.result = 0;\n\n    /**\n     * OutRoomResponse errormsg.\n     * @member {string} errormsg\n     * @memberof OutRoomResponse\n     * @instance\n     */\n    OutRoomResponse.prototype.errormsg = \"\";\n\n    /**\n     * Creates a new OutRoomResponse instance using the specified properties.\n     * @function create\n     * @memberof OutRoomResponse\n     * @static\n     * @param {IOutRoomResponse=} [properties] Properties to set\n     * @returns {OutRoomResponse} OutRoomResponse instance\n     */\n    OutRoomResponse.create = function create(properties) {\n        return new OutRoomResponse(properties);\n    };\n\n    /**\n     * Encodes the specified OutRoomResponse message. Does not implicitly {@link OutRoomResponse.verify|verify} messages.\n     * @function encode\n     * @memberof OutRoomResponse\n     * @static\n     * @param {IOutRoomResponse} message OutRoomResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    OutRoomResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified OutRoomResponse message, length delimited. Does not implicitly {@link OutRoomResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof OutRoomResponse\n     * @static\n     * @param {IOutRoomResponse} message OutRoomResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    OutRoomResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an OutRoomResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof OutRoomResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {OutRoomResponse} OutRoomResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    OutRoomResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.OutRoomResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an OutRoomResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof OutRoomResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {OutRoomResponse} OutRoomResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    OutRoomResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an OutRoomResponse message.\n     * @function verify\n     * @memberof OutRoomResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    OutRoomResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates an OutRoomResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof OutRoomResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {OutRoomResponse} OutRoomResponse\n     */\n    OutRoomResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.OutRoomResponse)\n            return object;\n        var message = new $root.OutRoomResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an OutRoomResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof OutRoomResponse\n     * @static\n     * @param {OutRoomResponse} message OutRoomResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    OutRoomResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        return object;\n    };\n\n    /**\n     * Converts this OutRoomResponse to JSON.\n     * @function toJSON\n     * @memberof OutRoomResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    OutRoomResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return OutRoomResponse;\n})();\n\n$root.FollowListRequest = (function() {\n\n    /**\n     * Properties of a FollowListRequest.\n     * @exports IFollowListRequest\n     * @interface IFollowListRequest\n     */\n\n    /**\n     * Constructs a new FollowListRequest.\n     * @exports FollowListRequest\n     * @classdesc Represents a FollowListRequest.\n     * @implements IFollowListRequest\n     * @constructor\n     * @param {IFollowListRequest=} [properties] Properties to set\n     */\n    function FollowListRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new FollowListRequest instance using the specified properties.\n     * @function create\n     * @memberof FollowListRequest\n     * @static\n     * @param {IFollowListRequest=} [properties] Properties to set\n     * @returns {FollowListRequest} FollowListRequest instance\n     */\n    FollowListRequest.create = function create(properties) {\n        return new FollowListRequest(properties);\n    };\n\n    /**\n     * Encodes the specified FollowListRequest message. Does not implicitly {@link FollowListRequest.verify|verify} messages.\n     * @function encode\n     * @memberof FollowListRequest\n     * @static\n     * @param {IFollowListRequest} message FollowListRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    FollowListRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified FollowListRequest message, length delimited. Does not implicitly {@link FollowListRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof FollowListRequest\n     * @static\n     * @param {IFollowListRequest} message FollowListRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    FollowListRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a FollowListRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof FollowListRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {FollowListRequest} FollowListRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    FollowListRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.FollowListRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a FollowListRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof FollowListRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {FollowListRequest} FollowListRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    FollowListRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a FollowListRequest message.\n     * @function verify\n     * @memberof FollowListRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    FollowListRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a FollowListRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof FollowListRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {FollowListRequest} FollowListRequest\n     */\n    FollowListRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.FollowListRequest)\n            return object;\n        return new $root.FollowListRequest();\n    };\n\n    /**\n     * Creates a plain object from a FollowListRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof FollowListRequest\n     * @static\n     * @param {FollowListRequest} message FollowListRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    FollowListRequest.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this FollowListRequest to JSON.\n     * @function toJSON\n     * @memberof FollowListRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    FollowListRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return FollowListRequest;\n})();\n\n$root.FollowListResponse = (function() {\n\n    /**\n     * Properties of a FollowListResponse.\n     * @exports IFollowListResponse\n     * @interface IFollowListResponse\n     * @property {Array.<INUser>|null} [follows] FollowListResponse follows\n     */\n\n    /**\n     * Constructs a new FollowListResponse.\n     * @exports FollowListResponse\n     * @classdesc Represents a FollowListResponse.\n     * @implements IFollowListResponse\n     * @constructor\n     * @param {IFollowListResponse=} [properties] Properties to set\n     */\n    function FollowListResponse(properties) {\n        this.follows = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * FollowListResponse follows.\n     * @member {Array.<INUser>} follows\n     * @memberof FollowListResponse\n     * @instance\n     */\n    FollowListResponse.prototype.follows = $util.emptyArray;\n\n    /**\n     * Creates a new FollowListResponse instance using the specified properties.\n     * @function create\n     * @memberof FollowListResponse\n     * @static\n     * @param {IFollowListResponse=} [properties] Properties to set\n     * @returns {FollowListResponse} FollowListResponse instance\n     */\n    FollowListResponse.create = function create(properties) {\n        return new FollowListResponse(properties);\n    };\n\n    /**\n     * Encodes the specified FollowListResponse message. Does not implicitly {@link FollowListResponse.verify|verify} messages.\n     * @function encode\n     * @memberof FollowListResponse\n     * @static\n     * @param {IFollowListResponse} message FollowListResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    FollowListResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.follows != null && message.follows.length)\n            for (var i = 0; i < message.follows.length; ++i)\n                $root.NUser.encode(message.follows[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified FollowListResponse message, length delimited. Does not implicitly {@link FollowListResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof FollowListResponse\n     * @static\n     * @param {IFollowListResponse} message FollowListResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    FollowListResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a FollowListResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof FollowListResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {FollowListResponse} FollowListResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    FollowListResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.FollowListResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.follows && message.follows.length))\n                    message.follows = [];\n                message.follows.push($root.NUser.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a FollowListResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof FollowListResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {FollowListResponse} FollowListResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    FollowListResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a FollowListResponse message.\n     * @function verify\n     * @memberof FollowListResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    FollowListResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.follows != null && message.hasOwnProperty(\"follows\")) {\n            if (!Array.isArray(message.follows))\n                return \"follows: array expected\";\n            for (var i = 0; i < message.follows.length; ++i) {\n                var error = $root.NUser.verify(message.follows[i]);\n                if (error)\n                    return \"follows.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a FollowListResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof FollowListResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {FollowListResponse} FollowListResponse\n     */\n    FollowListResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.FollowListResponse)\n            return object;\n        var message = new $root.FollowListResponse();\n        if (object.follows) {\n            if (!Array.isArray(object.follows))\n                throw TypeError(\".FollowListResponse.follows: array expected\");\n            message.follows = [];\n            for (var i = 0; i < object.follows.length; ++i) {\n                if (typeof object.follows[i] !== \"object\")\n                    throw TypeError(\".FollowListResponse.follows: object expected\");\n                message.follows[i] = $root.NUser.fromObject(object.follows[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a FollowListResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof FollowListResponse\n     * @static\n     * @param {FollowListResponse} message FollowListResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    FollowListResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.follows = [];\n        if (message.follows && message.follows.length) {\n            object.follows = [];\n            for (var j = 0; j < message.follows.length; ++j)\n                object.follows[j] = $root.NUser.toObject(message.follows[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this FollowListResponse to JSON.\n     * @function toJSON\n     * @memberof FollowListResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    FollowListResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return FollowListResponse;\n})();\n\n/**\n * ChatChannel enum.\n * @exports ChatChannel\n * @enum {string}\n * @property {number} Comp=0 Comp value\n * @property {number} Private=1 Private value\n * @property {number} RoomChat=2 RoomChat value\n */\n$root.ChatChannel = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = \"Comp\"] = 0;\n    values[valuesById[1] = \"Private\"] = 1;\n    values[valuesById[2] = \"RoomChat\"] = 2;\n    return values;\n})();\n\n$root.ChatMessage = (function() {\n\n    /**\n     * Properties of a ChatMessage.\n     * @exports IChatMessage\n     * @interface IChatMessage\n     * @property {ChatChannel|null} [chatChannel] ChatMessage chatChannel\n     * @property {number|null} [fromId] ChatMessage fromId\n     * @property {string|null} [fromName] ChatMessage fromName\n     * @property {number|null} [fromLevel] ChatMessage fromLevel\n     * @property {number|null} [fromCCharacterId] ChatMessage fromCCharacterId\n     * @property {number|null} [toId] ChatMessage toId\n     * @property {string|null} [toName] ChatMessage toName\n     * @property {number|null} [toLevel] ChatMessage toLevel\n     * @property {number|null} [toCCharacterId] ChatMessage toCCharacterId\n     * @property {string|null} [msg] ChatMessage msg\n     * @property {number|Long|null} [time] ChatMessage time\n     * @property {ChatRoomType|null} [chatRoomType] ChatMessage chatRoomType\n     * @property {number|null} [enterLiveUserId] ChatMessage enterLiveUserId\n     */\n\n    /**\n     * Constructs a new ChatMessage.\n     * @exports ChatMessage\n     * @classdesc Represents a ChatMessage.\n     * @implements IChatMessage\n     * @constructor\n     * @param {IChatMessage=} [properties] Properties to set\n     */\n    function ChatMessage(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ChatMessage chatChannel.\n     * @member {ChatChannel} chatChannel\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.chatChannel = 0;\n\n    /**\n     * ChatMessage fromId.\n     * @member {number} fromId\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.fromId = 0;\n\n    /**\n     * ChatMessage fromName.\n     * @member {string} fromName\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.fromName = \"\";\n\n    /**\n     * ChatMessage fromLevel.\n     * @member {number} fromLevel\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.fromLevel = 0;\n\n    /**\n     * ChatMessage fromCCharacterId.\n     * @member {number} fromCCharacterId\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.fromCCharacterId = 0;\n\n    /**\n     * ChatMessage toId.\n     * @member {number} toId\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.toId = 0;\n\n    /**\n     * ChatMessage toName.\n     * @member {string} toName\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.toName = \"\";\n\n    /**\n     * ChatMessage toLevel.\n     * @member {number} toLevel\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.toLevel = 0;\n\n    /**\n     * ChatMessage toCCharacterId.\n     * @member {number} toCCharacterId\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.toCCharacterId = 0;\n\n    /**\n     * ChatMessage msg.\n     * @member {string} msg\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.msg = \"\";\n\n    /**\n     * ChatMessage time.\n     * @member {number|Long} time\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.time = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * ChatMessage chatRoomType.\n     * @member {ChatRoomType} chatRoomType\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.chatRoomType = 0;\n\n    /**\n     * ChatMessage enterLiveUserId.\n     * @member {number} enterLiveUserId\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.enterLiveUserId = 0;\n\n    /**\n     * Creates a new ChatMessage instance using the specified properties.\n     * @function create\n     * @memberof ChatMessage\n     * @static\n     * @param {IChatMessage=} [properties] Properties to set\n     * @returns {ChatMessage} ChatMessage instance\n     */\n    ChatMessage.create = function create(properties) {\n        return new ChatMessage(properties);\n    };\n\n    /**\n     * Encodes the specified ChatMessage message. Does not implicitly {@link ChatMessage.verify|verify} messages.\n     * @function encode\n     * @memberof ChatMessage\n     * @static\n     * @param {IChatMessage} message ChatMessage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ChatMessage.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.chatChannel != null && message.hasOwnProperty(\"chatChannel\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.chatChannel);\n        if (message.fromId != null && message.hasOwnProperty(\"fromId\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.fromId);\n        if (message.fromName != null && message.hasOwnProperty(\"fromName\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.fromName);\n        if (message.fromLevel != null && message.hasOwnProperty(\"fromLevel\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.fromLevel);\n        if (message.fromCCharacterId != null && message.hasOwnProperty(\"fromCCharacterId\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.fromCCharacterId);\n        if (message.toId != null && message.hasOwnProperty(\"toId\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).int32(message.toId);\n        if (message.toName != null && message.hasOwnProperty(\"toName\"))\n            writer.uint32(/* id 7, wireType 2 =*/58).string(message.toName);\n        if (message.toLevel != null && message.hasOwnProperty(\"toLevel\"))\n            writer.uint32(/* id 8, wireType 0 =*/64).int32(message.toLevel);\n        if (message.toCCharacterId != null && message.hasOwnProperty(\"toCCharacterId\"))\n            writer.uint32(/* id 9, wireType 0 =*/72).int32(message.toCCharacterId);\n        if (message.msg != null && message.hasOwnProperty(\"msg\"))\n            writer.uint32(/* id 10, wireType 2 =*/82).string(message.msg);\n        if (message.time != null && message.hasOwnProperty(\"time\"))\n            writer.uint32(/* id 11, wireType 0 =*/88).int64(message.time);\n        if (message.chatRoomType != null && message.hasOwnProperty(\"chatRoomType\"))\n            writer.uint32(/* id 12, wireType 0 =*/96).int32(message.chatRoomType);\n        if (message.enterLiveUserId != null && message.hasOwnProperty(\"enterLiveUserId\"))\n            writer.uint32(/* id 13, wireType 0 =*/104).int32(message.enterLiveUserId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ChatMessage message, length delimited. Does not implicitly {@link ChatMessage.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ChatMessage\n     * @static\n     * @param {IChatMessage} message ChatMessage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ChatMessage.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ChatMessage message from the specified reader or buffer.\n     * @function decode\n     * @memberof ChatMessage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ChatMessage} ChatMessage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ChatMessage.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ChatMessage();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.chatChannel = reader.int32();\n                break;\n            case 2:\n                message.fromId = reader.int32();\n                break;\n            case 3:\n                message.fromName = reader.string();\n                break;\n            case 4:\n                message.fromLevel = reader.int32();\n                break;\n            case 5:\n                message.fromCCharacterId = reader.int32();\n                break;\n            case 6:\n                message.toId = reader.int32();\n                break;\n            case 7:\n                message.toName = reader.string();\n                break;\n            case 8:\n                message.toLevel = reader.int32();\n                break;\n            case 9:\n                message.toCCharacterId = reader.int32();\n                break;\n            case 10:\n                message.msg = reader.string();\n                break;\n            case 11:\n                message.time = reader.int64();\n                break;\n            case 12:\n                message.chatRoomType = reader.int32();\n                break;\n            case 13:\n                message.enterLiveUserId = reader.int32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ChatMessage message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ChatMessage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ChatMessage} ChatMessage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ChatMessage.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ChatMessage message.\n     * @function verify\n     * @memberof ChatMessage\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ChatMessage.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.chatChannel != null && message.hasOwnProperty(\"chatChannel\"))\n            switch (message.chatChannel) {\n            default:\n                return \"chatChannel: enum value expected\";\n            case 0:\n            case 1:\n            case 2:\n                break;\n            }\n        if (message.fromId != null && message.hasOwnProperty(\"fromId\"))\n            if (!$util.isInteger(message.fromId))\n                return \"fromId: integer expected\";\n        if (message.fromName != null && message.hasOwnProperty(\"fromName\"))\n            if (!$util.isString(message.fromName))\n                return \"fromName: string expected\";\n        if (message.fromLevel != null && message.hasOwnProperty(\"fromLevel\"))\n            if (!$util.isInteger(message.fromLevel))\n                return \"fromLevel: integer expected\";\n        if (message.fromCCharacterId != null && message.hasOwnProperty(\"fromCCharacterId\"))\n            if (!$util.isInteger(message.fromCCharacterId))\n                return \"fromCCharacterId: integer expected\";\n        if (message.toId != null && message.hasOwnProperty(\"toId\"))\n            if (!$util.isInteger(message.toId))\n                return \"toId: integer expected\";\n        if (message.toName != null && message.hasOwnProperty(\"toName\"))\n            if (!$util.isString(message.toName))\n                return \"toName: string expected\";\n        if (message.toLevel != null && message.hasOwnProperty(\"toLevel\"))\n            if (!$util.isInteger(message.toLevel))\n                return \"toLevel: integer expected\";\n        if (message.toCCharacterId != null && message.hasOwnProperty(\"toCCharacterId\"))\n            if (!$util.isInteger(message.toCCharacterId))\n                return \"toCCharacterId: integer expected\";\n        if (message.msg != null && message.hasOwnProperty(\"msg\"))\n            if (!$util.isString(message.msg))\n                return \"msg: string expected\";\n        if (message.time != null && message.hasOwnProperty(\"time\"))\n            if (!$util.isInteger(message.time) && !(message.time && $util.isInteger(message.time.low) && $util.isInteger(message.time.high)))\n                return \"time: integer|Long expected\";\n        if (message.chatRoomType != null && message.hasOwnProperty(\"chatRoomType\"))\n            switch (message.chatRoomType) {\n            default:\n                return \"chatRoomType: enum value expected\";\n            case 0:\n            case 1:\n            case 2:\n                break;\n            }\n        if (message.enterLiveUserId != null && message.hasOwnProperty(\"enterLiveUserId\"))\n            if (!$util.isInteger(message.enterLiveUserId))\n                return \"enterLiveUserId: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a ChatMessage message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ChatMessage\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ChatMessage} ChatMessage\n     */\n    ChatMessage.fromObject = function fromObject(object) {\n        if (object instanceof $root.ChatMessage)\n            return object;\n        var message = new $root.ChatMessage();\n        switch (object.chatChannel) {\n        case \"Comp\":\n        case 0:\n            message.chatChannel = 0;\n            break;\n        case \"Private\":\n        case 1:\n            message.chatChannel = 1;\n            break;\n        case \"RoomChat\":\n        case 2:\n            message.chatChannel = 2;\n            break;\n        }\n        if (object.fromId != null)\n            message.fromId = object.fromId | 0;\n        if (object.fromName != null)\n            message.fromName = String(object.fromName);\n        if (object.fromLevel != null)\n            message.fromLevel = object.fromLevel | 0;\n        if (object.fromCCharacterId != null)\n            message.fromCCharacterId = object.fromCCharacterId | 0;\n        if (object.toId != null)\n            message.toId = object.toId | 0;\n        if (object.toName != null)\n            message.toName = String(object.toName);\n        if (object.toLevel != null)\n            message.toLevel = object.toLevel | 0;\n        if (object.toCCharacterId != null)\n            message.toCCharacterId = object.toCCharacterId | 0;\n        if (object.msg != null)\n            message.msg = String(object.msg);\n        if (object.time != null)\n            if ($util.Long)\n                (message.time = $util.Long.fromValue(object.time)).unsigned = false;\n            else if (typeof object.time === \"string\")\n                message.time = parseInt(object.time, 10);\n            else if (typeof object.time === \"number\")\n                message.time = object.time;\n            else if (typeof object.time === \"object\")\n                message.time = new $util.LongBits(object.time.low >>> 0, object.time.high >>> 0).toNumber();\n        switch (object.chatRoomType) {\n        case \"Room_\":\n        case 0:\n            message.chatRoomType = 0;\n            break;\n        case \"Game_\":\n        case 1:\n            message.chatRoomType = 1;\n            break;\n        case \"Live_\":\n        case 2:\n            message.chatRoomType = 2;\n            break;\n        }\n        if (object.enterLiveUserId != null)\n            message.enterLiveUserId = object.enterLiveUserId | 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ChatMessage message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ChatMessage\n     * @static\n     * @param {ChatMessage} message ChatMessage\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ChatMessage.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.chatChannel = options.enums === String ? \"Comp\" : 0;\n            object.fromId = 0;\n            object.fromName = \"\";\n            object.fromLevel = 0;\n            object.fromCCharacterId = 0;\n            object.toId = 0;\n            object.toName = \"\";\n            object.toLevel = 0;\n            object.toCCharacterId = 0;\n            object.msg = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.time = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.time = options.longs === String ? \"0\" : 0;\n            object.chatRoomType = options.enums === String ? \"Room_\" : 0;\n            object.enterLiveUserId = 0;\n        }\n        if (message.chatChannel != null && message.hasOwnProperty(\"chatChannel\"))\n            object.chatChannel = options.enums === String ? $root.ChatChannel[message.chatChannel] : message.chatChannel;\n        if (message.fromId != null && message.hasOwnProperty(\"fromId\"))\n            object.fromId = message.fromId;\n        if (message.fromName != null && message.hasOwnProperty(\"fromName\"))\n            object.fromName = message.fromName;\n        if (message.fromLevel != null && message.hasOwnProperty(\"fromLevel\"))\n            object.fromLevel = message.fromLevel;\n        if (message.fromCCharacterId != null && message.hasOwnProperty(\"fromCCharacterId\"))\n            object.fromCCharacterId = message.fromCCharacterId;\n        if (message.toId != null && message.hasOwnProperty(\"toId\"))\n            object.toId = message.toId;\n        if (message.toName != null && message.hasOwnProperty(\"toName\"))\n            object.toName = message.toName;\n        if (message.toLevel != null && message.hasOwnProperty(\"toLevel\"))\n            object.toLevel = message.toLevel;\n        if (message.toCCharacterId != null && message.hasOwnProperty(\"toCCharacterId\"))\n            object.toCCharacterId = message.toCCharacterId;\n        if (message.msg != null && message.hasOwnProperty(\"msg\"))\n            object.msg = message.msg;\n        if (message.time != null && message.hasOwnProperty(\"time\"))\n            if (typeof message.time === \"number\")\n                object.time = options.longs === String ? String(message.time) : message.time;\n            else\n                object.time = options.longs === String ? $util.Long.prototype.toString.call(message.time) : options.longs === Number ? new $util.LongBits(message.time.low >>> 0, message.time.high >>> 0).toNumber() : message.time;\n        if (message.chatRoomType != null && message.hasOwnProperty(\"chatRoomType\"))\n            object.chatRoomType = options.enums === String ? $root.ChatRoomType[message.chatRoomType] : message.chatRoomType;\n        if (message.enterLiveUserId != null && message.hasOwnProperty(\"enterLiveUserId\"))\n            object.enterLiveUserId = message.enterLiveUserId;\n        return object;\n    };\n\n    /**\n     * Converts this ChatMessage to JSON.\n     * @function toJSON\n     * @memberof ChatMessage\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ChatMessage.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ChatMessage;\n})();\n\n/**\n * ChatRoomType enum.\n * @exports ChatRoomType\n * @enum {string}\n * @property {number} Room_=0 Room_ value\n * @property {number} Game_=1 Game_ value\n * @property {number} Live_=2 Live_ value\n */\n$root.ChatRoomType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = \"Room_\"] = 0;\n    values[valuesById[1] = \"Game_\"] = 1;\n    values[valuesById[2] = \"Live_\"] = 2;\n    return values;\n})();\n\n$root.ChatRequest = (function() {\n\n    /**\n     * Properties of a ChatRequest.\n     * @exports IChatRequest\n     * @interface IChatRequest\n     * @property {IChatMessage|null} [chatMessage] ChatRequest chatMessage\n     */\n\n    /**\n     * Constructs a new ChatRequest.\n     * @exports ChatRequest\n     * @classdesc Represents a ChatRequest.\n     * @implements IChatRequest\n     * @constructor\n     * @param {IChatRequest=} [properties] Properties to set\n     */\n    function ChatRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ChatRequest chatMessage.\n     * @member {IChatMessage|null|undefined} chatMessage\n     * @memberof ChatRequest\n     * @instance\n     */\n    ChatRequest.prototype.chatMessage = null;\n\n    /**\n     * Creates a new ChatRequest instance using the specified properties.\n     * @function create\n     * @memberof ChatRequest\n     * @static\n     * @param {IChatRequest=} [properties] Properties to set\n     * @returns {ChatRequest} ChatRequest instance\n     */\n    ChatRequest.create = function create(properties) {\n        return new ChatRequest(properties);\n    };\n\n    /**\n     * Encodes the specified ChatRequest message. Does not implicitly {@link ChatRequest.verify|verify} messages.\n     * @function encode\n     * @memberof ChatRequest\n     * @static\n     * @param {IChatRequest} message ChatRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ChatRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.chatMessage != null && message.hasOwnProperty(\"chatMessage\"))\n            $root.ChatMessage.encode(message.chatMessage, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ChatRequest message, length delimited. Does not implicitly {@link ChatRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ChatRequest\n     * @static\n     * @param {IChatRequest} message ChatRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ChatRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ChatRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof ChatRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ChatRequest} ChatRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ChatRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ChatRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.chatMessage = $root.ChatMessage.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ChatRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ChatRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ChatRequest} ChatRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ChatRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ChatRequest message.\n     * @function verify\n     * @memberof ChatRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ChatRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.chatMessage != null && message.hasOwnProperty(\"chatMessage\")) {\n            var error = $root.ChatMessage.verify(message.chatMessage);\n            if (error)\n                return \"chatMessage.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a ChatRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ChatRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ChatRequest} ChatRequest\n     */\n    ChatRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.ChatRequest)\n            return object;\n        var message = new $root.ChatRequest();\n        if (object.chatMessage != null) {\n            if (typeof object.chatMessage !== \"object\")\n                throw TypeError(\".ChatRequest.chatMessage: object expected\");\n            message.chatMessage = $root.ChatMessage.fromObject(object.chatMessage);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ChatRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ChatRequest\n     * @static\n     * @param {ChatRequest} message ChatRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ChatRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.chatMessage = null;\n        if (message.chatMessage != null && message.hasOwnProperty(\"chatMessage\"))\n            object.chatMessage = $root.ChatMessage.toObject(message.chatMessage, options);\n        return object;\n    };\n\n    /**\n     * Converts this ChatRequest to JSON.\n     * @function toJSON\n     * @memberof ChatRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ChatRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ChatRequest;\n})();\n\n$root.ChatResponse = (function() {\n\n    /**\n     * Properties of a ChatResponse.\n     * @exports IChatResponse\n     * @interface IChatResponse\n     * @property {Result|null} [result] ChatResponse result\n     * @property {string|null} [errormsg] ChatResponse errormsg\n     * @property {Array.<IChatMessage>|null} [compMessages] ChatResponse compMessages\n     * @property {Array.<IChatMessage>|null} [privateMessages] ChatResponse privateMessages\n     * @property {Array.<IChatMessage>|null} [roomMessages] ChatResponse roomMessages\n     */\n\n    /**\n     * Constructs a new ChatResponse.\n     * @exports ChatResponse\n     * @classdesc Represents a ChatResponse.\n     * @implements IChatResponse\n     * @constructor\n     * @param {IChatResponse=} [properties] Properties to set\n     */\n    function ChatResponse(properties) {\n        this.compMessages = [];\n        this.privateMessages = [];\n        this.roomMessages = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ChatResponse result.\n     * @member {Result} result\n     * @memberof ChatResponse\n     * @instance\n     */\n    ChatResponse.prototype.result = 0;\n\n    /**\n     * ChatResponse errormsg.\n     * @member {string} errormsg\n     * @memberof ChatResponse\n     * @instance\n     */\n    ChatResponse.prototype.errormsg = \"\";\n\n    /**\n     * ChatResponse compMessages.\n     * @member {Array.<IChatMessage>} compMessages\n     * @memberof ChatResponse\n     * @instance\n     */\n    ChatResponse.prototype.compMessages = $util.emptyArray;\n\n    /**\n     * ChatResponse privateMessages.\n     * @member {Array.<IChatMessage>} privateMessages\n     * @memberof ChatResponse\n     * @instance\n     */\n    ChatResponse.prototype.privateMessages = $util.emptyArray;\n\n    /**\n     * ChatResponse roomMessages.\n     * @member {Array.<IChatMessage>} roomMessages\n     * @memberof ChatResponse\n     * @instance\n     */\n    ChatResponse.prototype.roomMessages = $util.emptyArray;\n\n    /**\n     * Creates a new ChatResponse instance using the specified properties.\n     * @function create\n     * @memberof ChatResponse\n     * @static\n     * @param {IChatResponse=} [properties] Properties to set\n     * @returns {ChatResponse} ChatResponse instance\n     */\n    ChatResponse.create = function create(properties) {\n        return new ChatResponse(properties);\n    };\n\n    /**\n     * Encodes the specified ChatResponse message. Does not implicitly {@link ChatResponse.verify|verify} messages.\n     * @function encode\n     * @memberof ChatResponse\n     * @static\n     * @param {IChatResponse} message ChatResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ChatResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        if (message.compMessages != null && message.compMessages.length)\n            for (var i = 0; i < message.compMessages.length; ++i)\n                $root.ChatMessage.encode(message.compMessages[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        if (message.privateMessages != null && message.privateMessages.length)\n            for (var i = 0; i < message.privateMessages.length; ++i)\n                $root.ChatMessage.encode(message.privateMessages[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.roomMessages != null && message.roomMessages.length)\n            for (var i = 0; i < message.roomMessages.length; ++i)\n                $root.ChatMessage.encode(message.roomMessages[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ChatResponse message, length delimited. Does not implicitly {@link ChatResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ChatResponse\n     * @static\n     * @param {IChatResponse} message ChatResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ChatResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ChatResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof ChatResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ChatResponse} ChatResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ChatResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ChatResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            case 3:\n                if (!(message.compMessages && message.compMessages.length))\n                    message.compMessages = [];\n                message.compMessages.push($root.ChatMessage.decode(reader, reader.uint32()));\n                break;\n            case 4:\n                if (!(message.privateMessages && message.privateMessages.length))\n                    message.privateMessages = [];\n                message.privateMessages.push($root.ChatMessage.decode(reader, reader.uint32()));\n                break;\n            case 5:\n                if (!(message.roomMessages && message.roomMessages.length))\n                    message.roomMessages = [];\n                message.roomMessages.push($root.ChatMessage.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ChatResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ChatResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ChatResponse} ChatResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ChatResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ChatResponse message.\n     * @function verify\n     * @memberof ChatResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ChatResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        if (message.compMessages != null && message.hasOwnProperty(\"compMessages\")) {\n            if (!Array.isArray(message.compMessages))\n                return \"compMessages: array expected\";\n            for (var i = 0; i < message.compMessages.length; ++i) {\n                var error = $root.ChatMessage.verify(message.compMessages[i]);\n                if (error)\n                    return \"compMessages.\" + error;\n            }\n        }\n        if (message.privateMessages != null && message.hasOwnProperty(\"privateMessages\")) {\n            if (!Array.isArray(message.privateMessages))\n                return \"privateMessages: array expected\";\n            for (var i = 0; i < message.privateMessages.length; ++i) {\n                var error = $root.ChatMessage.verify(message.privateMessages[i]);\n                if (error)\n                    return \"privateMessages.\" + error;\n            }\n        }\n        if (message.roomMessages != null && message.hasOwnProperty(\"roomMessages\")) {\n            if (!Array.isArray(message.roomMessages))\n                return \"roomMessages: array expected\";\n            for (var i = 0; i < message.roomMessages.length; ++i) {\n                var error = $root.ChatMessage.verify(message.roomMessages[i]);\n                if (error)\n                    return \"roomMessages.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a ChatResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ChatResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ChatResponse} ChatResponse\n     */\n    ChatResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.ChatResponse)\n            return object;\n        var message = new $root.ChatResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        if (object.compMessages) {\n            if (!Array.isArray(object.compMessages))\n                throw TypeError(\".ChatResponse.compMessages: array expected\");\n            message.compMessages = [];\n            for (var i = 0; i < object.compMessages.length; ++i) {\n                if (typeof object.compMessages[i] !== \"object\")\n                    throw TypeError(\".ChatResponse.compMessages: object expected\");\n                message.compMessages[i] = $root.ChatMessage.fromObject(object.compMessages[i]);\n            }\n        }\n        if (object.privateMessages) {\n            if (!Array.isArray(object.privateMessages))\n                throw TypeError(\".ChatResponse.privateMessages: array expected\");\n            message.privateMessages = [];\n            for (var i = 0; i < object.privateMessages.length; ++i) {\n                if (typeof object.privateMessages[i] !== \"object\")\n                    throw TypeError(\".ChatResponse.privateMessages: object expected\");\n                message.privateMessages[i] = $root.ChatMessage.fromObject(object.privateMessages[i]);\n            }\n        }\n        if (object.roomMessages) {\n            if (!Array.isArray(object.roomMessages))\n                throw TypeError(\".ChatResponse.roomMessages: array expected\");\n            message.roomMessages = [];\n            for (var i = 0; i < object.roomMessages.length; ++i) {\n                if (typeof object.roomMessages[i] !== \"object\")\n                    throw TypeError(\".ChatResponse.roomMessages: object expected\");\n                message.roomMessages[i] = $root.ChatMessage.fromObject(object.roomMessages[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ChatResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ChatResponse\n     * @static\n     * @param {ChatResponse} message ChatResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ChatResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.compMessages = [];\n            object.privateMessages = [];\n            object.roomMessages = [];\n        }\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        if (message.compMessages && message.compMessages.length) {\n            object.compMessages = [];\n            for (var j = 0; j < message.compMessages.length; ++j)\n                object.compMessages[j] = $root.ChatMessage.toObject(message.compMessages[j], options);\n        }\n        if (message.privateMessages && message.privateMessages.length) {\n            object.privateMessages = [];\n            for (var j = 0; j < message.privateMessages.length; ++j)\n                object.privateMessages[j] = $root.ChatMessage.toObject(message.privateMessages[j], options);\n        }\n        if (message.roomMessages && message.roomMessages.length) {\n            object.roomMessages = [];\n            for (var j = 0; j < message.roomMessages.length; ++j)\n                object.roomMessages[j] = $root.ChatMessage.toObject(message.roomMessages[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this ChatResponse to JSON.\n     * @function toJSON\n     * @memberof ChatResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ChatResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ChatResponse;\n})();\n\n$root.UserStatusQueryRequest = (function() {\n\n    /**\n     * Properties of a UserStatusQueryRequest.\n     * @exports IUserStatusQueryRequest\n     * @interface IUserStatusQueryRequest\n     * @property {Array.<number>|null} [userIds] UserStatusQueryRequest userIds\n     */\n\n    /**\n     * Constructs a new UserStatusQueryRequest.\n     * @exports UserStatusQueryRequest\n     * @classdesc Represents a UserStatusQueryRequest.\n     * @implements IUserStatusQueryRequest\n     * @constructor\n     * @param {IUserStatusQueryRequest=} [properties] Properties to set\n     */\n    function UserStatusQueryRequest(properties) {\n        this.userIds = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * UserStatusQueryRequest userIds.\n     * @member {Array.<number>} userIds\n     * @memberof UserStatusQueryRequest\n     * @instance\n     */\n    UserStatusQueryRequest.prototype.userIds = $util.emptyArray;\n\n    /**\n     * Creates a new UserStatusQueryRequest instance using the specified properties.\n     * @function create\n     * @memberof UserStatusQueryRequest\n     * @static\n     * @param {IUserStatusQueryRequest=} [properties] Properties to set\n     * @returns {UserStatusQueryRequest} UserStatusQueryRequest instance\n     */\n    UserStatusQueryRequest.create = function create(properties) {\n        return new UserStatusQueryRequest(properties);\n    };\n\n    /**\n     * Encodes the specified UserStatusQueryRequest message. Does not implicitly {@link UserStatusQueryRequest.verify|verify} messages.\n     * @function encode\n     * @memberof UserStatusQueryRequest\n     * @static\n     * @param {IUserStatusQueryRequest} message UserStatusQueryRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UserStatusQueryRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.userIds != null && message.userIds.length) {\n            writer.uint32(/* id 1, wireType 2 =*/10).fork();\n            for (var i = 0; i < message.userIds.length; ++i)\n                writer.int32(message.userIds[i]);\n            writer.ldelim();\n        }\n        return writer;\n    };\n\n    /**\n     * Encodes the specified UserStatusQueryRequest message, length delimited. Does not implicitly {@link UserStatusQueryRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof UserStatusQueryRequest\n     * @static\n     * @param {IUserStatusQueryRequest} message UserStatusQueryRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UserStatusQueryRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a UserStatusQueryRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof UserStatusQueryRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {UserStatusQueryRequest} UserStatusQueryRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UserStatusQueryRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UserStatusQueryRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.userIds && message.userIds.length))\n                    message.userIds = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.userIds.push(reader.int32());\n                } else\n                    message.userIds.push(reader.int32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a UserStatusQueryRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof UserStatusQueryRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {UserStatusQueryRequest} UserStatusQueryRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UserStatusQueryRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a UserStatusQueryRequest message.\n     * @function verify\n     * @memberof UserStatusQueryRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    UserStatusQueryRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.userIds != null && message.hasOwnProperty(\"userIds\")) {\n            if (!Array.isArray(message.userIds))\n                return \"userIds: array expected\";\n            for (var i = 0; i < message.userIds.length; ++i)\n                if (!$util.isInteger(message.userIds[i]))\n                    return \"userIds: integer[] expected\";\n        }\n        return null;\n    };\n\n    /**\n     * Creates a UserStatusQueryRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UserStatusQueryRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {UserStatusQueryRequest} UserStatusQueryRequest\n     */\n    UserStatusQueryRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.UserStatusQueryRequest)\n            return object;\n        var message = new $root.UserStatusQueryRequest();\n        if (object.userIds) {\n            if (!Array.isArray(object.userIds))\n                throw TypeError(\".UserStatusQueryRequest.userIds: array expected\");\n            message.userIds = [];\n            for (var i = 0; i < object.userIds.length; ++i)\n                message.userIds[i] = object.userIds[i] | 0;\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a UserStatusQueryRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UserStatusQueryRequest\n     * @static\n     * @param {UserStatusQueryRequest} message UserStatusQueryRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UserStatusQueryRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.userIds = [];\n        if (message.userIds && message.userIds.length) {\n            object.userIds = [];\n            for (var j = 0; j < message.userIds.length; ++j)\n                object.userIds[j] = message.userIds[j];\n        }\n        return object;\n    };\n\n    /**\n     * Converts this UserStatusQueryRequest to JSON.\n     * @function toJSON\n     * @memberof UserStatusQueryRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UserStatusQueryRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UserStatusQueryRequest;\n})();\n\n$root.UserStatusQueryResponse = (function() {\n\n    /**\n     * Properties of a UserStatusQueryResponse.\n     * @exports IUserStatusQueryResponse\n     * @interface IUserStatusQueryResponse\n     * @property {Array.<boolean>|null} [status] UserStatusQueryResponse status\n     */\n\n    /**\n     * Constructs a new UserStatusQueryResponse.\n     * @exports UserStatusQueryResponse\n     * @classdesc Represents a UserStatusQueryResponse.\n     * @implements IUserStatusQueryResponse\n     * @constructor\n     * @param {IUserStatusQueryResponse=} [properties] Properties to set\n     */\n    function UserStatusQueryResponse(properties) {\n        this.status = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * UserStatusQueryResponse status.\n     * @member {Array.<boolean>} status\n     * @memberof UserStatusQueryResponse\n     * @instance\n     */\n    UserStatusQueryResponse.prototype.status = $util.emptyArray;\n\n    /**\n     * Creates a new UserStatusQueryResponse instance using the specified properties.\n     * @function create\n     * @memberof UserStatusQueryResponse\n     * @static\n     * @param {IUserStatusQueryResponse=} [properties] Properties to set\n     * @returns {UserStatusQueryResponse} UserStatusQueryResponse instance\n     */\n    UserStatusQueryResponse.create = function create(properties) {\n        return new UserStatusQueryResponse(properties);\n    };\n\n    /**\n     * Encodes the specified UserStatusQueryResponse message. Does not implicitly {@link UserStatusQueryResponse.verify|verify} messages.\n     * @function encode\n     * @memberof UserStatusQueryResponse\n     * @static\n     * @param {IUserStatusQueryResponse} message UserStatusQueryResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UserStatusQueryResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.status != null && message.status.length) {\n            writer.uint32(/* id 1, wireType 2 =*/10).fork();\n            for (var i = 0; i < message.status.length; ++i)\n                writer.bool(message.status[i]);\n            writer.ldelim();\n        }\n        return writer;\n    };\n\n    /**\n     * Encodes the specified UserStatusQueryResponse message, length delimited. Does not implicitly {@link UserStatusQueryResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof UserStatusQueryResponse\n     * @static\n     * @param {IUserStatusQueryResponse} message UserStatusQueryResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UserStatusQueryResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a UserStatusQueryResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof UserStatusQueryResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {UserStatusQueryResponse} UserStatusQueryResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UserStatusQueryResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UserStatusQueryResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.status && message.status.length))\n                    message.status = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.status.push(reader.bool());\n                } else\n                    message.status.push(reader.bool());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a UserStatusQueryResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof UserStatusQueryResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {UserStatusQueryResponse} UserStatusQueryResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UserStatusQueryResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a UserStatusQueryResponse message.\n     * @function verify\n     * @memberof UserStatusQueryResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    UserStatusQueryResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.status != null && message.hasOwnProperty(\"status\")) {\n            if (!Array.isArray(message.status))\n                return \"status: array expected\";\n            for (var i = 0; i < message.status.length; ++i)\n                if (typeof message.status[i] !== \"boolean\")\n                    return \"status: boolean[] expected\";\n        }\n        return null;\n    };\n\n    /**\n     * Creates a UserStatusQueryResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UserStatusQueryResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {UserStatusQueryResponse} UserStatusQueryResponse\n     */\n    UserStatusQueryResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.UserStatusQueryResponse)\n            return object;\n        var message = new $root.UserStatusQueryResponse();\n        if (object.status) {\n            if (!Array.isArray(object.status))\n                throw TypeError(\".UserStatusQueryResponse.status: array expected\");\n            message.status = [];\n            for (var i = 0; i < object.status.length; ++i)\n                message.status[i] = Boolean(object.status[i]);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a UserStatusQueryResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UserStatusQueryResponse\n     * @static\n     * @param {UserStatusQueryResponse} message UserStatusQueryResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UserStatusQueryResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.status = [];\n        if (message.status && message.status.length) {\n            object.status = [];\n            for (var j = 0; j < message.status.length; ++j)\n                object.status[j] = message.status[j];\n        }\n        return object;\n    };\n\n    /**\n     * Converts this UserStatusQueryResponse to JSON.\n     * @function toJSON\n     * @memberof UserStatusQueryResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UserStatusQueryResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UserStatusQueryResponse;\n})();\n\n$root.StartMatchRequest = (function() {\n\n    /**\n     * Properties of a StartMatchRequest.\n     * @exports IStartMatchRequest\n     * @interface IStartMatchRequest\n     */\n\n    /**\n     * Constructs a new StartMatchRequest.\n     * @exports StartMatchRequest\n     * @classdesc Represents a StartMatchRequest.\n     * @implements IStartMatchRequest\n     * @constructor\n     * @param {IStartMatchRequest=} [properties] Properties to set\n     */\n    function StartMatchRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new StartMatchRequest instance using the specified properties.\n     * @function create\n     * @memberof StartMatchRequest\n     * @static\n     * @param {IStartMatchRequest=} [properties] Properties to set\n     * @returns {StartMatchRequest} StartMatchRequest instance\n     */\n    StartMatchRequest.create = function create(properties) {\n        return new StartMatchRequest(properties);\n    };\n\n    /**\n     * Encodes the specified StartMatchRequest message. Does not implicitly {@link StartMatchRequest.verify|verify} messages.\n     * @function encode\n     * @memberof StartMatchRequest\n     * @static\n     * @param {IStartMatchRequest} message StartMatchRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    StartMatchRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified StartMatchRequest message, length delimited. Does not implicitly {@link StartMatchRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof StartMatchRequest\n     * @static\n     * @param {IStartMatchRequest} message StartMatchRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    StartMatchRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a StartMatchRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof StartMatchRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {StartMatchRequest} StartMatchRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    StartMatchRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StartMatchRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a StartMatchRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof StartMatchRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {StartMatchRequest} StartMatchRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    StartMatchRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a StartMatchRequest message.\n     * @function verify\n     * @memberof StartMatchRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    StartMatchRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a StartMatchRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof StartMatchRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {StartMatchRequest} StartMatchRequest\n     */\n    StartMatchRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.StartMatchRequest)\n            return object;\n        return new $root.StartMatchRequest();\n    };\n\n    /**\n     * Creates a plain object from a StartMatchRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof StartMatchRequest\n     * @static\n     * @param {StartMatchRequest} message StartMatchRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    StartMatchRequest.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this StartMatchRequest to JSON.\n     * @function toJSON\n     * @memberof StartMatchRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    StartMatchRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return StartMatchRequest;\n})();\n\n$root.StartMatchResponse = (function() {\n\n    /**\n     * Properties of a StartMatchResponse.\n     * @exports IStartMatchResponse\n     * @interface IStartMatchResponse\n     * @property {Result|null} [result] StartMatchResponse result\n     * @property {string|null} [errormsg] StartMatchResponse errormsg\n     */\n\n    /**\n     * Constructs a new StartMatchResponse.\n     * @exports StartMatchResponse\n     * @classdesc Represents a StartMatchResponse.\n     * @implements IStartMatchResponse\n     * @constructor\n     * @param {IStartMatchResponse=} [properties] Properties to set\n     */\n    function StartMatchResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * StartMatchResponse result.\n     * @member {Result} result\n     * @memberof StartMatchResponse\n     * @instance\n     */\n    StartMatchResponse.prototype.result = 0;\n\n    /**\n     * StartMatchResponse errormsg.\n     * @member {string} errormsg\n     * @memberof StartMatchResponse\n     * @instance\n     */\n    StartMatchResponse.prototype.errormsg = \"\";\n\n    /**\n     * Creates a new StartMatchResponse instance using the specified properties.\n     * @function create\n     * @memberof StartMatchResponse\n     * @static\n     * @param {IStartMatchResponse=} [properties] Properties to set\n     * @returns {StartMatchResponse} StartMatchResponse instance\n     */\n    StartMatchResponse.create = function create(properties) {\n        return new StartMatchResponse(properties);\n    };\n\n    /**\n     * Encodes the specified StartMatchResponse message. Does not implicitly {@link StartMatchResponse.verify|verify} messages.\n     * @function encode\n     * @memberof StartMatchResponse\n     * @static\n     * @param {IStartMatchResponse} message StartMatchResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    StartMatchResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified StartMatchResponse message, length delimited. Does not implicitly {@link StartMatchResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof StartMatchResponse\n     * @static\n     * @param {IStartMatchResponse} message StartMatchResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    StartMatchResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a StartMatchResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof StartMatchResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {StartMatchResponse} StartMatchResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    StartMatchResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StartMatchResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a StartMatchResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof StartMatchResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {StartMatchResponse} StartMatchResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    StartMatchResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a StartMatchResponse message.\n     * @function verify\n     * @memberof StartMatchResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    StartMatchResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a StartMatchResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof StartMatchResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {StartMatchResponse} StartMatchResponse\n     */\n    StartMatchResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.StartMatchResponse)\n            return object;\n        var message = new $root.StartMatchResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a StartMatchResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof StartMatchResponse\n     * @static\n     * @param {StartMatchResponse} message StartMatchResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    StartMatchResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        return object;\n    };\n\n    /**\n     * Converts this StartMatchResponse to JSON.\n     * @function toJSON\n     * @memberof StartMatchResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    StartMatchResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return StartMatchResponse;\n})();\n\n$root.MatchResponse = (function() {\n\n    /**\n     * Properties of a MatchResponse.\n     * @exports IMatchResponse\n     * @interface IMatchResponse\n     * @property {Result|null} [result] MatchResponse result\n     * @property {string|null} [errormsg] MatchResponse errormsg\n     * @property {INRoom|null} [room] MatchResponse room\n     */\n\n    /**\n     * Constructs a new MatchResponse.\n     * @exports MatchResponse\n     * @classdesc Represents a MatchResponse.\n     * @implements IMatchResponse\n     * @constructor\n     * @param {IMatchResponse=} [properties] Properties to set\n     */\n    function MatchResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * MatchResponse result.\n     * @member {Result} result\n     * @memberof MatchResponse\n     * @instance\n     */\n    MatchResponse.prototype.result = 0;\n\n    /**\n     * MatchResponse errormsg.\n     * @member {string} errormsg\n     * @memberof MatchResponse\n     * @instance\n     */\n    MatchResponse.prototype.errormsg = \"\";\n\n    /**\n     * MatchResponse room.\n     * @member {INRoom|null|undefined} room\n     * @memberof MatchResponse\n     * @instance\n     */\n    MatchResponse.prototype.room = null;\n\n    /**\n     * Creates a new MatchResponse instance using the specified properties.\n     * @function create\n     * @memberof MatchResponse\n     * @static\n     * @param {IMatchResponse=} [properties] Properties to set\n     * @returns {MatchResponse} MatchResponse instance\n     */\n    MatchResponse.create = function create(properties) {\n        return new MatchResponse(properties);\n    };\n\n    /**\n     * Encodes the specified MatchResponse message. Does not implicitly {@link MatchResponse.verify|verify} messages.\n     * @function encode\n     * @memberof MatchResponse\n     * @static\n     * @param {IMatchResponse} message MatchResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    MatchResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        if (message.room != null && message.hasOwnProperty(\"room\"))\n            $root.NRoom.encode(message.room, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified MatchResponse message, length delimited. Does not implicitly {@link MatchResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof MatchResponse\n     * @static\n     * @param {IMatchResponse} message MatchResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    MatchResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a MatchResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof MatchResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {MatchResponse} MatchResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    MatchResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.MatchResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            case 3:\n                message.room = $root.NRoom.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a MatchResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof MatchResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {MatchResponse} MatchResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    MatchResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a MatchResponse message.\n     * @function verify\n     * @memberof MatchResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    MatchResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        if (message.room != null && message.hasOwnProperty(\"room\")) {\n            var error = $root.NRoom.verify(message.room);\n            if (error)\n                return \"room.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a MatchResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof MatchResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {MatchResponse} MatchResponse\n     */\n    MatchResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.MatchResponse)\n            return object;\n        var message = new $root.MatchResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        if (object.room != null) {\n            if (typeof object.room !== \"object\")\n                throw TypeError(\".MatchResponse.room: object expected\");\n            message.room = $root.NRoom.fromObject(object.room);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a MatchResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof MatchResponse\n     * @static\n     * @param {MatchResponse} message MatchResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    MatchResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n            object.room = null;\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        if (message.room != null && message.hasOwnProperty(\"room\"))\n            object.room = $root.NRoom.toObject(message.room, options);\n        return object;\n    };\n\n    /**\n     * Converts this MatchResponse to JSON.\n     * @function toJSON\n     * @memberof MatchResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    MatchResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return MatchResponse;\n})();\n\n$root.GameOver2Request = (function() {\n\n    /**\n     * Properties of a GameOver2Request.\n     * @exports IGameOver2Request\n     * @interface IGameOver2Request\n     * @property {string|null} [ipPortStr] GameOver2Request ipPortStr\n     */\n\n    /**\n     * Constructs a new GameOver2Request.\n     * @exports GameOver2Request\n     * @classdesc Represents a GameOver2Request.\n     * @implements IGameOver2Request\n     * @constructor\n     * @param {IGameOver2Request=} [properties] Properties to set\n     */\n    function GameOver2Request(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * GameOver2Request ipPortStr.\n     * @member {string} ipPortStr\n     * @memberof GameOver2Request\n     * @instance\n     */\n    GameOver2Request.prototype.ipPortStr = \"\";\n\n    /**\n     * Creates a new GameOver2Request instance using the specified properties.\n     * @function create\n     * @memberof GameOver2Request\n     * @static\n     * @param {IGameOver2Request=} [properties] Properties to set\n     * @returns {GameOver2Request} GameOver2Request instance\n     */\n    GameOver2Request.create = function create(properties) {\n        return new GameOver2Request(properties);\n    };\n\n    /**\n     * Encodes the specified GameOver2Request message. Does not implicitly {@link GameOver2Request.verify|verify} messages.\n     * @function encode\n     * @memberof GameOver2Request\n     * @static\n     * @param {IGameOver2Request} message GameOver2Request message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    GameOver2Request.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.ipPortStr != null && message.hasOwnProperty(\"ipPortStr\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.ipPortStr);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified GameOver2Request message, length delimited. Does not implicitly {@link GameOver2Request.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof GameOver2Request\n     * @static\n     * @param {IGameOver2Request} message GameOver2Request message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    GameOver2Request.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a GameOver2Request message from the specified reader or buffer.\n     * @function decode\n     * @memberof GameOver2Request\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {GameOver2Request} GameOver2Request\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    GameOver2Request.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.GameOver2Request();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.ipPortStr = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a GameOver2Request message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof GameOver2Request\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {GameOver2Request} GameOver2Request\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    GameOver2Request.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a GameOver2Request message.\n     * @function verify\n     * @memberof GameOver2Request\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    GameOver2Request.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.ipPortStr != null && message.hasOwnProperty(\"ipPortStr\"))\n            if (!$util.isString(message.ipPortStr))\n                return \"ipPortStr: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a GameOver2Request message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof GameOver2Request\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {GameOver2Request} GameOver2Request\n     */\n    GameOver2Request.fromObject = function fromObject(object) {\n        if (object instanceof $root.GameOver2Request)\n            return object;\n        var message = new $root.GameOver2Request();\n        if (object.ipPortStr != null)\n            message.ipPortStr = String(object.ipPortStr);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a GameOver2Request message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof GameOver2Request\n     * @static\n     * @param {GameOver2Request} message GameOver2Request\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    GameOver2Request.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.ipPortStr = \"\";\n        if (message.ipPortStr != null && message.hasOwnProperty(\"ipPortStr\"))\n            object.ipPortStr = message.ipPortStr;\n        return object;\n    };\n\n    /**\n     * Converts this GameOver2Request to JSON.\n     * @function toJSON\n     * @memberof GameOver2Request\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    GameOver2Request.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return GameOver2Request;\n})();\n\n$root.AddLiveRequest = (function() {\n\n    /**\n     * Properties of an AddLiveRequest.\n     * @exports IAddLiveRequest\n     * @interface IAddLiveRequest\n     * @property {number|null} [userId] AddLiveRequest userId\n     */\n\n    /**\n     * Constructs a new AddLiveRequest.\n     * @exports AddLiveRequest\n     * @classdesc Represents an AddLiveRequest.\n     * @implements IAddLiveRequest\n     * @constructor\n     * @param {IAddLiveRequest=} [properties] Properties to set\n     */\n    function AddLiveRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * AddLiveRequest userId.\n     * @member {number} userId\n     * @memberof AddLiveRequest\n     * @instance\n     */\n    AddLiveRequest.prototype.userId = 0;\n\n    /**\n     * Creates a new AddLiveRequest instance using the specified properties.\n     * @function create\n     * @memberof AddLiveRequest\n     * @static\n     * @param {IAddLiveRequest=} [properties] Properties to set\n     * @returns {AddLiveRequest} AddLiveRequest instance\n     */\n    AddLiveRequest.create = function create(properties) {\n        return new AddLiveRequest(properties);\n    };\n\n    /**\n     * Encodes the specified AddLiveRequest message. Does not implicitly {@link AddLiveRequest.verify|verify} messages.\n     * @function encode\n     * @memberof AddLiveRequest\n     * @static\n     * @param {IAddLiveRequest} message AddLiveRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AddLiveRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.userId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified AddLiveRequest message, length delimited. Does not implicitly {@link AddLiveRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof AddLiveRequest\n     * @static\n     * @param {IAddLiveRequest} message AddLiveRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AddLiveRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an AddLiveRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof AddLiveRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {AddLiveRequest} AddLiveRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AddLiveRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.AddLiveRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.userId = reader.int32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an AddLiveRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof AddLiveRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {AddLiveRequest} AddLiveRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AddLiveRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an AddLiveRequest message.\n     * @function verify\n     * @memberof AddLiveRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    AddLiveRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            if (!$util.isInteger(message.userId))\n                return \"userId: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates an AddLiveRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof AddLiveRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {AddLiveRequest} AddLiveRequest\n     */\n    AddLiveRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.AddLiveRequest)\n            return object;\n        var message = new $root.AddLiveRequest();\n        if (object.userId != null)\n            message.userId = object.userId | 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an AddLiveRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof AddLiveRequest\n     * @static\n     * @param {AddLiveRequest} message AddLiveRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    AddLiveRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.userId = 0;\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            object.userId = message.userId;\n        return object;\n    };\n\n    /**\n     * Converts this AddLiveRequest to JSON.\n     * @function toJSON\n     * @memberof AddLiveRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    AddLiveRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return AddLiveRequest;\n})();\n\n$root.AddLiveResponse = (function() {\n\n    /**\n     * Properties of an AddLiveResponse.\n     * @exports IAddLiveResponse\n     * @interface IAddLiveResponse\n     * @property {Result|null} [result] AddLiveResponse result\n     * @property {string|null} [errormsg] AddLiveResponse errormsg\n     * @property {INRoom|null} [room] AddLiveResponse room\n     */\n\n    /**\n     * Constructs a new AddLiveResponse.\n     * @exports AddLiveResponse\n     * @classdesc Represents an AddLiveResponse.\n     * @implements IAddLiveResponse\n     * @constructor\n     * @param {IAddLiveResponse=} [properties] Properties to set\n     */\n    function AddLiveResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * AddLiveResponse result.\n     * @member {Result} result\n     * @memberof AddLiveResponse\n     * @instance\n     */\n    AddLiveResponse.prototype.result = 0;\n\n    /**\n     * AddLiveResponse errormsg.\n     * @member {string} errormsg\n     * @memberof AddLiveResponse\n     * @instance\n     */\n    AddLiveResponse.prototype.errormsg = \"\";\n\n    /**\n     * AddLiveResponse room.\n     * @member {INRoom|null|undefined} room\n     * @memberof AddLiveResponse\n     * @instance\n     */\n    AddLiveResponse.prototype.room = null;\n\n    /**\n     * Creates a new AddLiveResponse instance using the specified properties.\n     * @function create\n     * @memberof AddLiveResponse\n     * @static\n     * @param {IAddLiveResponse=} [properties] Properties to set\n     * @returns {AddLiveResponse} AddLiveResponse instance\n     */\n    AddLiveResponse.create = function create(properties) {\n        return new AddLiveResponse(properties);\n    };\n\n    /**\n     * Encodes the specified AddLiveResponse message. Does not implicitly {@link AddLiveResponse.verify|verify} messages.\n     * @function encode\n     * @memberof AddLiveResponse\n     * @static\n     * @param {IAddLiveResponse} message AddLiveResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AddLiveResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        if (message.room != null && message.hasOwnProperty(\"room\"))\n            $root.NRoom.encode(message.room, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified AddLiveResponse message, length delimited. Does not implicitly {@link AddLiveResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof AddLiveResponse\n     * @static\n     * @param {IAddLiveResponse} message AddLiveResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    AddLiveResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an AddLiveResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof AddLiveResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {AddLiveResponse} AddLiveResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AddLiveResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.AddLiveResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            case 3:\n                message.room = $root.NRoom.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an AddLiveResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof AddLiveResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {AddLiveResponse} AddLiveResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    AddLiveResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an AddLiveResponse message.\n     * @function verify\n     * @memberof AddLiveResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    AddLiveResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        if (message.room != null && message.hasOwnProperty(\"room\")) {\n            var error = $root.NRoom.verify(message.room);\n            if (error)\n                return \"room.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates an AddLiveResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof AddLiveResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {AddLiveResponse} AddLiveResponse\n     */\n    AddLiveResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.AddLiveResponse)\n            return object;\n        var message = new $root.AddLiveResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        if (object.room != null) {\n            if (typeof object.room !== \"object\")\n                throw TypeError(\".AddLiveResponse.room: object expected\");\n            message.room = $root.NRoom.fromObject(object.room);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an AddLiveResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof AddLiveResponse\n     * @static\n     * @param {AddLiveResponse} message AddLiveResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    AddLiveResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n            object.room = null;\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        if (message.room != null && message.hasOwnProperty(\"room\"))\n            object.room = $root.NRoom.toObject(message.room, options);\n        return object;\n    };\n\n    /**\n     * Converts this AddLiveResponse to JSON.\n     * @function toJSON\n     * @memberof AddLiveResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    AddLiveResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return AddLiveResponse;\n})();\n\n$root.UploadBiFenRequest = (function() {\n\n    /**\n     * Properties of an UploadBiFenRequest.\n     * @exports IUploadBiFenRequest\n     * @interface IUploadBiFenRequest\n     * @property {string|null} [biFen] UploadBiFenRequest biFen\n     */\n\n    /**\n     * Constructs a new UploadBiFenRequest.\n     * @exports UploadBiFenRequest\n     * @classdesc Represents an UploadBiFenRequest.\n     * @implements IUploadBiFenRequest\n     * @constructor\n     * @param {IUploadBiFenRequest=} [properties] Properties to set\n     */\n    function UploadBiFenRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * UploadBiFenRequest biFen.\n     * @member {string} biFen\n     * @memberof UploadBiFenRequest\n     * @instance\n     */\n    UploadBiFenRequest.prototype.biFen = \"\";\n\n    /**\n     * Creates a new UploadBiFenRequest instance using the specified properties.\n     * @function create\n     * @memberof UploadBiFenRequest\n     * @static\n     * @param {IUploadBiFenRequest=} [properties] Properties to set\n     * @returns {UploadBiFenRequest} UploadBiFenRequest instance\n     */\n    UploadBiFenRequest.create = function create(properties) {\n        return new UploadBiFenRequest(properties);\n    };\n\n    /**\n     * Encodes the specified UploadBiFenRequest message. Does not implicitly {@link UploadBiFenRequest.verify|verify} messages.\n     * @function encode\n     * @memberof UploadBiFenRequest\n     * @static\n     * @param {IUploadBiFenRequest} message UploadBiFenRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UploadBiFenRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.biFen != null && message.hasOwnProperty(\"biFen\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.biFen);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified UploadBiFenRequest message, length delimited. Does not implicitly {@link UploadBiFenRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof UploadBiFenRequest\n     * @static\n     * @param {IUploadBiFenRequest} message UploadBiFenRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UploadBiFenRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an UploadBiFenRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof UploadBiFenRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {UploadBiFenRequest} UploadBiFenRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UploadBiFenRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UploadBiFenRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.biFen = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an UploadBiFenRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof UploadBiFenRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {UploadBiFenRequest} UploadBiFenRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UploadBiFenRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an UploadBiFenRequest message.\n     * @function verify\n     * @memberof UploadBiFenRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    UploadBiFenRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.biFen != null && message.hasOwnProperty(\"biFen\"))\n            if (!$util.isString(message.biFen))\n                return \"biFen: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates an UploadBiFenRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UploadBiFenRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {UploadBiFenRequest} UploadBiFenRequest\n     */\n    UploadBiFenRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.UploadBiFenRequest)\n            return object;\n        var message = new $root.UploadBiFenRequest();\n        if (object.biFen != null)\n            message.biFen = String(object.biFen);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an UploadBiFenRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UploadBiFenRequest\n     * @static\n     * @param {UploadBiFenRequest} message UploadBiFenRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UploadBiFenRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.biFen = \"\";\n        if (message.biFen != null && message.hasOwnProperty(\"biFen\"))\n            object.biFen = message.biFen;\n        return object;\n    };\n\n    /**\n     * Converts this UploadBiFenRequest to JSON.\n     * @function toJSON\n     * @memberof UploadBiFenRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UploadBiFenRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UploadBiFenRequest;\n})();\n\n$root.ValidateOpenRoomRequest = (function() {\n\n    /**\n     * Properties of a ValidateOpenRoomRequest.\n     * @exports IValidateOpenRoomRequest\n     * @interface IValidateOpenRoomRequest\n     */\n\n    /**\n     * Constructs a new ValidateOpenRoomRequest.\n     * @exports ValidateOpenRoomRequest\n     * @classdesc Represents a ValidateOpenRoomRequest.\n     * @implements IValidateOpenRoomRequest\n     * @constructor\n     * @param {IValidateOpenRoomRequest=} [properties] Properties to set\n     */\n    function ValidateOpenRoomRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new ValidateOpenRoomRequest instance using the specified properties.\n     * @function create\n     * @memberof ValidateOpenRoomRequest\n     * @static\n     * @param {IValidateOpenRoomRequest=} [properties] Properties to set\n     * @returns {ValidateOpenRoomRequest} ValidateOpenRoomRequest instance\n     */\n    ValidateOpenRoomRequest.create = function create(properties) {\n        return new ValidateOpenRoomRequest(properties);\n    };\n\n    /**\n     * Encodes the specified ValidateOpenRoomRequest message. Does not implicitly {@link ValidateOpenRoomRequest.verify|verify} messages.\n     * @function encode\n     * @memberof ValidateOpenRoomRequest\n     * @static\n     * @param {IValidateOpenRoomRequest} message ValidateOpenRoomRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ValidateOpenRoomRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ValidateOpenRoomRequest message, length delimited. Does not implicitly {@link ValidateOpenRoomRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ValidateOpenRoomRequest\n     * @static\n     * @param {IValidateOpenRoomRequest} message ValidateOpenRoomRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ValidateOpenRoomRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ValidateOpenRoomRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof ValidateOpenRoomRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ValidateOpenRoomRequest} ValidateOpenRoomRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ValidateOpenRoomRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ValidateOpenRoomRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ValidateOpenRoomRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ValidateOpenRoomRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ValidateOpenRoomRequest} ValidateOpenRoomRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ValidateOpenRoomRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ValidateOpenRoomRequest message.\n     * @function verify\n     * @memberof ValidateOpenRoomRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ValidateOpenRoomRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a ValidateOpenRoomRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ValidateOpenRoomRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ValidateOpenRoomRequest} ValidateOpenRoomRequest\n     */\n    ValidateOpenRoomRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.ValidateOpenRoomRequest)\n            return object;\n        return new $root.ValidateOpenRoomRequest();\n    };\n\n    /**\n     * Creates a plain object from a ValidateOpenRoomRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ValidateOpenRoomRequest\n     * @static\n     * @param {ValidateOpenRoomRequest} message ValidateOpenRoomRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ValidateOpenRoomRequest.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this ValidateOpenRoomRequest to JSON.\n     * @function toJSON\n     * @memberof ValidateOpenRoomRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ValidateOpenRoomRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ValidateOpenRoomRequest;\n})();\n\n$root.ValidateOpenRoomResponse = (function() {\n\n    /**\n     * Properties of a ValidateOpenRoomResponse.\n     * @exports IValidateOpenRoomResponse\n     * @interface IValidateOpenRoomResponse\n     * @property {Result|null} [result] ValidateOpenRoomResponse result\n     * @property {string|null} [errormsg] ValidateOpenRoomResponse errormsg\n     */\n\n    /**\n     * Constructs a new ValidateOpenRoomResponse.\n     * @exports ValidateOpenRoomResponse\n     * @classdesc Represents a ValidateOpenRoomResponse.\n     * @implements IValidateOpenRoomResponse\n     * @constructor\n     * @param {IValidateOpenRoomResponse=} [properties] Properties to set\n     */\n    function ValidateOpenRoomResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ValidateOpenRoomResponse result.\n     * @member {Result} result\n     * @memberof ValidateOpenRoomResponse\n     * @instance\n     */\n    ValidateOpenRoomResponse.prototype.result = 0;\n\n    /**\n     * ValidateOpenRoomResponse errormsg.\n     * @member {string} errormsg\n     * @memberof ValidateOpenRoomResponse\n     * @instance\n     */\n    ValidateOpenRoomResponse.prototype.errormsg = \"\";\n\n    /**\n     * Creates a new ValidateOpenRoomResponse instance using the specified properties.\n     * @function create\n     * @memberof ValidateOpenRoomResponse\n     * @static\n     * @param {IValidateOpenRoomResponse=} [properties] Properties to set\n     * @returns {ValidateOpenRoomResponse} ValidateOpenRoomResponse instance\n     */\n    ValidateOpenRoomResponse.create = function create(properties) {\n        return new ValidateOpenRoomResponse(properties);\n    };\n\n    /**\n     * Encodes the specified ValidateOpenRoomResponse message. Does not implicitly {@link ValidateOpenRoomResponse.verify|verify} messages.\n     * @function encode\n     * @memberof ValidateOpenRoomResponse\n     * @static\n     * @param {IValidateOpenRoomResponse} message ValidateOpenRoomResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ValidateOpenRoomResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.errormsg);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ValidateOpenRoomResponse message, length delimited. Does not implicitly {@link ValidateOpenRoomResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ValidateOpenRoomResponse\n     * @static\n     * @param {IValidateOpenRoomResponse} message ValidateOpenRoomResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ValidateOpenRoomResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ValidateOpenRoomResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof ValidateOpenRoomResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ValidateOpenRoomResponse} ValidateOpenRoomResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ValidateOpenRoomResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ValidateOpenRoomResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.result = reader.int32();\n                break;\n            case 2:\n                message.errormsg = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ValidateOpenRoomResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ValidateOpenRoomResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ValidateOpenRoomResponse} ValidateOpenRoomResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ValidateOpenRoomResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ValidateOpenRoomResponse message.\n     * @function verify\n     * @memberof ValidateOpenRoomResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ValidateOpenRoomResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            switch (message.result) {\n            default:\n                return \"result: enum value expected\";\n            case 0:\n            case 1:\n                break;\n            }\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            if (!$util.isString(message.errormsg))\n                return \"errormsg: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a ValidateOpenRoomResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ValidateOpenRoomResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ValidateOpenRoomResponse} ValidateOpenRoomResponse\n     */\n    ValidateOpenRoomResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.ValidateOpenRoomResponse)\n            return object;\n        var message = new $root.ValidateOpenRoomResponse();\n        switch (object.result) {\n        case \"Success\":\n        case 0:\n            message.result = 0;\n            break;\n        case \"Failed\":\n        case 1:\n            message.result = 1;\n            break;\n        }\n        if (object.errormsg != null)\n            message.errormsg = String(object.errormsg);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ValidateOpenRoomResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ValidateOpenRoomResponse\n     * @static\n     * @param {ValidateOpenRoomResponse} message ValidateOpenRoomResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ValidateOpenRoomResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.result = options.enums === String ? \"Success\" : 0;\n            object.errormsg = \"\";\n        }\n        if (message.result != null && message.hasOwnProperty(\"result\"))\n            object.result = options.enums === String ? $root.Result[message.result] : message.result;\n        if (message.errormsg != null && message.hasOwnProperty(\"errormsg\"))\n            object.errormsg = message.errormsg;\n        return object;\n    };\n\n    /**\n     * Converts this ValidateOpenRoomResponse to JSON.\n     * @function toJSON\n     * @memberof ValidateOpenRoomResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ValidateOpenRoomResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ValidateOpenRoomResponse;\n})();\n\nmodule.exports = $root;\n"]}