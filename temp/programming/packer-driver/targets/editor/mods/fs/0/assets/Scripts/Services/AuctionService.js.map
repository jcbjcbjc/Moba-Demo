{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/Services/AuctionService.ts"],"names":["AuctionService","LogUtil","proto","NetClient","EventManager","EventType","TipsManager","NetMessage","NetMessageRequest","Result","OfferPriceRequest","OfferPriceResponse","AuctionRequest","AuctionResponse","GetAuctionListRequest","GetAuctionListResponse","Init","Instance","addListener","OnOfferPrice","OnAuction","OnGetAuctionList","SendOfferPrice","id","money","log","message","Request","offerPriceReq","SendMessage","param","response","result","errormsg","Success","showTips","dispatch","AuctionRefreshUI","SendAuction","itemId","auctionReq","OnAuction_UI","SendGetAuctionList","getAuctionListReq","OnGetAuctionList_UI","auctionItems"],"mappings":"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","sourcesContent":["import { LogUtil } from \"../Log/LogUtil\";\r\nimport proto from '../../Proto/proto.js';\r\nimport { NetClient } from \"../Network/NetClient\";\r\nimport { MessageBox, MessageBoxType } from \"../UI/Common/MessageBox\";\r\nimport { EventManager } from \"../UI/Common/Event/EventManager\";\r\nimport { EventType } from \"../UI/Common/Event/EventType\";\r\nimport { SocketConst } from \"../Network/SocketConst\";\r\nimport { User } from \"../Models/User\";\r\nimport { director } from \"cc\";\r\nimport { SoundManager } from \"../../Sound/SoundManager\";\r\nimport { SoundDefine } from \"../../Sound/SoundDefine\";\r\nimport { TipsManager } from \"../UI/TipsManager\";\r\nconst { NetMessage, NetMessageRequest,  Result, OfferPriceRequest, OfferPriceResponse, AuctionRequest, \r\n    AuctionResponse, GetAuctionListRequest, GetAuctionListResponse} = proto;\r\n\r\nexport class AuctionService{\r\n   public static Instance: AuctionService = new AuctionService();\r\n\r\n   public Init() {\r\n      EventManager.Instance.addListener(EventType.OnOfferPrice, this.OnOfferPrice, this)\r\n      EventManager.Instance.addListener(EventType.OnAuction, this.OnAuction, this)\r\n      EventManager.Instance.addListener(EventType.OnGetAuctionList, this.OnGetAuctionList, this)\r\n   }\r\n\r\n    /**\r\n     * 请求出价操作\r\n     */\r\n    public SendOfferPrice(id: number, money: number): void {\r\n        LogUtil.log(\"SendOfferPrice::id :\" + id+\"，money=\"+money);\r\n        let message = new NetMessage();\r\n        message.Request = new NetMessageRequest();\r\n        message.Request.offerPriceReq = new OfferPriceRequest();\r\n        message.Request.offerPriceReq.id=id;\r\n        message.Request.offerPriceReq.money=money;\r\n        NetClient.Instance.SendMessage(message);\r\n    }\r\n\r\n    /**\r\n     * 出价操作响应\r\n     */\r\n    private OnOfferPrice(param: any): void {\r\n        let response = param[0] as OfferPriceResponse;\r\n        LogUtil.log(\"OnOfferPrice:{0} [{1}]\", response.result, response.errormsg);\r\n        if(response.result == Result.Success){   //成功\r\n            TipsManager.Instance.showTips(response.errormsg);\r\n            EventManager.Instance.dispatch(EventType.AuctionRefreshUI,response); \r\n        }else{\r\n            TipsManager.Instance.showTips(response.errormsg);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 请求拍卖操作\r\n     */\r\n    public SendAuction(itemId: number, money: number): void {\r\n        LogUtil.log(\"SendAuction::itemId :\" + itemId+\"，money=\"+money);\r\n        let message = new NetMessage();\r\n        message.Request = new NetMessageRequest();\r\n        message.Request.auctionReq = new AuctionRequest();\r\n        message.Request.auctionReq.itemId=itemId;\r\n        message.Request.auctionReq.money=money;\r\n        NetClient.Instance.SendMessage(message);\r\n    }\r\n\r\n    /**\r\n     * 拍卖操作响应\r\n     */\r\n    private OnAuction(param: any): void {\r\n        let response = param[0] as AuctionResponse;\r\n        LogUtil.log(\"OnAuction:{0} [{1}]\", response.result, response.errormsg);\r\n        if(response.result == Result.Success){   //成功\r\n            TipsManager.Instance.showTips(response.errormsg);\r\n            EventManager.Instance.dispatch(EventType.OnAuction_UI,response); \r\n        }else{\r\n            TipsManager.Instance.showTips(response.errormsg);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 请求获取拍卖列表\r\n     */\r\n    public SendGetAuctionList(): void {\r\n        LogUtil.log(\"SendGetAuctionList\");\r\n        let message = new NetMessage();\r\n        message.Request = new NetMessageRequest();\r\n        message.Request.getAuctionListReq = new GetAuctionListRequest();\r\n        NetClient.Instance.SendMessage(message);\r\n    }\r\n\r\n    /**\r\n     * 获取拍卖列表响应\r\n     */\r\n    private OnGetAuctionList(param: any): void {\r\n        let response = param[0] as GetAuctionListResponse;\r\n        EventManager.Instance.dispatch(EventType.OnGetAuctionList_UI,response.auctionItems); \r\n    }\r\n\r\n}"]}