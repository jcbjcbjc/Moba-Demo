{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/UI/Common/TabView/TabView.ts"],"names":["_decorator","Component","Node","TabButton","EventManager","EventType","ccclass","property","TabView","start","i","tabButtons","length","tabView","tabIndex","console","log","this_","setTimeout","SelectTab","defaultIndex","index","SelectBtn","tabPages","active","owner","Instance","dispatchObj","TabView_OnTabSelect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;;AACvBC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,S,iBAAAA,S;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;yBAGjBQ,O,WADZF,OAAO,CAAC,SAAD,C,UAGHC,QAAQ,CAAC;AAAA;AAAA,iCAAD,C,UAGRA,QAAQ,CAAC,CAACL,IAAD,CAAD,C,oCANb,MACaM,OADb,SAC6BP,SAD7B,CACuC;AAAA;AAAA;;AAAA;;AAAA;;AAAA,yCAQtB,IARsB;;AAAA,yCAUb,CAAC,CAVY;;AAAA,gDAWN,CAXM;AAAA;;AAanCQ,QAAAA,KAAK,GAAI;AACL,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,UAAL,CAAgBC,MAApC,EAA4CF,CAAC,EAA7C,EACA;AACI,iBAAKC,UAAL,CAAgBD,CAAhB,EAAmBG,OAAnB,GAA6B,IAA7B;AACA,iBAAKF,UAAL,CAAgBD,CAAhB,EAAmBI,QAAnB,GAA8BJ,CAA9B;AACH;;AACDK,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,cAAIC,KAAK,GAAC,IAAV;AACFC,UAAAA,UAAU,CAAC,YAAU;AACnBD,YAAAA,KAAK,CAACE,SAAN,CAAgBF,KAAK,CAACG,YAAtB;AACD,WAFS,EAER,GAFQ,CAAV;AAGD;;AAEMD,QAAAA,SAAS,CAACE,KAAD,EAChB;AACI,cAAI,KAAKA,KAAL,IAAcA,KAAlB,EACA;AACI,iBAAKA,KAAL,GAAaA,KAAb,CADJ,CAEI;;AACA,iBAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,UAAL,CAAgBC,MAApC,EAA4CF,CAAC,EAA7C,EACA;AACI;AACA,mBAAKC,UAAL,CAAgBD,CAAhB,EAAmBY,SAAnB,CAA6BZ,CAAC,IAAIW,KAAlC;;AACA,kBAAI,KAAKE,QAAL,CAAcX,MAAd,GAAuB,CAA3B,EACA;AACI,qBAAKW,QAAL,CAAcb,CAAd,EAAiBc,MAAjB,GAAyBd,CAAC,IAAIW,KAA9B;AACH;AACJ;;AACDN,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAqBK,KAAjC;;AACD,gBAAG,KAAKI,KAAR,EAAc;AACX;AAAA;AAAA,gDAAaC,QAAb,CAAsBC,WAAtB,CAAkC;AAAA;AAAA,0CAAUC,mBAA5C,EAAgE,KAAKH,KAArE,EAA2EJ,KAA3E;AACF;AACH;AACJ;;AA9CkC,O;;;;;iBAGA,E;;;;;;;iBAGP,E","sourcesContent":["import { _decorator, Component, Node, Sprite, SpriteFrame, Button, Label, director, EventHandler } from 'cc';\r\nimport { TabButton } from './TabButton';\r\nimport { EventManager } from '../Event/EventManager';\r\nimport { EventType } from '../Event/EventType';\r\nimport { UICharacterSelect } from '../../CharacterSelect/UICharacterSelect';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('TabView')\r\nexport class TabView extends Component {\r\n\r\n    @property([TabButton])\r\n    public tabButtons:Array<TabButton>=[] as unknown as Array<TabButton>;\r\n\r\n    @property([Node])\r\n    public tabPages:Array<Node>=[] as unknown as Array<Node>;\r\n\r\n    public owner=null as unknown as any;\r\n\r\n    public index:number = -1;\r\n    public defaultIndex:number = 0;\r\n\r\n    start () {\r\n        for (let i = 0; i < this.tabButtons.length; i++)\r\n        {\r\n            this.tabButtons[i].tabView = this;\r\n            this.tabButtons[i].tabIndex = i;\r\n        }\r\n        console.log('SelectTab(0)')\r\n        let this_=this;\r\n      setTimeout(function(){\r\n        this_.SelectTab(this_.defaultIndex);\r\n      },500)  \r\n    }\r\n\r\n    public SelectTab(index:number):void\r\n    {\r\n        if (this.index != index)\r\n        {\r\n            this.index = index;\r\n            // console.log('tabButtons.length='+this.tabButtons.length)\r\n            for (let i = 0; i < this.tabButtons.length; i++)\r\n            {\r\n                // console.log(this.tabButtons[i])\r\n                this.tabButtons[i].SelectBtn(i == index);\r\n                if (this.tabPages.length > 0)\r\n                {\r\n                    this.tabPages[i].active=(i == index);\r\n                }\r\n            }\r\n            console.log('dispatchObj index='+index)\r\n           if(this.owner){ \r\n              EventManager.Instance.dispatchObj(EventType.TabView_OnTabSelect,this.owner,index);\r\n           }\r\n        }\r\n    }\r\n}"]}