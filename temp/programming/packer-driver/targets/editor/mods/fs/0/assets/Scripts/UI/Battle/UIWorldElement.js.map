{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/UI/Battle/UIWorldElement.ts"],"names":["_decorator","Component","Node","Vec3","CameraComponent","BattleManager","EventManager","EventType","ccclass","property","UIWorldElement","start","cameraComponent","camera","getComponent","update","dt","owner","isExecuteOnce","isExecute","parent","getWorldPosition","worldVec3","pos","add3f","height","convertToUINode","node","uiVec3","position","Instance","dispatchObj","OnWorldElementExecuteOnceSuccess","len","distance","worldPosition","scale","camCharDis","setScale"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAkBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,e,OAAAA,e;;AAC/CC,MAAAA,a,iBAAAA,a;;AAEAC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,S,iBAAAA,S;;;;;;;OAGH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;AAC9B;AACA;AACA;;gCAEaU,c,WADZF,OAAO,CAAC,gBAAD,C,UAKHC,QAAQ,CAACP,IAAD,C,oCALb,MACaQ,cADb,SACoCT,SADpC,CAC8C;AAAA;AAAA;;AAAA,yCAExB,IAFwB;;AAAA,0CAGrB,GAHqB;;AAAA;;AAAA,0CAMvB,IAAIE,IAAJ,EANuB;;AAAA,6CAOnB,IAAIA,IAAJ,EAPmB;;AAAA,iDAQf,IAAIA,IAAJ,EARe;;AAAA,mDAUF,IAVE;;AAAA,iDAWX,KAXW;;AAAA,6CAYd,KAZc;AAAA;;AAYP;AAEnCQ,QAAAA,KAAK,GAAI;AACL,eAAKC,eAAL,GAAqB,KAAKC,MAAL,CAAYC,YAAZ,CAAyBV,eAAzB,CAArB;AAEH;;AAEDW,QAAAA,MAAM,CAAEC,EAAF,EAAa;AACf,cAAG,KAAKC,KAAL,IAAc,KAAKJ,MAAtB,EAA6B;AAC1B,gBAAG,KAAKK,aAAL,IAAsB,KAAKC,SAA9B,EAAwC;AAAG;AACzC;AACD;;AACA,iBAAKA,SAAL,GAAiB,IAAjB;AACA,iBAAKF,KAAL,CAAWG,MAAX,CAAkBC,gBAAlB,CAAmC,KAAKC,SAAxC,EALyB,CAMzB;AACA;AACA;;AAED,gBAAIC,GAAG,GAAG,KAAKD,SAAL,CAAeE,KAAf,CAAqB,CAArB,EAAwB,KAAKC,MAA7B,EAAqC,CAArC,CAAV;AACA,iBAAKb,eAAL,CAAqBc,eAArB,CAAqCH,GAArC,EAA0C,KAAKI,IAAL,CAAUP,MAApD,EAA4D,KAAKQ,MAAjE;AACA,iBAAKD,IAAL,CAAUE,QAAV,GAAmB,KAAKD,MAAxB;;AAED,gBAAG,KAAKV,aAAR,EAAsB;AAAG;AACvB;AACA;AAAA;AAAA,gDAAaY,QAAb,CAAsBC,WAAtB,CAAkC;AAAA;AAAA,0CAAUC,gCAA5C,EAA8E,IAA9E;AACD,aAjB0B,CAkB1B;;;AACA,gBAAIC,GAAG,GAAG9B,IAAI,CAAC+B,QAAL,CAAcX,GAAd,EAAmB,KAAKV,MAAL,CAAYsB,aAA/B,CAAV;AACA,gBAAIC,KAAK,GAAC;AAAA;AAAA,gDAAcN,QAAd,CAAuBO,UAAvB,GAAoCJ,GAA9C;AACAG,YAAAA,KAAK,GAACA,KAAK,GAAG,GAAR,GAAc,GAAd,GAAoBA,KAA1B,CArB0B,CAsB7B;;AACG,iBAAKT,IAAL,CAAUW,QAAV,CAAmBF,KAAnB,EAA0BA,KAA1B,EAAiCA,KAAjC;AAEF;AACJ;;AA9CyC,O;;;;;iBAKvB,I","sourcesContent":["\r\nimport { _decorator, Component, Node, Camera, v3, Vec3, CameraComponent } from 'cc';\r\nimport { BattleManager } from './Managers/BattleManager';\r\nimport { UIPopupText } from './UIPopupText';\r\nimport { EventManager } from '../Common/Event/EventManager';\r\nimport { EventType } from '../Common/Event/EventType';\r\nimport { MathUtil } from '../../Utils/MathUtil';\r\nimport { NetConfig } from '../../Network/NetConfig';\r\nconst { ccclass, property } = _decorator;\r\n/**\r\n * 世界元素\r\n */\r\n@ccclass('UIWorldElement')\r\nexport class UIWorldElement extends Component {\r\n\r\n    public owner:Node=null;\r\n    public height:number=2.3;\r\n    @property(Node)\r\n    public camera:Node=null;\r\n    public uiVec3:Vec3=new Vec3();  //ui坐标\r\n    private worldVec3:Vec3=new Vec3();  //世界坐标\r\n    private prevWorldVec3:Vec3=new Vec3();  //上一次世界坐标\r\n\r\n    private cameraComponent:CameraComponent=null;\r\n    public isExecuteOnce:boolean = false; //是否只执行一次\r\n    private isExecute:boolean = false; //是否已经执行\r\n\r\n    start () {\r\n        this.cameraComponent=this.camera.getComponent(CameraComponent);\r\n        \r\n    }\r\n    \r\n    update (dt:number) {\r\n        if(this.owner && this.camera){ \r\n           if(this.isExecuteOnce && this.isExecute){  //只执行一次，并且已经执行\r\n             return;\r\n           }\r\n            this.isExecute = true;\r\n            this.owner.parent.getWorldPosition(this.worldVec3);\r\n            //插值\r\n            // MathUtil.lerp(this.prevWorldVec3, this.worldVec3, dt * 1000, NetConfig.frameTime, 2);\r\n            // this.prevWorldVec3.set(this.worldVec3.x, this.worldVec3.y, this.worldVec3.z);\r\n\r\n           let pos = this.worldVec3.add3f(0, this.height, 0);\r\n           this.cameraComponent.convertToUINode(pos, this.node.parent, this.uiVec3);\r\n           this.node.position=this.uiVec3;\r\n\r\n          if(this.isExecuteOnce){  //只执行一次   \r\n            //抛出事件\r\n            EventManager.Instance.dispatchObj(EventType.OnWorldElementExecuteOnceSuccess, this);\r\n          }\r\n           //计算元素大小\r\n           let len = Vec3.distance(pos, this.camera.worldPosition);\r\n           let scale=BattleManager.Instance.camCharDis / len ;\r\n           scale=scale > 0.9 ? 0.9 : scale;\r\n        //    console.log('len='+len+'，scale='+scale+'，camCharDis='+BattleManager.Instance.camCharDis)\r\n           this.node.setScale(scale, scale, scale);\r\n          \r\n        }\r\n    }\r\n}\r\n\r\n"]}