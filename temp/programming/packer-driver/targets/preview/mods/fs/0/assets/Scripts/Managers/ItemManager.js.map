{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/Managers/ItemManager.ts"],"names":["ItemManager","User","proto","DataManager","NUser","AttrPromoteType","NItem","AddItem","itemId","count","itemList","Instance","user","bag","heap","items","StackLimit","i","length","nItem","gameConfig","BagMaxGridCount","build","push","RemoveItem","item","splice","UpdateBagItemCount","TranItem","index","money","isTran","CancelTranItem"],"mappings":"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","sourcesContent":["import { User } from \"../Models/User\";\r\nimport proto from '../../Proto/proto.js';\r\nimport { DataManager } from \"./DataManager\";\r\nconst { NUser, AttrPromoteType, NItem}=proto;\r\n\r\nexport class ItemManager{\r\n    public static Instance:ItemManager=new ItemManager();\r\n\r\n    /**\r\n     * 背包添加道具\r\n     * @param itemId \r\n     * @param count \r\n     */\r\n    public AddItem(itemId:number, count:number):boolean{\r\n        let itemList=User.Instance.user.bag;\r\n        // 先查询当前商品堆叠数量\r\n        let heap = DataManager.Instance.items[itemId].StackLimit;\r\n        // 循环将 物品放入不满的格子\r\n        if (heap > 1) {\r\n            for (let i = 0; i < itemList.length && count > 0; i++) {\r\n                // 循环判断 当前背包是否已有当前商品,并且当前格子的堆叠数量没满\r\n                if (itemList[i].itemId == itemId && itemList[i].count < heap) {\r\n                    // 当前格子有空位,需要判断 增加的 数量是否小于格子剩余数量\r\n                    let nItem = itemList[i];\r\n                    if (heap - itemList[i].count >= count) {\r\n                        nItem.count += count;\r\n                        return true;\r\n                    } else {\r\n                        count = (count - (heap - nItem.count));\r\n                        nItem.count = heap;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // 如果堆叠数量为1，或者循环了一圈,没有将 所有的道具储存 ;就新开一个 格子储存\r\n        if (count > 0) {\r\n            for (let i = 0; i < DataManager.Instance.gameConfig.BagMaxGridCount-itemList.length && count > 0; i++) {\r\n                    if (count >= heap) {\r\n                      let build=new NItem();\r\n                      build.itemId=itemId;\r\n                      build.count=heap;\r\n                      itemList.push(build);\r\n                      count = count - heap;\r\n                    } else {\r\n                      let build=new NItem();\r\n                      build.itemId=itemId;\r\n                      build.count=count;\r\n                      itemList.push(build);\r\n                      // 所有物品已加入 背包\r\n                      return true;\r\n                    }\r\n            }\r\n        }\r\n\r\n        // 所有格子循环完了,依然没有将所有道具存入,说明背包已满\r\n        if (count > 0) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n     }\r\n   \r\n      /**\r\n       * 背包删除道具\r\n       */\r\n      public RemoveItem(itemId:number, count:number){\r\n       let items=User.Instance.user.bag;\r\n        for(let i=0;i<items.length;i++){\r\n          let item=items[i]\r\n          if(item.itemId==itemId){\r\n            if(count==-1){\r\n              items.splice(i,1);\r\n            }else{\r\n              item.count-=count;\r\n            }\r\n              return;\r\n          }\r\n        }\r\n      }\r\n \r\n      /**\r\n       * 背包更新道具\r\n       */\r\n      public UpdateBagItemCount(itemId:number, count:number){\r\n       let items=User.Instance.user.bag;\r\n        for(let i=0;i<items.length;i++){\r\n          let item=items[i]\r\n          if(item.itemId==itemId){\r\n             item.count=count;\r\n              break;\r\n          }\r\n        }\r\n      }\r\n \r\n      /**\r\n       * 交易道具\r\n       * @param index \r\n       * @param money \r\n       */\r\n      public TranItem(index:number,money:number){\r\n          let items=User.Instance.user.bag;\r\n          let item=items[index];\r\n          if(item){\r\n            item.isTran=true;\r\n            item.money=money;\r\n          }\r\n      }\r\n\r\n       /**\r\n       * 取消交易道具\r\n       * @param index \r\n       */\r\n      public CancelTranItem(index:number){\r\n        let items=User.Instance.user.bag;\r\n        let item=items[index];\r\n        if(item){\r\n          item.isTran=false;\r\n        }\r\n    }\r\n}"]}