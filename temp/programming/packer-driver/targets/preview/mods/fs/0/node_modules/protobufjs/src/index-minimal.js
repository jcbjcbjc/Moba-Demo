System.register(["__unresolved_0", "__unresolved_1", "__unresolved_2", "__unresolved_3", "__unresolved_4", "__unresolved_5", "__unresolved_6", "__unresolved_7"], function (_export, _context) {
  "use strict";

  var _req, _req2, _req3, _req4, _req5, _req6, _req7, _loader, _cjsExports, __cjsMetaURL;

  _export("default", void 0);

  return {
    setters: [function (_unresolved_) {
      _req = _unresolved_.__cjsMetaURL;
    }, function (_unresolved_2) {
      _req2 = _unresolved_2.__cjsMetaURL;
    }, function (_unresolved_3) {
      _req3 = _unresolved_3.__cjsMetaURL;
    }, function (_unresolved_4) {
      _req4 = _unresolved_4.__cjsMetaURL;
    }, function (_unresolved_5) {
      _req5 = _unresolved_5.__cjsMetaURL;
    }, function (_unresolved_6) {
      _req6 = _unresolved_6.__cjsMetaURL;
    }, function (_unresolved_7) {
      _req7 = _unresolved_7.__cjsMetaURL;
    }, function (_unresolved_8) {
      _loader = _unresolved_8.default;
    }],
    execute: function () {
      _loader.define(_context.meta.url, function (exports, _require, module, __filename, __dirname) {
        var require = _loader.createRequireWithReqMap({
          "./writer": _req,
          "./writer_buffer": _req2,
          "./reader": _req3,
          "./reader_buffer": _req4,
          "./util/minimal": _req5,
          "./rpc": _req6,
          "./roots": _req7
        }, _require);

        (function () {
          var protobuf = exports;
          /**
           * Build type, one of `"full"`, `"light"` or `"minimal"`.
           * @name build
           * @type {string}
           * @const
           */

          protobuf.build = "minimal"; // Serialization

          protobuf.Writer = require("./writer");
          protobuf.BufferWriter = require("./writer_buffer");
          protobuf.Reader = require("./reader");
          protobuf.BufferReader = require("./reader_buffer"); // Utility

          protobuf.util = require("./util/minimal");
          protobuf.rpc = require("./rpc");
          protobuf.roots = require("./roots");
          protobuf.configure = configure;
          /* istanbul ignore next */

          /**
           * Reconfigures the library according to the environment.
           * @returns {undefined}
           */

          function configure() {
            protobuf.util._configure();

            protobuf.Writer._configure(protobuf.BufferWriter);

            protobuf.Reader._configure(protobuf.BufferReader);
          } // Set up buffer utility according to the environment


          configure();
        })();

        _export("default", _cjsExports = module.exports);
      });

      _export("__cjsMetaURL", __cjsMetaURL = _context.meta.url);
    }
  };
});
//# sourceMappingURL=index-minimal.js.map