{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/Managers/ChatManager.ts"],"names":["ChatManager","proto","EventManager","EventType","LocalStorageUtil","HashMap","User","MathUtil","ChatUserVo","UserService","ChatMessage","ChatChannel","UserStatusChangeResponse","ChatRoomType","Array","Init","Instance","addListener","OnUserStatusQuery_UI","OnPrivateUserStatusQuery_UI","OnUserStatusChange_UI","compMessages","roomMessages","gameMessages","liveMessages","privateMessagesValue","GetItem","privateMessagesKey","user","id","privateMessages","clear","data","JSON","parse","map","DeletePrivateMsg","userId","chatMessageList","get","length","baoLiuNum","slice","put","AddMessages","channel","messages","console","log","stringify","redNumChangeFlag","i","chatMessage","redNumChangeFlag_","updateChatRedNum","Comp","push","RoomChat","chatRoomType","Room_","Game_","Live_","Private","fromId","toId","chatUserVo","fromName","fromLevel","fromCCharacterId","time","toName","toLevel","toCCharacterId","UpdatePrivateUserListOrder","SetItem","dispatch","OnChat_UI","OnChangeRedNum","currentChatChannel","isOpenChatUI","compNum","roomNum","currentSelectIdUserId","privateNum","privateUserNum","SelectedChannel","GetChannelChatRedNum","type","GetPrivateChatMsgNum","privateUserMap","key","InitPrivateUserList","userIds","parseInt","SendUserStatusQuery","param","statusList","chatUserVoList","status","sort","sortBy","cuv","isCzFlag","oneObj","unshift","response","privateUserStatusChangeFlag","j","userStatusChanges","userStatusChange","OnPrivateUserStatusChange"],"mappings":"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","sourcesContent":["import proto from '../../Proto/proto.js';\r\nimport { EventManager } from \"../UI/Common/Event/EventManager\";\r\nimport { EventType } from \"../UI/Common/Event/EventType\";\r\nimport { LocalStorageUtil } from \"../Utils/LocalStorageUtil\";\r\nimport { HashMap } from '../Utils/HashMap';\r\nimport { User } from '../Models/User';\r\nimport { MathUtil } from '../Utils/MathUtil';\r\nimport { ChatUserVo } from '../Vo/ChatUserVo';\r\nimport { UserService } from '../Services/UserService';\r\nconst { ChatMessage, ChatChannel, UserStatusChangeResponse, ChatRoomType } = proto;\r\n\r\nexport class ChatManager{\r\n    public static Instance:ChatManager=new ChatManager();\r\n\r\n    public compMessages=new Array<ChatMessage>();  //综合消息\r\n    public roomMessages=new Array<ChatMessage>();  //房间消息\r\n    public gameMessages=new Array<ChatMessage>();  //游戏消息\r\n    public liveMessages=new Array<ChatMessage>();  //直播消息\r\n    public privateMessages=new HashMap();  //私聊消息\r\n    public chatUserVoList:Array<ChatUserVo>=[];\r\n    private  userIds=new Array<number>();\r\n    \r\n    public compNum=0; //综合数量\r\n    public privateUserNum=new HashMap();  //私聊用户未读消息数量\r\n    public roomNum=0; //房间数量\r\n    public currentChatChannel=-1;   //当前所在频道\r\n    public currentSelectIdUserId=0;  //当前选中的用户\r\n    public isOpenChatUI:boolean=false; //是否打开聊天UI\r\n    private baoLiuNum:number=30;   //保留消息条数\r\n\r\n    public Init(){\r\n        EventManager.Instance.addListener(EventType.OnUserStatusQuery_UI, this.OnPrivateUserStatusQuery_UI, this);\r\n        EventManager.Instance.addListener(EventType.OnUserStatusChange_UI,this.OnUserStatusChange_UI,this);\r\n        //清空聊天列表\r\n        this.compMessages=[];\r\n        this.roomMessages=[];\r\n        this.gameMessages=[];\r\n        this.liveMessages=[];\r\n        //获取缓存私聊信息\r\n        // LocalStorageUtil.SetItem(LocalStorageUtil.privateMessagesKey,'');\r\n        let privateMessagesValue=LocalStorageUtil.GetItem(LocalStorageUtil.privateMessagesKey+User.Instance.user.id);\r\n        // console.log('privateMessagesValue='+privateMessagesValue)\r\n        this.privateMessages.clear();\r\n        if(privateMessagesValue){\r\n            this.privateMessages.data =JSON.parse(privateMessagesValue).map || {};        \r\n            this.DeletePrivateMsg();\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 保留私聊用户消息到指定条数\r\n     */\r\n    private DeletePrivateMsg(){\r\n        let privateMessages=this.privateMessages.data;\r\n        for(let userId in privateMessages){\r\n            let chatMessageList=this.privateMessages.get(userId);\r\n            if(chatMessageList && chatMessageList.length > this.baoLiuNum){\r\n                chatMessageList=chatMessageList.slice(chatMessageList.length-this.baoLiuNum);\r\n                this.privateMessages.put(userId, chatMessageList);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加消息\r\n     * @param channel  频道 \r\n     * @param messages 消息体\r\n     */\r\n    public AddMessages(channel:ChatChannel, messages:Array<ChatMessage>){\r\n        if(!messages || messages.length == 0){\r\n            return;\r\n        }\r\n        console.log('AddMessages channel='+channel+',messages='+JSON.stringify(messages))\r\n        let redNumChangeFlag=false;\r\n        for(let i=0;i<messages.length;i++){\r\n           let chatMessage = messages[i];\r\n           let redNumChangeFlag_=this.updateChatRedNum(channel, chatMessage);   //更新显示红点数量\r\n           if(redNumChangeFlag_){\r\n            redNumChangeFlag=true;\r\n           }\r\n            if(channel==ChatChannel.Comp){  //综合\r\n                this.compMessages.push(chatMessage);\r\n                continue;\r\n            }\r\n            if(channel==ChatChannel.RoomChat){  //房间\r\n                console.log('AddMessages RoomChat type='+chatMessage.chatRoomType);\r\n                if(chatMessage.chatRoomType == ChatRoomType.Room_){\r\n                    this.roomMessages.push(chatMessage);\r\n                }else if(chatMessage.chatRoomType == ChatRoomType.Game_){\r\n                    this.gameMessages.push(chatMessage);\r\n                }else if(chatMessage.chatRoomType == ChatRoomType.Live_){\r\n                    this.liveMessages.push(chatMessage);\r\n                }\r\n                continue;\r\n            }\r\n            if(channel==ChatChannel.Private){  //私聊\r\n                let userId=(chatMessage.fromId != User.Instance.user.id ? chatMessage.fromId : chatMessage.toId);\r\n                console.log('AddMessages privateMessages fromId='+chatMessage.fromId+'，toId='+chatMessage.toId+'，currrent userId='+User.Instance.user.id+',userId='+userId)\r\n                //加入私聊用户消息集合\r\n                let chatMessageList=this.privateMessages.get(userId);\r\n                if(!chatMessageList){\r\n                    chatMessageList=new Array<ChatMessage>();\r\n                    this.privateMessages.put(userId, chatMessageList);\r\n                }\r\n                chatMessageList.push(chatMessage);\r\n                //更新私聊用户列表\r\n               let chatUserVo=null as unknown as ChatUserVo;\r\n               if(chatMessage.fromId != User.Instance.user.id){\r\n                chatUserVo=new ChatUserVo(chatMessage.fromId,chatMessage.fromName,chatMessage.fromLevel,chatMessage.fromCCharacterId,true,chatMessage.time);\r\n               }else{\r\n                chatUserVo=new ChatUserVo(chatMessage.toId,chatMessage.toName,chatMessage.toLevel,chatMessage.toCCharacterId,true,chatMessage.time);\r\n               }\r\n                this.UpdatePrivateUserListOrder(chatUserVo);\r\n                continue;\r\n            }\r\n        }\r\n        if(channel==ChatChannel.Private){  //私聊，存储本地数据\r\n            LocalStorageUtil.SetItem(LocalStorageUtil.privateMessagesKey+User.Instance.user.id, JSON.stringify(this.privateMessages));\r\n        }\r\n        EventManager.Instance.dispatch(EventType.OnChat_UI,channel,messages); \r\n        console.log('AddMessages redNumChangeFlag='+redNumChangeFlag);\r\n        if(redNumChangeFlag){\r\n           EventManager.Instance.dispatch(EventType.OnChangeRedNum);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新显示红点数量\r\n     */\r\n    private updateChatRedNum(channel:ChatChannel,chatMessage:ChatMessage):boolean{\r\n        if(chatMessage.fromId==User.Instance.user.id){  //用户自己发送的消息\r\n            return false;\r\n        }\r\n        console.log('updateChatRedNum currentChatChannel='+this.currentChatChannel+'，channel='+channel)\r\n    //需要考虑当前选择的，不需要更新红点数量\r\n        if(channel==ChatChannel.Comp){  //综合\r\n            if(this.currentChatChannel==channel && this.isOpenChatUI){  //当前选择的频道\r\n              return false;\r\n            }\r\n            this.compNum++;\r\n        }else if(channel==ChatChannel.RoomChat){  //房间\r\n            if(this.currentChatChannel==channel && this.isOpenChatUI){  //当前选择的频道\r\n                return false;\r\n            }\r\n            this.roomNum++;\r\n        }else if(channel==ChatChannel.Private){  //私聊\r\n            if(this.currentChatChannel==channel && this.isOpenChatUI && this.currentSelectIdUserId==chatMessage.fromId){  //当前选择的频道\r\n                return false; \r\n            }\r\n            let privateNum=this.privateUserNum.get(chatMessage.fromId);\r\n            if(!privateNum){\r\n                privateNum=0;\r\n            }\r\n            privateNum++;\r\n            this.privateUserNum.put(chatMessage.fromId,privateNum);\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * 切换频道\r\n     * @param channel  频道 \r\n     * @param currentSelectIdUserId  当前选择用户id \r\n     */\r\n    public SelectedChannel(channel:ChatChannel,currentSelectIdUserId?:number){\r\n        console.log('SelectedChannel channel='+channel+'，currentSelectIdUserId='+currentSelectIdUserId)\r\n        if(channel==ChatChannel.Comp){  //综合\r\n            this.compNum=0;\r\n        }else if(channel==ChatChannel.RoomChat){  //房间\r\n            this.roomNum=0;           \r\n        }else if(currentSelectIdUserId){  //私聊\r\n            this.currentSelectIdUserId=currentSelectIdUserId;\r\n            this.privateUserNum.put(currentSelectIdUserId, 0);\r\n        }\r\n        if(channel || channel==ChatChannel.Comp){\r\n            this.currentChatChannel=channel; \r\n        }\r\n        EventManager.Instance.dispatch(EventType.OnChangeRedNum);\r\n    }\r\n\r\n    /**\r\n     * 获取频道未读消息数量\r\n     * @param type  1、主页面  2、房间\r\n     */\r\n    public GetChannelChatRedNum(type:number):Array<number>{\r\n        console.log('GetChannelChatRedNum currentChatChannel='+this.currentChatChannel+', type='+type)\r\n      if(type==1){  //主界面\r\n        if(this.currentChatChannel==ChatChannel.Comp){\r\n            return [ChatChannel.Comp,this.compNum];\r\n        }\r\n        if(this.currentChatChannel==ChatChannel.Private){\r\n            let privateNum=this.GetPrivateChatMsgNum();\r\n            return [ChatChannel.Private,privateNum];\r\n        }\r\n      }else{  //房间\r\n        if(this.currentChatChannel==ChatChannel.RoomChat){\r\n            return [ChatChannel.RoomChat,this.roomNum];\r\n        }\r\n      }\r\n      return [ChatChannel.Comp,this.compNum];\r\n    }\r\n\r\n    /**\r\n     * 获取私聊聊天数量\r\n     */\r\n    public GetPrivateChatMsgNum():number{\r\n        let privateUserMap=this.privateUserNum.data;\r\n        let privateNum=0;\r\n        for(let key in privateUserMap){\r\n            privateNum += privateUserMap[key];\r\n        }\r\n        return privateNum;\r\n    }\r\n\r\n    /**\r\n     * 查询私聊用户状态\r\n     */\r\n    public InitPrivateUserList(){\r\n        this.userIds=[];\r\n        let privateMessages=ChatManager.Instance.privateMessages.data;\r\n        for(let userId in privateMessages){\r\n            console.log('userId='+userId)\r\n            if(userId){\r\n                this.userIds.push(parseInt(userId));\r\n            }\r\n        }\r\n        if(this.userIds && this.userIds.length > 0){\r\n            console.log('SendUserStatusQuery userIds='+this.userIds)\r\n          UserService.Instance.SendUserStatusQuery(this.userIds);\r\n        }\r\n    }\r\n\r\n     /**\r\n     * 查询私聊用户状态响应\r\n     */\r\n    private OnPrivateUserStatusQuery_UI(param:any){\r\n        let statusList = param[0] as Array<boolean>;\r\n        let chatUserVoList=new Array<ChatUserVo>();\r\n        for(let i=0;i<this.userIds.length;i++){\r\n            let userId=this.userIds[i];\r\n            let status=(statusList && statusList.length > 0) ? statusList[i] : null;\r\n            let chatMessageList = ChatManager.Instance.privateMessages.get(userId) as Array<ChatMessage>;\r\n            if(chatMessageList && chatMessageList.length > 0){\r\n               let chatMessage = chatMessageList[chatMessageList.length-1] as ChatMessage;\r\n               let chatUserVo=null as unknown as ChatUserVo;\r\n               if(chatMessage.fromId != User.Instance.user.id){\r\n                chatUserVo=new ChatUserVo(chatMessage.fromId,chatMessage.fromName,chatMessage.fromLevel,chatMessage.fromCCharacterId,status,chatMessage.time);\r\n               }else{\r\n                chatUserVo=new ChatUserVo(chatMessage.toId,chatMessage.toName,chatMessage.toLevel,chatMessage.toCCharacterId,status,chatMessage.time);\r\n               }\r\n               chatUserVoList.push(chatUserVo);\r\n            }\r\n        }\r\n        console.log('OnPrivateUserStatusQuery_UI='+JSON.stringify(chatUserVoList))\r\n        //初始化用户列表\r\n       this.chatUserVoList=chatUserVoList.sort(MathUtil.sortBy('time',false));  //发送日期倒序 \r\n    }\r\n\r\n\r\n    /**\r\n     * 更新私聊用户列表\r\n     */\r\n    public UpdatePrivateUserListOrder(cuv:ChatUserVo){\r\n        let isCzFlag=false;\r\n        for(let i=0;i<this.chatUserVoList.length;i++){\r\n            let chatUserVo=this.chatUserVoList[i];\r\n            if(chatUserVo.userId==cuv.userId){ //已存在，和第一交换位置\r\n                isCzFlag=true;\r\n                let oneObj=this.chatUserVoList[0];\r\n                this.chatUserVoList[0]=chatUserVo;\r\n                this.chatUserVoList[i]=oneObj;\r\n                break;\r\n            }\r\n        }\r\n        if(!isCzFlag){ //不存在，加入第一个\r\n            this.chatUserVoList.unshift(cuv);\r\n        }\r\n        console.log('UpdatePrivateUserListOrder isCzFlag='+isCzFlag+'，chatUserVoList length='+this.chatUserVoList.length)\r\n    }\r\n\r\n    /**\r\n     * 用户状态变更响应\r\n     */\r\n    private OnUserStatusChange_UI(param: any){\r\n        let response = param[0] as UserStatusChangeResponse;\r\n        let privateUserStatusChangeFlag=false;  //用户状态变更标识\r\n        for(let i=0;i<this.chatUserVoList.length;i++){\r\n            let chatUserVo=this.chatUserVoList[i];\r\n            for(let j=0; j < response.userStatusChanges.length; j++){\r\n               let userStatusChange= response.userStatusChanges[j];\r\n               if(chatUserVo.userId==userStatusChange.userId){\r\n                   if(chatUserVo.status != userStatusChange.status){\r\n                    privateUserStatusChangeFlag=true;\r\n                   }\r\n                  chatUserVo.status=userStatusChange.status;\r\n               }\r\n            }\r\n        }\r\n\r\n        if(privateUserStatusChangeFlag){\r\n            EventManager.Instance.dispatch(EventType.OnPrivateUserStatusChange);\r\n        }\r\n    }\r\n\r\n}"]}