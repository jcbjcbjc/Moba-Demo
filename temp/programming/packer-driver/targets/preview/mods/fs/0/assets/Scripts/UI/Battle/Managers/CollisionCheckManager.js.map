{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/UI/Battle/Managers/CollisionCheckManager.ts"],"names":["CollisionCheckManager","proto","ShapeType","MathUtil","LogicRenderConvert","TeamType2","CharacterClass","Clear","creatureList","CollisionCheck","creature","creature2","characterDefine","IsCollision","IsDeath","entityId","myLogicPosition","CollisionTempVec3","enemyLogicPosition","isCollision","isReviseMyFlag","Shape","toString","circle","CollideCircleAndCircleRevise","RenderToLogic_Value","Radius","_amend","rect","CollideCircleAndRectRotateRevise","Width","Long_","logicRotation","y","teamType2","Blue","x","z","Class","Cart","console","log","LogicToRenderPosition","logicPosition"],"mappings":"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","sourcesContent":["import proto from \"../../../../Proto/proto.js\";\r\nimport { CreatureManager } from \"./CreatureManager\";\r\nimport { Creature } from \"../Enities/Creature\";\r\nimport { ShapeType } from \"../enums/ShapeType\";\r\nimport { MathUtil } from \"../../../Utils/MathUtil\";\r\nimport { LogicRenderConvert } from \"../Utils/LogicRenderConvert\";\r\nimport { TeamType2 } from \"../enums/TeamType2\";\r\nconst { CharacterClass } = proto;\r\n\r\n/**\r\n * 碰撞管理器\r\n */\r\nexport class CollisionCheckManager{\r\n    public static Instance: CollisionCheckManager = new CollisionCheckManager();\r\n    public creatureList:Array<Creature>=[];  //碰撞生物集合\r\n\r\n     /**\r\n     * 清理\r\n     */\r\n    public Clear() {\r\n      this.creatureList=[];\r\n    }\r\n\r\n\r\n    /**\r\n     * 碰撞检测\r\n     * @param creature \r\n     */\r\n    public CollisionCheck(creature:Creature){\r\n        //和其它生物进行碰撞检测\r\n        for(let creature2 of this.creatureList){\r\n            if (!creature.characterDefine.IsCollision || !creature2.characterDefine.IsCollision || creature.IsDeath || creature2.IsDeath || creature.entityId == creature2.entityId){  //死亡或自己\r\n                continue;\r\n            }\r\n            let myLogicPosition = creature.CollisionTempVec3; //我方位置坐标\r\n            let enemyLogicPosition = creature2.CollisionTempVec3; //敌方位置坐标\r\n            //碰撞检测开始\r\n            let isCollision:boolean=false;  //是否碰撞\r\n            let isReviseMyFlag:boolean=true; //是否修正自己\r\n            if(creature.characterDefine.Shape.toString()==ShapeType[ShapeType.circle] && creature2.characterDefine.Shape.toString()==ShapeType[ShapeType.circle]){  //都为圆形\r\n                isCollision=MathUtil.CollideCircleAndCircleRevise(myLogicPosition, enemyLogicPosition, LogicRenderConvert.RenderToLogic_Value(creature.characterDefine.Radius), LogicRenderConvert.RenderToLogic_Value(creature2.characterDefine.Radius), creature._amend);\r\n            }else if(creature.characterDefine.Shape.toString()==ShapeType[ShapeType.circle] && creature2.characterDefine.Shape.toString()==ShapeType[ShapeType.rect]){  //自己为圆形、敌方为矩形\r\n                isCollision=MathUtil.CollideCircleAndRectRotateRevise(myLogicPosition, LogicRenderConvert.RenderToLogic_Value(creature.characterDefine.Radius), enemyLogicPosition, LogicRenderConvert.RenderToLogic_Value(creature2.characterDefine.Width), LogicRenderConvert.RenderToLogic_Value(creature2.characterDefine.Long_), creature._amend, 360-creature2.logicRotation.y);\r\n                if(creature.teamType2==TeamType2.Blue){\r\n                    creature._amend.x = -creature._amend.x;\r\n                    creature._amend.z = -creature._amend.z;\r\n                }\r\n            }else if(creature.characterDefine.Shape.toString()==ShapeType[ShapeType.rect] && creature2.characterDefine.Shape.toString()==ShapeType[ShapeType.circle]){  //自己为矩形、敌方为圆形\r\n                if(creature.characterDefine.Class.toString() == CharacterClass[CharacterClass.Cart]){  //镖车\r\n                    isReviseMyFlag=false;  //修正敌人\r\n                }\r\n                isCollision=MathUtil.CollideCircleAndRectRotateRevise(enemyLogicPosition, LogicRenderConvert.RenderToLogic_Value(creature2.characterDefine.Radius), myLogicPosition, LogicRenderConvert.RenderToLogic_Value(creature.characterDefine.Width), LogicRenderConvert.RenderToLogic_Value(creature.characterDefine.Long_), isReviseMyFlag ? creature._amend : creature2._amend, 360-creature.logicRotation.y);\r\n                // if(creature.teamType2==TeamType2.Blue){\r\n                //     console.log('镖车角度='+(creature.logicRotation.y))\r\n                // }\r\n                if(creature.teamType2==TeamType2.Blue){\r\n                    if(isReviseMyFlag){  //修正自己\r\n                        creature._amend.x = -creature._amend.x;\r\n                        creature._amend.z = -creature._amend.z;\r\n                    }else{\r\n                        creature2._amend.x = -creature2._amend.x;\r\n                        creature2._amend.z = -creature2._amend.z;\r\n                    } \r\n                }\r\n            }\r\n            if(isCollision){  //碰撞到了，修正自己\r\n                console.log('碰撞到了，修正位置：'+(isReviseMyFlag ? creature._amend : creature2._amend));\r\n                if(isReviseMyFlag){  //修正自己\r\n                    creature.LogicToRenderPosition(creature.logicPosition.x + creature._amend.x, creature.logicPosition.y, creature.logicPosition.z + creature._amend.z); \r\n                }else{  //修正敌人\r\n                    creature2.LogicToRenderPosition(creature2.logicPosition.x + creature2._amend.x, creature2.logicPosition.y, creature2.logicPosition.z + creature2._amend.z); \r\n                } \r\n            }\r\n        } \r\n    }\r\n}"]}