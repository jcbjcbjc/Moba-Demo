{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/UI/Common/UIInputBox.ts"],"names":["_decorator","Component","Button","Label","director","EditBox","EventManager","EventType","LogUtil","SoundManager","SoundDefine","ccclass","property","UIInputBox","start","Init","title","message","btnOK","btnCancel","emptyTips","log","string","tips","buttonYesTitle","buttonNoTitle","getScene","addChild","node","OnClickYes","console","inputStr","input","Instance","PlaySound","SFX_UI_Confirm","dispatchObj","UIInputBox_OnClickYes","Destroy","OnClickNo","SFX_UI_Win_Close","UIInputBox_OnClickNo","Close","removeChild","destroy","removeAll"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, Sprite, SpriteFrame, Button, Label, director, EditBox } from 'cc';\r\nimport { MessageBoxType } from './MessageBox';\r\nimport { EventManager } from './Event/EventManager';\r\nimport { EventType } from './Event/EventType';\r\nimport { LogUtil } from '../../Log/LogUtil';\r\nimport { SoundManager } from '../../../Sound/SoundManager';\r\nimport { SoundDefine } from '../../../Sound/SoundDefine';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('UIInputBox')\r\nexport class UIInputBox extends Component {\r\n  \r\n    @property(Label)\r\n    public title:Label=null as unknown as Label;\r\n    @property(Label)\r\n    public tips:Label=null as unknown as Label;\r\n    @property(Label)\r\n    public message:Label=null as unknown as Label;\r\n    @property(Button)\r\n    public buttonYes:Button=null as unknown as Button;\r\n    @property(Button)\r\n    public buttonNo:Button=null as unknown as Button;\r\n    @property(EditBox)\r\n    public input:EditBox=null as unknown as EditBox;\r\n    @property(Label)\r\n    public buttonYesTitle:Label=null as unknown as Label;\r\n    @property(Label)\r\n    public buttonNoTitle:Label=null as unknown as Label;\r\n    \r\n    public emptyTips:string=null as unknown as string;\r\n\r\n    start () {\r\n    }\r\n\r\n    public Init(title:string,  message:string, btnOK:string = \"\",  btnCancel:string = \"\",  emptyTips:string = \"\"):void\r\n    {\r\n        LogUtil.log('UIInputBox:Init')\r\n        if (title)  this.title.string = title;\r\n        this.message.string = message;\r\n        this.tips.string = '';\r\n        this.emptyTips = emptyTips;\r\n\r\n        if (btnOK) this.buttonYesTitle.string = btnOK;\r\n        if (btnCancel) this.buttonNoTitle.string = btnCancel;        \r\n        \r\n        director.getScene()?.addChild(this.node);\r\n    }\r\n\r\n    public OnClickYes():void\r\n    {\r\n        console.log('OnClickYes')\r\n        this.tips.string = \"\";\r\n        let inputStr=this.input.string;\r\n        if(!inputStr && inputStr != '0'){\r\n            this.tips.string = this.emptyTips;\r\n            return;\r\n        }\r\n\r\n        SoundManager.Instance.PlaySound(SoundDefine.SFX_UI_Confirm);\r\n        let tips= EventManager.Instance.dispatchObj(EventType.UIInputBox_OnClickYes,this,inputStr);\r\n        console.log('tips='+tips)\r\n        if(tips && tips != 'close'){\r\n            this.tips.string=tips;\r\n            return;\r\n        }\r\n        if(tips=='close'){\r\n          this.Destroy();\r\n        }\r\n    }\r\n\r\n    public OnClickNo():void\r\n    {\r\n        console.log('OnClickNo')\r\n        SoundManager.Instance.PlaySound(SoundDefine.SFX_UI_Win_Close);\r\n        EventManager.Instance.dispatchObj(EventType.UIInputBox_OnClickNo,this);\r\n        this.Destroy();\r\n    }\r\n\r\n    public Close():void\r\n    {\r\n        this.Destroy();\r\n    }\r\n\r\n    private Destroy():void{\r\n        director.getScene()?.removeChild(this.node);\r\n        this.destroy();\r\n        EventManager.Instance.removeAll(this);\r\n    }\r\n}\r\n"]}