{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/node_modules/protobufjs/src/util/minimal.js"],"names":["util","exports","asPromise","require","base64","EventEmitter","float","inquire","utf8","pool","LongBits","isNode","Boolean","global","process","versions","node","window","self","emptyArray","Object","freeze","emptyObject","isInteger","Number","value","isFinite","Math","floor","isString","String","isObject","isset","isSet","obj","prop","hasOwnProperty","Array","isArray","length","keys","Buffer","prototype","utf8Write","e","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","Uint8Array","Long","dcodeIO","key2Re","key32Re","key64Re","longToHash","from","toHash","zeroHash","longFromHash","hash","unsigned","bits","fromHash","fromBits","lo","hi","toNumber","merge","dst","src","ifNotSet","i","undefined","lcFirst","str","charAt","toLowerCase","substring","newError","name","CustomError","message","properties","defineProperty","get","Error","captureStackTrace","stack","create","constructor","toString","ProtocolError","oneOfGetter","getOneOf","fieldNames","fieldMap","oneOfSetter","setOneOf","toJSONOptions","longs","enums","bytes","json","_configure","Buffer_from","encoding","allocUnsafe","Buffer_allocUnsafe","size"],"mappings":"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","sourcesContent":["\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n"]}