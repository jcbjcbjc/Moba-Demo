{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/UI/Match/UIEnterGameLoad.ts"],"names":["_decorator","Component","Sprite","Label","director","User","LoadResUtil","DataManager","proto","BattleService","EventManager","EventType","proto2","NetConfig","NetClientBattle","BattleGlobal","BattleMode","ccclass","property","TeamType","PercentForwardResponse","UIEnterGameLoad","start","i","node","active","InitTeamUser","Instance","room","my","My","enemy","Enemy","ipPortArr","ipPortStr","split","websocketBattleUrl","console","log","Connect","addListener","OnPercentForward","battleMode","Battle","this_","timer","setInterval","percent_","SendPercentForward","Live","loadScene","roomUserList","teamType","avatar","nickname","length","roomUser","userId","spriteFrame","load_local_sprite","characters","cCharacterId","UpperBodyImg","string","nickName","param","response","percentForward","allUserLoadSucess","isGoToBattleScene","percent","UpdateTeamUserPercent","percentName","onDestroy","removeAll","clearInterval"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, Sprite, Label, director } from 'cc';\r\nimport { User } from '../../Models/User';\r\nimport { LoadResUtil } from '../../Utils/LoadResUtil';\r\nimport { DataManager } from '../../Managers/DataManager';\r\nimport proto from '../../../Proto/proto.js';\r\nimport { BattleService } from '../../Services/BattleService';\r\nimport { EventManager } from '../Common/Event/EventManager';\r\nimport { EventType } from '../Common/Event/EventType';\r\nimport { LogUtil } from '../../Log/LogUtil';\r\nimport proto2 from '../../../Proto/Battle/proto.js';\r\nimport { NetConfig } from '../../Network/NetConfig';\r\nimport { NetClientBattle } from '../../Network/Battle/NetClientBattle';\r\nimport { BattleGlobal } from '../Battle/Utils/BattleGlobal';\r\nimport { BattleMode } from '../Battle/enums/BattleMode';\r\nconst { ccclass, property } = _decorator;\r\nconst { TeamType }=proto;\r\nconst { PercentForwardResponse }=proto2;\r\n\r\n@ccclass('UIEnterGameLoad')\r\nexport class UIEnterGameLoad extends Component {\r\n\r\n    @property(Sprite)\r\n    public myAvatar1=null as unknown as Sprite;\r\n    @property(Label)\r\n    public myNickname1=null as unknown as Label;\r\n    @property(Label)\r\n    public myPercent1=null as unknown as Label;\r\n\r\n    @property(Sprite)\r\n    public myAvatar2=null as unknown as Sprite;\r\n    @property(Label)\r\n    public myNickname2=null as unknown as Label;\r\n    @property(Label)\r\n    public myPercent2=null as unknown as Label;\r\n\r\n    @property(Sprite)\r\n    public myAvatar3=null as unknown as Sprite;\r\n    @property(Label)\r\n    public myNickname3=null as unknown as Label;\r\n    @property(Label)\r\n    public myPercent3=null as unknown as Label;\r\n\r\n    @property(Sprite)\r\n    public enemyAvatar1=null as unknown as Sprite;\r\n    @property(Label)\r\n    public enemyNickname1=null as unknown as Label;\r\n    @property(Label)\r\n    public enemyPercent1=null as unknown as Label;\r\n\r\n    @property(Sprite)\r\n    public enemyAvatar2=null as unknown as Sprite;\r\n    @property(Label)\r\n    public enemyNickname2=null as unknown as Label;\r\n    @property(Label)\r\n    public enemyPercent2=null as unknown as Label;\r\n\r\n    @property(Sprite)\r\n    public enemyAvatar3=null as unknown as Sprite;\r\n    @property(Label)\r\n    public enemyNickname3=null as unknown as Label;\r\n    @property(Label)\r\n    public enemyPercent3=null as unknown as Label;\r\n    private timer=null;\r\n    private percent_:number=0;   //加载进度百分比\r\n    private isGoToBattleScene:boolean=false; //是否已跳转战斗场景\r\n\r\n    async start () {\r\n        for(let i=0; i < 3; i++){\r\n            this['myAvatar'+(i+1)].node.active = false;\r\n            this['enemyAvatar'+(i+1)].node.active = false;\r\n            this['myPercent'+(i+1)].node.active = false;\r\n            this['enemyPercent'+(i+1)].node.active = false;\r\n        }\r\n        \r\n       await this.InitTeamUser(User.Instance.room.my,TeamType.My);\r\n       await this.InitTeamUser(User.Instance.room.enemy,TeamType.Enemy);\r\n        //连接到战斗服务器\r\n        let ipPortArr=User.Instance.room.ipPortStr.split(\":\");\r\n        NetConfig.websocketBattleUrl='ws://'+ipPortArr[0]+':'+ipPortArr[2]+'/ws';\r\n        console.log('战斗服务器地址：'+NetConfig.websocketBattleUrl)\r\n        \r\n        NetClientBattle.Instance.Connect();\r\n\r\n        EventManager.Instance.addListener(EventType.OnPercentForward, this.OnPercentForward, this)\r\n      if(BattleGlobal.battleMode == BattleMode.Battle){  //对局模式\r\n        //上传加载进度，需要等所有用户资源都加载完成\r\n        let this_=this;\r\n        this.timer=setInterval(function(){\r\n            console.log('uploadProgress percent_='+this_.percent_)\r\n            BattleService.Instance.SendPercentForward(this_.percent_);\r\n            \r\n            if(this_.percent_ < 100){\r\n                this_.percent_ += 100;\r\n            }\r\n        },500);\r\n        \r\n      }else if(BattleGlobal.battleMode == BattleMode.Live){  //观看直播模式\r\n          //加载资源，只需要当前用户的资源加载完成即可\r\n          //跳转战斗场景\r\n          director.loadScene('Map01');\r\n      }\r\n    }\r\n    /**\r\n     * 初始化队伍信息\r\n     * @param roomUserList \r\n     * @param teamType \r\n     */\r\n    private async InitTeamUser(roomUserList:any,teamType:TeamType){\r\n        let avatar=(teamType==TeamType.My?'myAvatar':'enemyAvatar');\r\n        let nickname=(teamType==TeamType.My?'myNickname':'enemyNickname');\r\n\r\n        for(let i=0; i < roomUserList.length; i++){\r\n            let roomUser=roomUserList[i];\r\n            console.log('roomUser.userId='+roomUser.userId)\r\n            this[avatar+(i+1)].node.active = true;\r\n            this[avatar+(i+1)].spriteFrame=await LoadResUtil.load_local_sprite(DataManager.Instance.characters[roomUser.cCharacterId].UpperBodyImg+'/spriteFrame');\r\n            this[nickname+(i+1)].string=roomUser.nickName;\r\n        }  \r\n    } \r\n\r\n      /**\r\n     * 进度转发响应\r\n     */\r\n    private OnPercentForward(param: any): void {\r\n        let response = param[0] as PercentForwardResponse;\r\n        console.log(\"OnPercentForward: percentForward=\"+ response.percentForward +'，allUserLoadSucess='+ response.allUserLoadSucess+'，isGoToBattleScene='+this.isGoToBattleScene);\r\n        let userId=response.percentForward.userId;\r\n        let percent=response.percentForward.percent;\r\n\r\n        this.UpdateTeamUserPercent(userId, percent, TeamType.My);\r\n        this.UpdateTeamUserPercent(userId, percent, TeamType.Enemy);\r\n        //全部用户资源加载成功\r\n        if(response.allUserLoadSucess && !this.isGoToBattleScene){\r\n            this.isGoToBattleScene=true;\r\n            director.loadScene('Map01');  //跳转战斗场景\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新队伍用户加载进度\r\n     * @param userId \r\n     * @param percent \r\n     * @param teamType \r\n     */\r\n    private UpdateTeamUserPercent(userId:number,percent:number,teamType:TeamType){\r\n       let roomUserList=teamType==TeamType.My?User.Instance.room.my:User.Instance.room.enemy;\r\n       let percentName=(teamType==TeamType.My?'myPercent':'enemyPercent');\r\n        for(let i=0; i < roomUserList.length; i++){\r\n            let roomUser=roomUserList[i];\r\n            // console.log(roomUser.userId +'=='+ userId +'==='+ (percentName+(i+1)))\r\n           if(roomUser.userId == userId){\r\n               this[percentName+(i+1)].string=percent+'%';\r\n           } \r\n        } \r\n    }\r\n \r\n    onDestroy(){\r\n        EventManager.Instance.removeAll(this);\r\n        clearInterval(this.timer);\r\n    }\r\n}\r\n\r\n"]}