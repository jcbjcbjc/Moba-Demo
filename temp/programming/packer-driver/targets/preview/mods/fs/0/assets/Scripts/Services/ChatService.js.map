{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/Services/ChatService.ts"],"names":["ChatService","LogUtil","proto","NetClient","EventManager","EventType","User","ChatManager","TipsManager","NetMessage","NetMessageRequest","Result","ChatRequest","ChatMessage","ChatChannel","ChatResponse","ChatRoomType","Init","Instance","addListener","OnChat","SendChat","chatChannel","msg","chatRoomType","toId","toName","toLevel","toCCharacterId","log","message","Request","chatReq","chatMessage","fromId","user","id","fromName","nickname","fromLevel","character","level","fromCCharacterId","cid","SendMessage","param","response","result","errormsg","Success","AddMessages","Comp","compMessages","Private","privateMessages","RoomChat","roomMessages","showTips"],"mappings":"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","sourcesContent":["import { LogUtil } from \"../Log/LogUtil\";\r\nimport proto from '../../Proto/proto.js';\r\nimport { NetClient } from \"../Network/NetClient\";\r\nimport { MessageBox, MessageBoxType } from \"../UI/Common/MessageBox\";\r\nimport { EventManager } from \"../UI/Common/Event/EventManager\";\r\nimport { EventType } from \"../UI/Common/Event/EventType\";\r\nimport { SocketConst } from \"../Network/SocketConst\";\r\nimport { User } from \"../Models/User\";\r\nimport { director } from \"cc\";\r\nimport { SoundManager } from \"../../Sound/SoundManager\";\r\nimport { SoundDefine } from \"../../Sound/SoundDefine\";\r\nimport { ItemManager } from \"../Managers/ItemManager\";\r\nimport { ChatManager } from \"../Managers/ChatManager\";\r\nimport { TipsManager } from \"../UI/TipsManager\";\r\nconst { NetMessage, NetMessageRequest, Result, ChatRequest, ChatMessage, ChatChannel, ChatResponse, ChatRoomType } = proto;\r\n\r\nexport class ChatService{\r\n    public static Instance: ChatService = new ChatService();\r\n\r\n    public Init() {\r\n        EventManager.Instance.addListener(EventType.OnChat, this.OnChat, this)\r\n    }\r\n\r\n\r\n    /**\r\n     * 发送聊天\r\n     */\r\n    public SendChat(chatChannel:ChatChannel,msg:string, chatRoomType:ChatRoomType, toId?:number, toName?:string, toLevel?:number, toCCharacterId?:number): void {\r\n        LogUtil.log(\"SendChat\");\r\n        let message = new NetMessage();\r\n        message.Request = new NetMessageRequest();\r\n        message.Request.chatReq = new ChatRequest();\r\n        message.Request.chatReq.chatMessage=new ChatMessage();\r\n        message.Request.chatReq.chatMessage.chatChannel=chatChannel;\r\n        message.Request.chatReq.chatMessage.fromId=User.Instance.user.id;\r\n        message.Request.chatReq.chatMessage.fromName=User.Instance.user.nickname;\r\n        message.Request.chatReq.chatMessage.fromLevel=User.Instance.user.character.level;\r\n        message.Request.chatReq.chatMessage.fromCCharacterId=User.Instance.user.character.cid;\r\n        message.Request.chatReq.chatMessage.chatRoomType = chatRoomType;\r\n        message.Request.chatReq.chatMessage.toId=toId;\r\n        message.Request.chatReq.chatMessage.toName=toName;\r\n        message.Request.chatReq.chatMessage.toLevel=toLevel;\r\n        message.Request.chatReq.chatMessage.toCCharacterId=toCCharacterId;\r\n        message.Request.chatReq.chatMessage.msg=msg;\r\n        NetClient.Instance.SendMessage(message);\r\n    }\r\n\r\n\r\n    /** \r\n     * 聊天响应\r\n     */\r\n    private OnChat(param: any): void {\r\n        let response = param[0] as ChatResponse;\r\n        LogUtil.log(\"OnChat:{0}\", response.result,response.errormsg);\r\n            if (response.result == Result.Success){\r\n                ChatManager.Instance.AddMessages(ChatChannel.Comp, response.compMessages);\r\n                ChatManager.Instance.AddMessages(ChatChannel.Private, response.privateMessages);\r\n                ChatManager.Instance.AddMessages(ChatChannel.RoomChat, response.roomMessages);\r\n            } else{\r\n                TipsManager.Instance.showTips(response.errormsg);\r\n            }\r\n    }\r\n}"]}