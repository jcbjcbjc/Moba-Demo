{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/UI/Common/UIMessageBox.ts"],"names":["_decorator","Component","Sprite","Button","Label","director","MessageBoxType","EventManager","EventType","LogUtil","SoundManager","SoundDefine","ccclass","property","UIMessageBox","start","Init","title","message","type","btnOK","btnCancel","Information","log","string","icons","enabled","Confirm","Error","buttonYesTitle","buttonNoTitle","buttonNo","node","active","getScene","addChild","Instance","PlaySound","SFX_Message_Error","SFX_Message_Info","OnClickYes","console","SFX_UI_Confirm","dispatchObj","UIMessageBox_OnClickYes","Destroy","OnClickNo","uuid","SFX_UI_Win_Close","UIMessageBox_OnClickNo","removeChild","destroy","removeAll"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, Sprite, SpriteFrame, Button, Label, director } from 'cc';\r\nimport { MessageBoxType } from './MessageBox';\r\nimport { EventManager } from './Event/EventManager';\r\nimport { EventType } from './Event/EventType';\r\nimport { LogUtil } from '../../Log/LogUtil';\r\nimport { SoundManager } from '../../../Sound/SoundManager';\r\nimport { SoundDefine } from '../../../Sound/SoundDefine';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('UIMessageBox')\r\nexport class UIMessageBox extends Component {\r\n  \r\n    @property(Label)\r\n    public title:Label=null as unknown as Label;\r\n    @property(Label)\r\n    public message:Label=null as unknown as Label;\r\n    @property([Sprite])\r\n    public icons:Array<Sprite>=[];\r\n    @property(Button)\r\n    public buttonYes:Button=null as unknown as Button;\r\n    @property(Button)\r\n    public buttonNo:Button=null as unknown as Button;\r\n    @property(Label)\r\n    public buttonYesTitle:Label=null as unknown as Label;\r\n    @property(Label)\r\n    public buttonNoTitle:Label=null as unknown as Label;\r\n    \r\n    start () {\r\n    }\r\n\r\n    public Init(title:string,  message:string, type:MessageBoxType = MessageBoxType.Information, btnOK:string = \"\",  btnCancel:string = \"\"):void\r\n    {\r\n        LogUtil.log('UIMessageBox:Init')\r\n        if (title)  this.title.string = title;\r\n        \r\n        this.message.string = message;\r\n        this.icons[0].enabled = (type == MessageBoxType.Information);\r\n        this.icons[1].enabled = (type == MessageBoxType.Confirm);\r\n        this.icons[2].enabled = (type == MessageBoxType.Error);\r\n\r\n        if (btnOK) this.buttonYesTitle.string = btnOK;\r\n        if (btnCancel) this.buttonNoTitle.string = btnCancel;        \r\n        \r\n        this.buttonNo.node.active=(type == MessageBoxType.Confirm);\r\n        director.getScene()?.addChild(this.node);\r\n        if(type==MessageBoxType.Error)\r\n            SoundManager.Instance.PlaySound(SoundDefine.SFX_Message_Error);\r\n        else\r\n            SoundManager.Instance.PlaySound(SoundDefine.SFX_Message_Info);\r\n    }\r\n\r\n    public OnClickYes():void\r\n    {\r\n        console.log('OnClickYes')\r\n        SoundManager.Instance.PlaySound(SoundDefine.SFX_UI_Confirm);\r\n        EventManager.Instance.dispatchObj(EventType.UIMessageBox_OnClickYes,this);\r\n        this.Destroy();\r\n    }\r\n\r\n    public OnClickNo():void\r\n    {\r\n        console.log('OnClickNo'+this.uuid)\r\n        SoundManager.Instance.PlaySound(SoundDefine.SFX_UI_Win_Close);\r\n        EventManager.Instance.dispatchObj(EventType.UIMessageBox_OnClickNo,this);\r\n        this.Destroy();\r\n    }\r\n\r\n    private Destroy():void{\r\n        director.getScene()?.removeChild(this.node);\r\n        this.destroy();\r\n        EventManager.Instance.removeAll(this);\r\n    }\r\n}\r\n"]}