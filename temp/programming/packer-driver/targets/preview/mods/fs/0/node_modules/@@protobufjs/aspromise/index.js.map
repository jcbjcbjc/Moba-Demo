{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/node_modules/@protobufjs/aspromise/index.js"],"names":["module","exports","asPromise","fn","ctx","params","Array","arguments","length","offset","index","pending","Promise","executor","resolve","reject","callback","err","apply"],"mappings":";;;;;;;;;;;;;;;;AACAA,UAAAA,MAAM,CAACC,OAAP,GAAiBC,SAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,mBAASA,SAAT,CAAmBC,EAAnB,EAAuBC;AAAG;AAA1B,YAA0C;AACtC,gBAAIC,MAAM,GAAI,IAAIC,KAAJ,CAAUC,SAAS,CAACC,MAAV,GAAmB,CAA7B,CAAd;AAAA,gBACIC,MAAM,GAAI,CADd;AAAA,gBAEIC,KAAK,GAAK,CAFd;AAAA,gBAGIC,OAAO,GAAG,IAHd;;AAIA,mBAAOD,KAAK,GAAGH,SAAS,CAACC,MAAzB;AACIH,cAAAA,MAAM,CAACI,MAAM,EAAP,CAAN,GAAmBF,SAAS,CAACG,KAAK,EAAN,CAA5B;AADJ;;AAEA,mBAAO,IAAIE,OAAJ,CAAY,SAASC,QAAT,CAAkBC,OAAlB,EAA2BC,MAA3B,EAAmC;AAClDV,cAAAA,MAAM,CAACI,MAAD,CAAN,GAAiB,SAASO,QAAT,CAAkBC;AAAG;AAArB,gBAAqC;AAClD,oBAAIN,OAAJ,EAAa;AACTA,kBAAAA,OAAO,GAAG,KAAV;AACA,sBAAIM,GAAJ,EACIF,MAAM,CAACE,GAAD,CAAN,CADJ,KAEK;AACD,wBAAIZ,MAAM,GAAG,IAAIC,KAAJ,CAAUC,SAAS,CAACC,MAAV,GAAmB,CAA7B,CAAb;AAAA,wBACIC,MAAM,GAAG,CADb;;AAEA,2BAAOA,MAAM,GAAGJ,MAAM,CAACG,MAAvB;AACIH,sBAAAA,MAAM,CAACI,MAAM,EAAP,CAAN,GAAmBF,SAAS,CAACE,MAAD,CAA5B;AADJ;;AAEAK,oBAAAA,OAAO,CAACI,KAAR,CAAc,IAAd,EAAoBb,MAApB;AACH;AACJ;AACJ,eAbD;;AAcA,kBAAI;AACAF,gBAAAA,EAAE,CAACe,KAAH,CAASd,GAAG,IAAI,IAAhB,EAAsBC,MAAtB;AACH,eAFD,CAEE,OAAOY,GAAP,EAAY;AACV,oBAAIN,OAAJ,EAAa;AACTA,kBAAAA,OAAO,GAAG,KAAV;AACAI,kBAAAA,MAAM,CAACE,GAAD,CAAN;AACH;AACJ;AACJ,aAvBM,CAAP;AAwBH","sourcesContent":["\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n"]}