{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/UI/Battle/Managers/SpawnMonManager.ts"],"names":["SpawnMonManager","instantiate","Node","Vec3","BattleManager","DataManager","LoadResUtil","CreatureManager","TeamType2","DataUtil","proto","Creature","CreatureType","MathUtil","PositionVo","HashMap","BattleGlobal","CharacterClass","Init","noticeSpawnRuleId","soldierCreateCount","soldierCreateFrameId","blueSoldierPosList","redSoldierPosList","soldierCreateIndex","soldierCardDir","soldierCreateWaveCount","monMap","clear","blueCartNode","redCartNode","soldierCharacterDefineList","queryCharactersByClass","Soldier","cartCharacterDefine","Cart","prefab","loadPrefab","Resource","RedResource","noticeMonList","noticeMonsterCharacterDefineList","NoticeMonsters","noticeMonsterCharacterDefine","node","push","monstersCharacterDefineList","Monsters","monstersCharacterDefine","nodeList","get","ID","node2","put","nodeParentMap","childrenNodeArr","Instance","spawnMonsterNode","children","i","length","characterParentNode","removeAllChildren","spawnID","parseInt","name","replace","spawnRuleDefineList","queryListBySpawnID","spawnRuleDefine","characterDefine","characters","SpawnMonID","blueTeamType2","Neutral","redTeamType2","Class","toString","Blue","Red","indexOf","oldParentNode","setPosition","position","x","y","z","rotation","getRotation","getEulerAngles","getWorldPosition","monster","CreateMonster","redCart","shift","console","log","uuid","blueCart","CreateSoldier","teamType2","count","soldierMap","blueSoldierMap","redSoldierMap","soldierCharacterDefine","parentNode","idx","birthPosition","birthRotation","undefined","resource","addChild","Monster","AddCreature","LogicUpdate","frameId","creatureMap","creatureData","data","entityId","creature","creatureType","creatureClass","frameCount","deathFrameId","secondToFrame","SpawnPeriod","IsDeath","spawnRules","parent","IsSpawnPeriod","soldierWaveCreateCount","gameConfig","SoldierWaveCreateCount","SoldierWaveWaitTime","querySpawnRulesByMonID","soldierCount","GetCountByClass","SoldierMaxCount","isGuardCart","blueSoldierCardDir","positionVo","redSoldierCardDir","update","dt"],"mappings":"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","sourcesContent":["import { NetConfig } from \"../../../Network/NetConfig\";\r\nimport { BattleManager } from \"./BattleManager\";\r\nimport { DataManager } from \"../../../Managers/DataManager\";\r\nimport { SpawnRuleDefine } from \"../../../Data/SpawnRuleDefine\";\r\nimport { LoadResUtil } from \"../../../Utils/LoadResUtil\";\r\nimport { instantiate, Node, find, Vec3 } from \"cc\";\r\nimport { CreatureManager } from \"./CreatureManager\";\r\nimport { TeamType2 } from \"../enums/TeamType2\";\r\nimport { DataUtil } from \"../../../Utils/DataUtil\";\r\nimport proto from '../../../../Proto/proto.js';\r\nimport { CharacterDefine } from \"../../../Data/CharacterDefine\";\r\nimport { Creature } from \"../Enities/Creature\";\r\nimport { CreatureType } from \"../enums/CreatureType\";\r\nimport { MathUtil } from \"../../../Utils/MathUtil\";\r\nimport { PositionVo } from \"../Vo/PositionVo\";\r\nimport { HashMap } from \"../../../Utils/HashMap\";\r\nimport { CarDirType } from \"../enums/CarDirType\";\r\nimport { BattleGlobal } from \"../Utils/BattleGlobal\";\r\nimport { LogicRenderConvert } from \"../Utils/LogicRenderConvert\";\r\nconst { CharacterClass } = proto;\r\n\r\n/**\r\n * 刷怪管理器\r\n */\r\nexport class SpawnMonManager {\r\n    public static Instance: SpawnMonManager = new SpawnMonManager();\r\n\r\n    public noticeSpawnRuleId: number = 0; //公告刷怪规则id\r\n    public soldierCreateCount: number = 0;  //小兵创建数量\r\n    public soldierCreateFrameId: number = 0;  //小兵创建帧数\r\n    public blueSoldierPosList: Array<PositionVo> = [];  //蓝队小兵位置\r\n    public redSoldierPosList: Array<PositionVo> = [];  //红队小兵位置\r\n    public soldierCreateIndex: number = 0;  //小兵创建索引\r\n    public soldierCharacterDefineList:Array<CharacterDefine> = [];   //小兵配置\r\n\r\n    private blueCartNode: Node;  //蓝队镖车\r\n    private redCartNode: Node;  //红队镖车\r\n    private noticeMonList:Array<Node>=[]; //公告怪物集合\r\n    private monMap: HashMap = new HashMap();   //怪物集合  key怪物配置id  value节点集合\r\n    private blueSoldierMap: HashMap = new HashMap(); //蓝队小兵集合  key怪物配置id  value节点集合\r\n    private redSoldierMap: HashMap = new HashMap(); //红队小兵集合  key怪物配置id  value节点集合\r\n    private soldierCardDir:number=0;  //小兵在镖车的方向 \r\n    private soldierCreateWaveCount:number=0;  //创建波数\r\n\r\n    /**\r\n     * 初始化，在各个刷怪点，创建怪物\r\n     */\r\n    public async Init() {\r\n        this.noticeSpawnRuleId = 0;\r\n        this.soldierCreateCount = 0;\r\n        this.soldierCreateFrameId = 0;\r\n        this.blueSoldierPosList = [];\r\n        this.redSoldierPosList = [];\r\n        this.soldierCreateIndex = 0;\r\n        this.soldierCardDir = 0;\r\n        this.soldierCreateWaveCount = 0;\r\n        this.monMap.clear();\r\n        // this.blueSoldierMap.clear();\r\n        // this.redSoldierMap.clear();\r\n        this.blueCartNode = null;\r\n        this.redCartNode = null;\r\n\r\n        this.soldierCharacterDefineList = DataUtil.queryCharactersByClass(CharacterClass.Soldier);\r\n       \r\n        //镖车提前创建\r\n        let cartCharacterDefine = DataUtil.queryCharactersByClass(CharacterClass.Cart)[0];\r\n        if(!this.blueCartNode){\r\n            let prefab = await LoadResUtil.loadPrefab(cartCharacterDefine.Resource);\r\n            this.blueCartNode = instantiate(prefab) as Node;\r\n        }\r\n        if(!this.redCartNode){\r\n            let prefab = await LoadResUtil.loadPrefab(cartCharacterDefine.RedResource);\r\n            this.redCartNode = instantiate(prefab) as Node;\r\n        }\r\n        this.noticeMonList=[];\r\n        //公告怪物提前创建，用一个移除一个\r\n        let noticeMonsterCharacterDefineList = DataUtil.queryCharactersByClass(CharacterClass.NoticeMonsters);\r\n        for(let noticeMonsterCharacterDefine of noticeMonsterCharacterDefineList){\r\n            let prefab = await LoadResUtil.loadPrefab(noticeMonsterCharacterDefine.Resource);\r\n            let node = instantiate(prefab) as Node;\r\n            this.noticeMonList.push(node);\r\n        }\r\n        //怪物提前创建，创建一个存储起来\r\n        let monstersCharacterDefineList = DataUtil.queryCharactersByClass(CharacterClass.Monsters);\r\n        for(let monstersCharacterDefine of monstersCharacterDefineList){\r\n            let nodeList = this.monMap.get(monstersCharacterDefine.ID) as Array<Node>;\r\n            if(!nodeList){\r\n                nodeList=[];\r\n            }\r\n              let prefab = await LoadResUtil.loadPrefab(monstersCharacterDefine.Resource);\r\n              let node = instantiate(prefab) as Node;\r\n              let node2 = instantiate(prefab) as Node;\r\n              nodeList.push(node);\r\n              nodeList.push(node2);\r\n              this.monMap.put(monstersCharacterDefine.ID, nodeList);\r\n        }\r\n        //创建小兵\r\n    //    await this.CreateSoldier(TeamType2.Blue, 10);\r\n    //    await this.CreateSoldier(TeamType2.Red, 10);\r\n\r\n        let nodeParentMap: { [key: number]: Node; } = {} as unknown as { [key: number]: Node; };\r\n        let childrenNodeArr = BattleManager.Instance.spawnMonsterNode.children;\r\n        for (let i = 0; i < childrenNodeArr.length; i++) {\r\n            let characterParentNode = childrenNodeArr[i];\r\n           // console.log('characterParentNode len='+characterParentNode.children.length+'，name='+characterParentNode.name)\r\n            characterParentNode.removeAllChildren();\r\n            let spawnID = parseInt(characterParentNode.name.replace('_', ''));    //刷怪点id\r\n            let spawnRuleDefineList = DataUtil.queryListBySpawnID(spawnID);\r\n            if (!spawnRuleDefineList || spawnRuleDefineList.length < 1) {\r\n                continue;\r\n            }\r\n            //获取第一个刷怪规则\r\n            let spawnRuleDefine = spawnRuleDefineList[0];\r\n            let characterDefine: CharacterDefine = DataManager.Instance.characters[spawnRuleDefine.SpawnMonID];\r\n\r\n            let blueTeamType2 = TeamType2.Neutral;  //蓝队类型\r\n            let redTeamType2 = TeamType2.Neutral;  //红队类型\r\n            if (characterDefine.Class.toString() == CharacterClass[CharacterClass.Soldier] ||\r\n                characterDefine.Class.toString() == CharacterClass[CharacterClass.Cart]) {\r\n                blueTeamType2 = TeamType2.Blue;\r\n                redTeamType2 = TeamType2.Red;\r\n            }\r\n            // console.log(characterDefine.Class.toString() +'====='+ CharacterClass[CharacterClass.NoticeMonsters])\r\n            if (characterParentNode.name.indexOf('_') != -1) {\r\n                //不是公告，创建红方、中立\r\n                if (characterDefine.Class.toString() == CharacterClass[CharacterClass.NoticeMonsters]) {\r\n                    continue;\r\n                }\r\n                    let oldParentNode = nodeParentMap[characterParentNode.name.replace('_', '')] as Node;\r\n                    characterParentNode.setPosition(oldParentNode.position.x, oldParentNode.position.y, -oldParentNode.position.z);\r\n                    if (characterDefine.Class.toString() == CharacterClass[CharacterClass.Soldier]) {   //红队小兵\r\n                        let rotation:Vec3=new Vec3();\r\n                        characterParentNode.getRotation().getEulerAngles(rotation);\r\n                        this.redSoldierPosList.push(new PositionVo(characterParentNode.getWorldPosition(), rotation));\r\n                        continue;\r\n                    }\r\n                    let node=null;\r\n                    if (characterDefine.Class.toString() == CharacterClass[CharacterClass.Monsters]) { //怪物缓存取\r\n                        node=this.monMap.get(characterDefine.ID)[1];\r\n                    }else if (characterDefine.Class.toString() == CharacterClass[CharacterClass.Cart]) { //镖车缓存取\r\n                        node=this.redCartNode;\r\n                    }\r\n                    let monster = await this.CreateMonster(characterDefine, redTeamType2, node, characterParentNode, spawnRuleDefine);\r\n                    if (characterDefine.Class.toString() == CharacterClass[CharacterClass.Cart]) {\r\n                        BattleGlobal.redCart = monster;\r\n                    }\r\n            } else {\r\n                nodeParentMap[characterParentNode.name] = characterParentNode;\r\n                if (characterDefine.Class.toString() == CharacterClass[CharacterClass.Soldier]) {   //蓝队小兵\r\n                   let rotation:Vec3=new Vec3();\r\n                   characterParentNode.getRotation().getEulerAngles(rotation);\r\n                   this.blueSoldierPosList.push(new PositionVo(characterParentNode.getWorldPosition(), rotation));\r\n                   continue;\r\n                }\r\n                //创建怪物蓝方、中立\r\n                let node=null;\r\n                if (characterDefine.Class.toString() == CharacterClass[CharacterClass.NoticeMonsters]) {  //公告怪物缓存取\r\n                    if(this.noticeMonList.length > 0){\r\n                        node=this.noticeMonList.shift();  //删除第一个元素\r\n                    }\r\n                }else if (characterDefine.Class.toString() == CharacterClass[CharacterClass.Monsters]) { //怪物缓存取\r\n                   node=this.monMap.get(characterDefine.ID)[0];\r\n                }else if (characterDefine.Class.toString() == CharacterClass[CharacterClass.Cart]) { //镖车缓存取\r\n                   node=this.blueCartNode;\r\n                   console.log('创建镖车 node id='+node.uuid+'，characterParentNode='+characterParentNode)\r\n                }\r\n                let monster = await this.CreateMonster(characterDefine, blueTeamType2, node, characterParentNode, spawnRuleDefine);\r\n                if (characterDefine.Class.toString() == CharacterClass[CharacterClass.Cart]) { \r\n                    BattleGlobal.blueCart=monster;\r\n                }\r\n\r\n                if (characterDefine.Class.toString() == CharacterClass[CharacterClass.NoticeMonsters]) {  //公告怪物\r\n                    this.noticeSpawnRuleId = spawnRuleDefine.ID;\r\n                    // //测试代码，测试怪物20秒死亡\r\n                    // setTimeout(function(){\r\n                    //     console.log(monster.characterDefine.Class+'，死亡')\r\n                    //     monster.DoDeath();\r\n                    // },12000);\r\n                } else if (characterDefine.Class.toString() == CharacterClass[CharacterClass.Monsters]) {  //怪物\r\n                    //测试代码，测试怪物20秒死亡\r\n                    // setTimeout(function(){\r\n                    //     console.log(monster.characterDefine.Class+'，死亡')\r\n                    //     monster.DoDeath();\r\n                    // },1200);                \r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建小兵\r\n     */\r\n    private async CreateSoldier(teamType2: TeamType2, count:number=5){\r\n        let soldierMap = (teamType2==TeamType2.Blue ? this.blueSoldierMap : this.redSoldierMap);\r\n        for(let soldierCharacterDefine of this.soldierCharacterDefineList){\r\n            let nodeList = soldierMap.get(soldierCharacterDefine.ID) as Array<Node>;\r\n            if(!nodeList){\r\n                nodeList=[];\r\n            }\r\n            for(let i=nodeList.length; i < count; i++){  //创建5个\r\n                let prefab = await LoadResUtil.loadPrefab(teamType2==TeamType2.Blue ? soldierCharacterDefine.Resource : soldierCharacterDefine.RedResource);\r\n                let node = instantiate(prefab) as Node;\r\n                nodeList.push(node);\r\n            }\r\n            // console.log('count='+count+'，soldier id='+soldierCharacterDefine.ID+'，nodeList len='+nodeList.length)\r\n            soldierMap.put(soldierCharacterDefine.ID, nodeList);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建怪物\r\n     * @param characterDefine \r\n     * @param teamType2 \r\n     */\r\n    private async CreateMonster(characterDefine: CharacterDefine, teamType2: TeamType2, node: Node, parentNode: Node, spawnRuleDefine: SpawnRuleDefine, idx: number = undefined\r\n        , birthPosition: Vec3 = null, birthRotation: Vec3 = null): Creature {\r\n        if(!node){\r\n            let resource = '';\r\n            if(characterDefine.Class.toString() == CharacterClass[CharacterClass.Soldier] ||\r\n               characterDefine.Class.toString() == CharacterClass[CharacterClass.Cart]){\r\n               resource = teamType2==TeamType2.Red ? characterDefine.RedResource : characterDefine.Resource;\r\n            }else{\r\n               resource = characterDefine.Resource;\r\n            }\r\n            let prefab = await LoadResUtil.loadPrefab(resource);\r\n            node = instantiate(prefab) as Node;\r\n        }\r\n        console.log('创建怪物：'+characterDefine.ID + '，node：' + node +\"，parentNode：\"+parentNode)\r\n        parentNode.addChild(node);\r\n        let monster: Creature = new Creature(teamType2, node, characterDefine, undefined, CreatureType.Monster, birthPosition, birthRotation);\r\n        monster.spawnRuleDefine = spawnRuleDefine;\r\n        CreatureManager.Instance.AddCreature(monster.node, monster, idx);\r\n        return monster;\r\n    }\r\n\r\n    /**\r\n     * 逻辑更新\r\n     * @param frameId \r\n     */\r\n    public async LogicUpdate(frameId: number) {\r\n        //遍历所有生物\r\n        let creatureMap = CreatureManager.Instance.creatureMap;\r\n        let creatureData = creatureMap.data;\r\n        for (let entityId in creatureData) {\r\n            // console.log('entityId='+entityId)\r\n            let creature = creatureMap.get(entityId) as Creature;\r\n            if (creature.creatureType == CreatureType.Monster) {  //怪物类型\r\n                let creatureClass = creature.characterDefine.Class.toString();\r\n                //创建公告怪物\r\n                if (creatureClass == CharacterClass[CharacterClass.NoticeMonsters]) {\r\n                    let frameCount = creature.deathFrameId + MathUtil.secondToFrame(creature.spawnRuleDefine.SpawnPeriod);  //创建帧数\r\n                    if (creature.IsDeath && frameId == frameCount) {\r\n                        //根据刷怪id查询\r\n                        this.noticeSpawnRuleId++;  //刷怪id+1\r\n                        let spawnRuleDefine = DataManager.Instance.spawnRules[this.noticeSpawnRuleId];  //获取刷怪规则\r\n                        let characterDefine = DataManager.Instance.characters[spawnRuleDefine.SpawnMonID];  //获取怪物角色定义\r\n\r\n                        //还存在公告怪物，创建\r\n                        if (characterDefine.Class.toString() == CharacterClass[CharacterClass.NoticeMonsters]) {\r\n                            //清空父节点下的模型\r\n                            let characterParentNode = creature.node.parent;\r\n                            characterParentNode.removeAllChildren();\r\n                            let node:Node=null;\r\n                            if(this.noticeMonList.length > 0){\r\n                                node=this.noticeMonList.shift();  //删除第一个元素\r\n                            }\r\n                            let monster = await this.CreateMonster(characterDefine, TeamType2.Neutral, node, characterParentNode, spawnRuleDefine, parseInt(entityId), creature.birthPosition, creature.birthRotation);\r\n                        }\r\n                    }\r\n                    continue;\r\n                }\r\n                //创建怪物，配置周期刷怪时间创建\r\n                if (creatureClass == CharacterClass[CharacterClass.Monsters]) {\r\n                    let frameCount = creature.deathFrameId + MathUtil.secondToFrame(creature.spawnRuleDefine.SpawnPeriod);  //创建帧数\r\n                    if (creature.IsDeath && frameId == frameCount) {\r\n                        let spawnRuleDefine = creature.spawnRuleDefine;  //获取刷怪规则\r\n                        let characterDefine = creature.characterDefine;  //获取怪物角色定义\r\n\r\n                        if (!spawnRuleDefine.IsSpawnPeriod) {  //不是周期刷怪\r\n                            continue;\r\n                        }\r\n\r\n                        //清空父节点下的模型\r\n                        let characterParentNode = creature.node.parent;\r\n                        characterParentNode.removeAllChildren();\r\n                        let node=null;\r\n                        if(characterParentNode.name.indexOf('_') != -1){  //红队\r\n                            node=this.monMap.get(characterDefine.ID)[1];\r\n                        }else{  //蓝队\r\n                            node=this.monMap.get(characterDefine.ID)[0];\r\n                        }\r\n                        let monster = await this.CreateMonster(characterDefine, TeamType2.Neutral, node, characterParentNode, spawnRuleDefine, parseInt(entityId), creature.birthPosition, creature.birthRotation);\r\n\r\n                    }\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n        //创建小兵，配置周期刷怪时间创建\r\n       let soldierWaveCreateCount = DataManager.Instance.gameConfig.SoldierWaveCreateCount;  //每波创建数量\r\n        //创建数量超过每波数量，判断下波帧数是否到达\r\n        if (this.soldierCreateCount >= soldierWaveCreateCount) {\r\n            let frameCount = this.soldierCreateFrameId + MathUtil.secondToFrame(DataManager.Instance.gameConfig.SoldierWaveWaitTime);  //下波创建帧数\r\n            if (frameId == frameCount) {  //到了可以创建的帧\r\n                this.soldierCreateCount = 0;\r\n                this.soldierCreateFrameId = frameId;\r\n                this.soldierCreateWaveCount++;\r\n            }\r\n        }\r\n        //创建数量小于每波创建数量，开始创建\r\n        if (this.soldierCreateCount < soldierWaveCreateCount) {\r\n            //根据当前最新创建的小兵索引取\r\n            if(this.soldierCreateIndex >= this.soldierCharacterDefineList.length){\r\n                this.soldierCreateIndex=0;\r\n            }\r\n           let characterDefine = this.soldierCharacterDefineList[this.soldierCreateIndex];\r\n           let spawnRuleDefine = DataUtil.querySpawnRulesByMonID(characterDefine.ID)[0];\r\n           let frameCount = this.soldierCreateFrameId + MathUtil.secondToFrame(spawnRuleDefine.SpawnPeriod);  //每波中的创建帧数\r\n        //    console.log('每波中的创建帧数:'+frameId +'，'+ frameCount)\r\n           if (frameId != frameCount) {  //未到可以创建的帧\r\n               return;\r\n           }\r\n           this.soldierCreateFrameId = frameId;  //更新创建小兵帧数\r\n\r\n           let soldierCount = CreatureManager.Instance.GetCountByClass(CharacterClass.Soldier);  //当前战场小兵数量\r\n           if(soldierCount >= DataManager.Instance.gameConfig.SoldierMaxCount){\r\n               console.log('小兵数量达到上限：'+soldierCount)\r\n              return;\r\n           }\r\n           \r\n           let isGuardCart = (this.soldierCreateWaveCount==0 ? true : false);  //是否守护镖车\r\n           this.soldierCreateIndex++;  //更新创建小兵索引\r\n            let blueSoldierCardDir=this.soldierCardDir;\r\n            for(let positionVo of this.blueSoldierPosList){\r\n                let parentNode=new Node();\r\n                BattleManager.Instance.spawnMonsterNode.addChild(parentNode);\r\n                // let nodeList=this.blueSoldierMap.get(characterDefine.ID) as Array<Node>;\r\n                // console.log('blue nodeList len='+nodeList.length)\r\n                // let node=nodeList.shift();\r\n                let monster = await this.CreateMonster(characterDefine, TeamType2.Blue, null, parentNode, spawnRuleDefine, null, positionVo.position, positionVo.rotation);\r\n                monster.isGuardCart=isGuardCart;\r\n                if(isGuardCart){\r\n                  monster.soldierCardDir=blueSoldierCardDir;\r\n                  blueSoldierCardDir++;\r\n                }\r\n                this.soldierCreateCount++;\r\n            }\r\n            let redSoldierCardDir=this.soldierCardDir;\r\n            for(let positionVo of this.redSoldierPosList){\r\n                let parentNode=new Node();\r\n                BattleManager.Instance.spawnMonsterNode.addChild(parentNode);\r\n                // let nodeList=this.redSoldierMap.get(characterDefine.ID) as Array<Node>;\r\n                // console.log('red nodeList len='+nodeList.length)\r\n                // let node=nodeList.shift();\r\n                let monster = await this.CreateMonster(characterDefine, TeamType2.Red, null, parentNode, spawnRuleDefine, null, positionVo.position, positionVo.rotation);\r\n                monster.isGuardCart=isGuardCart;\r\n                if(isGuardCart){\r\n                  monster.soldierCardDir=redSoldierCardDir;\r\n                  redSoldierCardDir++;\r\n                }\r\n            }\r\n            if(isGuardCart){  //更新小兵在镖车的方向\r\n                this.soldierCardDir += 2;\r\n            }\r\n            console.log('创建小兵：'+this.soldierCreateCount+'，isGuardCart：'+isGuardCart+'，soldierCardDir：'+this.soldierCardDir)\r\n        } \r\n    }\r\n\r\n    // private timerTemp:number=0;\r\n    public update(dt:number){\r\n        // this.timerTemp += dt;\r\n        // if(this.timerTemp >= 3){ //每3秒创建一次\r\n        //     this.timerTemp=0;\r\n        //     //创建小兵\r\n        //     this.CreateSoldier(TeamType2.Blue);\r\n        //     this.CreateSoldier(TeamType2.Red);\r\n        // }\r\n    }\r\n\r\n}"]}