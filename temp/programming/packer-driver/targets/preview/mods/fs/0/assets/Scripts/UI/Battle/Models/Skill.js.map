{"version":3,"sources":["file:///D:/LearningFrameWork/MobaYan/Moba/Src/Client/assets/Scripts/UI/Battle/Models/Skill.ts"],"names":["Skill","Vec3","SkillStatus","DataManager","Bullet","SkillResult","TargetType","TriggerType","NetConfig","SkillHitInfo","DamageInfo","RandomUtil","CreatureManager","LogicRenderConvert","MathUtil","EffectType","AniState","constructor","skillId","owner","None","Array","Owner","Define","Instance","skills","characterDefine","ID","Instant","CastTime","Duration","HitTimes","length","CanCast","context","Status","Casting","CastTarget","toString","SelectedRange","console","log","RenderToLogic_Value","positionX","positionZ","CastRange","Distance3","OutOfRange","cd","CoolDown","Ok","Cast","result","SetAnim","SkillAnim","castingTime","skillTime","CD","Context","Hit","Bullets","AddBuff","SkillCast","Target","DoHit","StartSkill","Name","Running","AOEEffect","renderVec3","PlayEffect2","Position","PlayEffect","Self","trigger","target","Buff","buffId","buffDefine","buffs","Trigger","AddBuf","LogicUpdate","frameId","UpdateCD","UpdateCasting","UpdateSkill","frameTime","Interval","finish","bullet","Stoped","InitHitInfo","isBullet","hitInfo","casterId","Caster","entityId","hitId","RangeTarget","creatureArr","GetRangeTargetList","CastBullet","DoHit2","HitRange","StraightLine","HitTarget","BulletResource","push","radius","blowsNum","isRangeTarget","logicPosition","x","z","BlowsNum","AOERange","FindUnitsInRange","teamType2","index","newDegree","Math","round","GetAngle","RotateHandle","hit","damage","CalcSkillDamage","Damage","Crit","DoDamage","Damages","SkillHit","HitEffect","caster","attFator","ATTFator","final","attributes","ATT","DEF","isCrit","IsCrit","CRI","max","floor","crit","limit"],"mappings":"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","sourcesContent":["import { Creature } from \"../Enities/Creature\";\r\nimport { SkillDefine } from \"../../../Data/SkillDefine\";\r\nimport { SkillStatus } from \"../enums/SkillStatus\";\r\nimport { BattleContext } from \"./BattleContext\";\r\nimport { DataManager } from \"../../../Managers/DataManager\";\r\nimport { Bullet } from \"./Bullet\";\r\nimport { SkillResult } from \"../enums/SkillResult\";\r\nimport { TargetType } from \"../enums/TargetType\";\r\nimport { TriggerType } from \"../enums/TriggerType\";\r\nimport { NetConfig } from \"../../../Network/NetConfig\";\r\nimport { SkillHitInfo } from \"../Vo/SkillHitInfo\";\r\nimport { Vec3 } from \"cc\";\r\nimport { DamageInfo } from \"../Vo/DamageInfo\";\r\nimport { RandomUtil } from \"../Utils/RandomUtil\";\r\nimport { CreatureManager } from \"../Managers/CreatureManager\";\r\nimport { CreatureType } from \"../enums/CreatureType\";\r\nimport { LogicRenderConvert } from \"../Utils/LogicRenderConvert\";\r\nimport { MathUtil } from \"../../../Utils/MathUtil\";\r\nimport { EffectType } from \"../Effects/EffectType\";\r\nimport { AniState } from \"../enums/AniState\";\r\n\r\nexport class Skill{\r\n        public skillId:number;\r\n        public Owner:Creature;\r\n        public Define:SkillDefine;\r\n\r\n        public Status:SkillStatus=SkillStatus.None;\r\n\r\n        public cd:number = 0;\r\n\r\n        private castingTime:number = 0;\r\n        private skillTime:number = 0;\r\n        private Hit:number = 0;\r\n        public Context:BattleContext;\r\n        private frameId:number;  //当前逻辑帧\r\n\r\n       public Bullets = new Array<Bullet>();\r\n\r\n       public constructor(skillId:number, owner:Creature)\r\n       {\r\n           this.skillId = skillId;\r\n           this.Owner = owner;\r\n           this.Define = DataManager.Instance.skills[this.Owner.characterDefine.ID][this.skillId];\r\n       }\r\n\r\n        public get Instant():boolean {\r\n                if (this.Define.CastTime > 0) return false;\r\n                if (this.Define.Bullet) return false;\r\n                if (this.Define.Duration > 0) return false;\r\n                if (this.Define.HitTimes != null && this.Define.HitTimes.length > 0) return false;\r\n                return true;\r\n        }\r\n\r\n\r\n        public CanCast(context:BattleContext):SkillResult\r\n        {\r\n            if(this.Status != SkillStatus.None)\r\n            {\r\n                return SkillResult.Casting;\r\n            }\r\n            // if(this.Define.CastTarget == TargetType.Target)\r\n            // {\r\n            //     if (!context.Target || context.Target == this.Owner)\r\n            //         return SkillResult.InvalidTarget;\r\n\r\n            //     let distance = this.Owner.Distance(context.Target);\r\n            //     if(distance > this.Define.CastRange)\r\n            //     {\r\n            //         return SkillResult.OutOfRange;\r\n            //     }\r\n            // }\r\n\r\n            // if (this.Define.CastTarget == TargetType.Position)\r\n            // {\r\n            //     if (!context.Position)\r\n            //         return SkillResult.InvalidTarget;\r\n            //     if(this.Owner.Distance2(context.Position) > this.Define.CastRange)\r\n            //     {\r\n            //         return SkillResult.OutOfRange;\r\n            //     }\r\n            // }\r\n            if (this.Define.CastTarget.toString() == TargetType[TargetType.SelectedRange]){  //选择范围\r\n                console.log('positionX：'+LogicRenderConvert.RenderToLogic_Value(context.positionX)+'，positionZ：'+LogicRenderConvert.RenderToLogic_Value(context.positionZ)+'，CastRange：'+LogicRenderConvert.RenderToLogic_Value(this.Define.CastRange)+\r\n                '，dis：'+this.Owner.Distance3(LogicRenderConvert.RenderToLogic_Value(context.positionX), LogicRenderConvert.RenderToLogic_Value(context.positionZ)))\r\n\r\n                if(this.Owner.Distance3(LogicRenderConvert.RenderToLogic_Value(context.positionX), LogicRenderConvert.RenderToLogic_Value(context.positionZ)) > LogicRenderConvert.RenderToLogic_Value(this.Define.CastRange)){\r\n                    return SkillResult.OutOfRange;\r\n                }\r\n            }\r\n\r\n            if(this.cd > 0)\r\n            {\r\n                return SkillResult.CoolDown;\r\n            }\r\n            return SkillResult.Ok;\r\n        }\r\n\r\n        public Cast(context:BattleContext):SkillResult\r\n        {\r\n            let result = this.CanCast(context);\r\n            if (result == SkillResult.Ok)\r\n            {\r\n                this.Owner.SetAnim(AniState[this.Define.SkillAnim], true); //播放动作\r\n                this.castingTime = 0;\r\n                this.skillTime = 0;\r\n                this.cd = this.Define.CD;\r\n                this.Context = context;\r\n                this.Hit = 0;\r\n                this.Bullets=[];\r\n\r\n                this.AddBuff(TriggerType.SkillCast,this.Context.Target);\r\n\r\n                if (this.Instant)\r\n                {\r\n                    this.DoHit();\r\n                }\r\n                else\r\n                {\r\n                    if (this.Define.CastTime > 0)\r\n                    {\r\n                        this.Status = SkillStatus.Casting;\r\n                    }\r\n                    else\r\n                    {\r\n                        this.StartSkill();\r\n                    }\r\n                }\r\n\r\n                this.cd = this.Define.CD;\r\n            }\r\n            console.log(\"Skill[{0}].Cast Result:[{1}] Status:{2}\",this.Define.Name,result,this.Status);\r\n            return result;\r\n        }\r\n\r\n        /// <summary>\r\n        /// 技能执行开始\r\n        /// </summary>\r\n        private StartSkill()\r\n        {\r\n            this.Status = SkillStatus.Running;\r\n            console.log('Skill StartSkill')\r\n            if (this.Define.AOEEffect)\r\n            {\r\n                if (this.Define.CastTarget.toString() == TargetType[TargetType.SelectedRange])  //选择范围\r\n                {\r\n                    let renderVec3:Vec3 = new Vec3(this.Context.positionX, 0, this.Context.positionZ);\r\n                    this.Owner.PlayEffect2(EffectType.Position, this.Define.AOEEffect, renderVec3);\r\n                }\r\n                else if (this.Define.CastTarget.toString() == TargetType[TargetType.Target])   //目标\r\n                {\r\n                    this.Owner.PlayEffect(EffectType.Position, this.Define.AOEEffect, this.Context.Target);\r\n                }\r\n                else if (this.Define.CastTarget.toString() == TargetType[TargetType.Self])  //自己\r\n                {\r\n                    this.Owner.PlayEffect(EffectType.Position, this.Define.AOEEffect, this.Owner);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        private AddBuff(trigger:TriggerType,target:Creature)\r\n        {\r\n            if (this.Define.Buff == null || this.Define.Buff.length == 0) return;\r\n            // console.log('Define.Buff='+this.Define.Buff);\r\n            for(var buffId of this.Define.Buff)\r\n            {\r\n                if(!buffId){\r\n                    continue;\r\n                }\r\n                var buffDefine = DataManager.Instance.buffs[buffId];\r\n                console.log(buffId +'=='+ buffDefine);\r\n\r\n                if (buffDefine.Trigger.toString() != TriggerType[trigger]) continue; //触发类型不一致\r\n                console.log('buffDefine.Target='+buffDefine.Target.toString());\r\n                \r\n                if (buffDefine.Target.toString() == TargetType[TargetType.Self])\r\n                {\r\n                    this.Owner.AddBuf(this.Context, buffDefine);\r\n                }else if(buffDefine.Target.toString() == TargetType[TargetType.Target])\r\n                {\r\n                    if(!target){\r\n                        continue;\r\n                    }\r\n                    target.AddBuf(this.Context, buffDefine);\r\n                }\r\n            }\r\n        }\r\n\r\n        public LogicUpdate(frameId: number)\r\n        {\r\n            this.frameId = frameId;\r\n            this.UpdateCD();\r\n            if (this.Status == SkillStatus.Casting)     //前摇状态\r\n            {\r\n                this.UpdateCasting();\r\n            }\r\n            else if (this.Status == SkillStatus.Running)  //执行中\r\n            {\r\n                this.UpdateSkill();\r\n            }\r\n        }\r\n        \r\n        /**\r\n         * 更新前摇时间\r\n         */\r\n        private UpdateCasting()\r\n        {\r\n            if(this.castingTime < this.Define.CastTime)\r\n            {\r\n                this.castingTime += NetConfig.frameTime; //Time.deltaTime;\r\n            }\r\n            else\r\n            {\r\n                this.castingTime = 0;\r\n                this.StartSkill();\r\n                console.log(\"Skill[{0}].UpdateCasting Finish\", this.Define.Name);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 更新cd时间\r\n         */\r\n        private UpdateCD()\r\n        {\r\n\r\n            if (this.cd > 0)\r\n            {\r\n                this.cd -= NetConfig.frameTime; //Time.deltaTime;\r\n            }\r\n            if (this.cd < 0)\r\n                this.cd = 0;\r\n        }\r\n\r\n        /**\r\n         * 更新技能\r\n         */\r\n        private UpdateSkill()\r\n        {\r\n            this.skillTime += NetConfig.frameTime; //Time.deltaTime;\r\n            //持续技能\r\n            if (this.Define.Duration > 0)\r\n            {  \r\n                // console.log('UpdateSkill skillTime：'+this.skillTime+'=='+(this.Define.Interval * (this.Hit + 1))+'=='+ this.Define.Interval)\r\n                if(this.skillTime > this.Define.Interval * (this.Hit + 1))\r\n                {\r\n                    this.DoHit();\r\n                }\r\n\r\n                if(this.skillTime >= this.Define.Duration)\r\n                {\r\n                    this.Status = SkillStatus.None;\r\n                    console.log(\"Skill[{0}].UpdateSkill Finish\", this.Define.Name);\r\n                }\r\n            }\r\n            else if(this.Define.HitTimes  && this.Define.HitTimes.length > 0)\r\n            {\r\n                if(this.Hit < this.Define.HitTimes.length)\r\n                {\r\n                    if(this.skillTime > this.Define.HitTimes[this.Hit])\r\n                    {\r\n                        this.DoHit();\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    if (!this.Define.Bullet)\r\n                    {\r\n                        this.Status = SkillStatus.None;\r\n                        console.log(\"Skill[{0}].UpdateSkill Finish\", this.Define.Name);\r\n                    }\r\n                }\r\n            }\r\n            if (this.Define.Bullet)\r\n            {\r\n                let finish:boolean = true;\r\n                for (let bullet of this.Bullets)\r\n                {\r\n                    bullet.LogicUpdate();\r\n                    if (!bullet.Stoped) finish = false;\r\n                }\r\n\r\n                if(finish && this.Hit >= this.Define.HitTimes.length)\r\n                {\r\n                    this.Status = SkillStatus.None;\r\n                    console.log(\"Skill[{0}].UpdateSkill Finish\", this.Define.Name);\r\n                }\r\n            }\r\n        }\r\n\r\n        private InitHitInfo(isBullet:boolean):SkillHitInfo\r\n        {\r\n            let hitInfo = new SkillHitInfo();\r\n            hitInfo.casterId = this.Context.Caster.entityId;\r\n            hitInfo.skillId = this.skillId;\r\n            hitInfo.hitId = this.Hit;\r\n            hitInfo.isBullet = isBullet;           \r\n            return hitInfo;\r\n        }\r\n\r\n        private DoHit()\r\n        {\r\n           let hitInfo= this.InitHitInfo(false);\r\n            console.log(\"Skill[{0}].DoHit:[{1}]\", this.Define.Name, this.Hit);\r\n\r\n            this.Hit++;\r\n\r\n            if (this.Define.Bullet)  //是子弹\r\n            {\r\n                if (this.Define.CastTarget.toString() == TargetType[TargetType.RangeTarget])  //范围目标\r\n                {\r\n                    console.log('DoHit 范围目标并且是子弹')\r\n                  let creatureArr = this.GetRangeTargetList();\r\n                  for(var target of creatureArr){\r\n                    this.CastBullet(hitInfo, target);\r\n                  }\r\n                  return;\r\n                }\r\n                this.CastBullet(hitInfo, this.Context.Target);\r\n                return;\r\n            }\r\n            this.DoHit2(hitInfo);\r\n        }\r\n\r\n        public DoHit2(hitInfo:SkillHitInfo)\r\n        {\r\n            // this.Context.AddHitInfo(hitInfo);\r\n            console.log(\"Skill[{0}].DoHit2[{1}] IsBullet:{2}\",this.Define.Name,hitInfo.hitId,hitInfo.isBullet);\r\n\r\n            if((this.Define.CastTarget.toString() == TargetType[TargetType.RangeTarget] && !this.Define.Bullet) || \r\n               this.Define.CastTarget.toString() == TargetType[TargetType.SelectedRange]){\r\n                this.HitRange(hitInfo);\r\n                return;\r\n            }\r\n\r\n            if(this.Define.CastTarget.toString() == TargetType[TargetType.Target] || \r\n               this.Define.CastTarget.toString() == TargetType[TargetType.StraightLine] || \r\n               (this.Define.CastTarget.toString() == TargetType[TargetType.RangeTarget] && this.Define.Bullet)) {\r\n                this.HitTarget(this.Context.Target, hitInfo);\r\n            }\r\n        }\r\n\r\n        private CastBullet(hitInfo:SkillHitInfo, target:Creature) {\r\n        //   this.Context.AddHitInfo(hitInfo);\r\n          console.log(\"Skill[{0}].CastBullet[{1}]\",this.Define.Name,this.Define.BulletResource);\r\n          let bullet = new Bullet(this, target, hitInfo);\r\n          this.Bullets.push(bullet);\r\n\r\n        }\r\n\r\n\r\n        /**\r\n         * 获取范围目标集合\r\n         */\r\n        private GetRangeTargetList():Array<Creature> {\r\n            let positionX: number;\r\n            let positionZ: number;\r\n            let radius: number;  //半径\r\n            let blowsNum:number;   //个数\r\n            let isRangeTarget:boolean = false;  //范围目标\r\n\r\n            if(this.Define.CastTarget.toString() == TargetType[TargetType.RangeTarget]){\r\n                positionX = this.Owner.logicPosition.x;\r\n                positionZ = this.Owner.logicPosition.z;\r\n                radius = this.Define.CastRange;\r\n                blowsNum = this.Define.BlowsNum || -1;\r\n                isRangeTarget = true;\r\n            }else if(this.Define.CastTarget.toString() == TargetType[TargetType.SelectedRange]){\r\n                positionX = LogicRenderConvert.RenderToLogic_Value(this.Context.positionX);\r\n                positionZ = LogicRenderConvert.RenderToLogic_Value(this.Context.positionZ);\r\n                radius = this.Define.AOERange;\r\n                blowsNum = this.Define.BlowsNum || -1;\r\n            }\r\n            let creatureArr = CreatureManager.Instance.FindUnitsInRange(positionX, positionZ, LogicRenderConvert.RenderToLogic_Value(radius), blowsNum, this.Owner.teamType2, isRangeTarget);\r\n            console.log('GetRangeTargetList creatureArr：'+creatureArr.length)\r\n            if(creatureArr.length > 0){\r\n                let index=0;\r\n              for(var target of creatureArr){\r\n                  if(isRangeTarget && index == 0 && blowsNum==1){  //搜索1个敌人，朝向目标\r\n                    let newDegree = Math.round(MathUtil.GetAngle(target.logicPosition.z - this.Owner.logicPosition.z, target.logicPosition.x - this.Owner.logicPosition.x));\r\n                    newDegree = (newDegree < 0 ? newDegree + 360 : newDegree);\r\n                    //角色旋转\r\n                     this.Owner.RotateHandle(newDegree);\r\n                     break;\r\n                  }\r\n                  index++;\r\n                //   console.log('target dir='+target.dir)\r\n              }\r\n            }\r\n            return creatureArr;\r\n        }\r\n\r\n        private HitRange(hit:SkillHitInfo)\r\n        {\r\n          let creatureArr = this.GetRangeTargetList();\r\n          for(var target of creatureArr){\r\n            this.HitTarget(target, hit);          \r\n          }\r\n        }\r\n        \r\n\r\n        private HitTarget(target:Creature, hit:SkillHitInfo)\r\n        {\r\n            if (this.Define.CastTarget == TargetType.Self && (target != this.Context.Caster)) return;\r\n            else if (target == this.Context.Caster) return;\r\n\r\n            let damage = this.CalcSkillDamage(this.Context.Caster, target);\r\n            console.log(\"Skill[{0}].HitTarget[{1}] Damage:{2} Crit:{3}\", this.Define.Name, target.characterDefine.Name, damage.Damage, damage.Crit);\r\n            target.DoDamage(damage, this.Context.Caster);\r\n            hit.Damages.push(damage);\r\n\r\n            this.AddBuff(TriggerType.SkillHit, target);\r\n\r\n            //播放受击特效\r\n            if(this.Define.HitEffect)\r\n            {\r\n              target.PlayEffect(EffectType.Hit, this.Define.HitEffect, target);\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        /*\r\n         * 战斗计算\r\n         */\r\n        private CalcSkillDamage(caster:Creature, target:Creature):DamageInfo\r\n        {\r\n            let attFator=this.Define.ATTFator; //技能攻击系数\r\n            //计算伤害\r\n            let final = caster.attributes.ATT*attFator*(1-target.attributes.DEF/(602+target.attributes.DEF));\r\n            let isCrit = this.IsCrit(caster.attributes.CRI);\r\n            if (isCrit){\r\n                final = final * 1.5;  //暴击伤害1.5倍\r\n            }\r\n\r\n            let damage = new DamageInfo();\r\n            damage.entityId = target.entityId;\r\n            damage.Damage = Math.max(1, Math.floor(final));\r\n            damage.Crit = isCrit;\r\n            return damage;\r\n        }\r\n\r\n        private IsCrit(crit:number):boolean\r\n        {\r\n            return RandomUtil.limit(0, 1) < crit;\r\n        }\r\n}"]}